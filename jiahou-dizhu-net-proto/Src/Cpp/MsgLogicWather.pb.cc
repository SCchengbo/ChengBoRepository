// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgLogicWather.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgLogicWather.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoNet {

namespace {

const ::google::protobuf::Descriptor* ReqSeatDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqSeatDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResSeatDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResSeatDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqBeWather_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqBeWather_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResBeWather_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResBeWather_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyAddWather_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyAddWather_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyRemoveWather_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyRemoveWather_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgLogicWather_2eproto() {
  protobuf_AddDesc_MsgLogicWather_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgLogicWather.proto");
  GOOGLE_CHECK(file != NULL);
  ReqSeatDown_descriptor_ = file->message_type(0);
  static const int ReqSeatDown_offsets_[1] = {
  };
  ReqSeatDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqSeatDown_descriptor_,
      ReqSeatDown::default_instance_,
      ReqSeatDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSeatDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSeatDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqSeatDown));
  ResSeatDown_descriptor_ = file->message_type(1);
  static const int ResSeatDown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSeatDown, result_),
  };
  ResSeatDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResSeatDown_descriptor_,
      ResSeatDown::default_instance_,
      ResSeatDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSeatDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSeatDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResSeatDown));
  ReqBeWather_descriptor_ = file->message_type(2);
  static const int ReqBeWather_offsets_[1] = {
  };
  ReqBeWather_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqBeWather_descriptor_,
      ReqBeWather::default_instance_,
      ReqBeWather_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBeWather, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBeWather, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqBeWather));
  ResBeWather_descriptor_ = file->message_type(3);
  static const int ResBeWather_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResBeWather, result_),
  };
  ResBeWather_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResBeWather_descriptor_,
      ResBeWather::default_instance_,
      ResBeWather_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResBeWather, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResBeWather, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResBeWather));
  ResNotifyAddWather_descriptor_ = file->message_type(4);
  static const int ResNotifyAddWather_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyAddWather, sdkcontroller_),
  };
  ResNotifyAddWather_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyAddWather_descriptor_,
      ResNotifyAddWather::default_instance_,
      ResNotifyAddWather_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyAddWather, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyAddWather, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyAddWather));
  ResNotifyRemoveWather_descriptor_ = file->message_type(5);
  static const int ResNotifyRemoveWather_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyRemoveWather, sdkcontroller_),
  };
  ResNotifyRemoveWather_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyRemoveWather_descriptor_,
      ResNotifyRemoveWather::default_instance_,
      ResNotifyRemoveWather_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyRemoveWather, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyRemoveWather, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyRemoveWather));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgLogicWather_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqSeatDown_descriptor_, &ReqSeatDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResSeatDown_descriptor_, &ResSeatDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqBeWather_descriptor_, &ReqBeWather::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResBeWather_descriptor_, &ResBeWather::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyAddWather_descriptor_, &ResNotifyAddWather::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyRemoveWather_descriptor_, &ResNotifyRemoveWather::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgLogicWather_2eproto() {
  delete ReqSeatDown::default_instance_;
  delete ReqSeatDown_reflection_;
  delete ResSeatDown::default_instance_;
  delete ResSeatDown_reflection_;
  delete ReqBeWather::default_instance_;
  delete ReqBeWather_reflection_;
  delete ResBeWather::default_instance_;
  delete ResBeWather_reflection_;
  delete ResNotifyAddWather::default_instance_;
  delete ResNotifyAddWather_reflection_;
  delete ResNotifyRemoveWather::default_instance_;
  delete ResNotifyRemoveWather_reflection_;
}

void protobuf_AddDesc_MsgLogicWather_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ProtoNet::protobuf_AddDesc_MsgCode_2eproto();
  ::ProtoNet::protobuf_AddDesc_MsgGate_2eproto();
  ::ProtoNet::protobuf_AddDesc_MsgLogic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024MsgLogicWather.proto\022\010ProtoNet\032\rMsgCod"
    "e.proto\032\rMsgGate.proto\032\016MsgLogic.proto\"\r"
    "\n\013ReqSeatDown\"7\n\013ResSeatDown\022(\n\006result\030\001"
    " \002(\0132\030.ProtoNet.ResponseResult\"\r\n\013ReqBeW"
    "ather\"7\n\013ResBeWather\022(\n\006result\030\001 \002(\0132\030.P"
    "rotoNet.ResponseResult\"D\n\022ResNotifyAddWa"
    "ther\022.\n\rsdkController\030\001 \002(\0132\027.ProtoNet.S"
    "dkController\"G\n\025ResNotifyRemoveWather\022.\n"
    "\rsdkController\030\001 \002(\0132\027.ProtoNet.SdkContr"
    "ollerB\031\n\027com.version.protobuf.pb", 392);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgLogicWather.proto", &protobuf_RegisterTypes);
  ReqSeatDown::default_instance_ = new ReqSeatDown();
  ResSeatDown::default_instance_ = new ResSeatDown();
  ReqBeWather::default_instance_ = new ReqBeWather();
  ResBeWather::default_instance_ = new ResBeWather();
  ResNotifyAddWather::default_instance_ = new ResNotifyAddWather();
  ResNotifyRemoveWather::default_instance_ = new ResNotifyRemoveWather();
  ReqSeatDown::default_instance_->InitAsDefaultInstance();
  ResSeatDown::default_instance_->InitAsDefaultInstance();
  ReqBeWather::default_instance_->InitAsDefaultInstance();
  ResBeWather::default_instance_->InitAsDefaultInstance();
  ResNotifyAddWather::default_instance_->InitAsDefaultInstance();
  ResNotifyRemoveWather::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgLogicWather_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgLogicWather_2eproto {
  StaticDescriptorInitializer_MsgLogicWather_2eproto() {
    protobuf_AddDesc_MsgLogicWather_2eproto();
  }
} static_descriptor_initializer_MsgLogicWather_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqSeatDown::ReqSeatDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqSeatDown::InitAsDefaultInstance() {
}

ReqSeatDown::ReqSeatDown(const ReqSeatDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqSeatDown::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqSeatDown::~ReqSeatDown() {
  SharedDtor();
}

void ReqSeatDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqSeatDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSeatDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqSeatDown_descriptor_;
}

const ReqSeatDown& ReqSeatDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogicWather_2eproto();
  return *default_instance_;
}

ReqSeatDown* ReqSeatDown::default_instance_ = NULL;

ReqSeatDown* ReqSeatDown::New() const {
  return new ReqSeatDown;
}

void ReqSeatDown::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqSeatDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqSeatDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqSeatDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqSeatDown::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSeatDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqSeatDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqSeatDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqSeatDown::MergeFrom(const ReqSeatDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqSeatDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSeatDown::CopyFrom(const ReqSeatDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSeatDown::IsInitialized() const {

  return true;
}

void ReqSeatDown::Swap(ReqSeatDown* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqSeatDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqSeatDown_descriptor_;
  metadata.reflection = ReqSeatDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResSeatDown::kResultFieldNumber;
#endif  // !_MSC_VER

ResSeatDown::ResSeatDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResSeatDown::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResSeatDown::ResSeatDown(const ResSeatDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResSeatDown::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResSeatDown::~ResSeatDown() {
  SharedDtor();
}

void ResSeatDown::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResSeatDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResSeatDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResSeatDown_descriptor_;
}

const ResSeatDown& ResSeatDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogicWather_2eproto();
  return *default_instance_;
}

ResSeatDown* ResSeatDown::default_instance_ = NULL;

ResSeatDown* ResSeatDown::New() const {
  return new ResSeatDown;
}

void ResSeatDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResSeatDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResSeatDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResSeatDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResSeatDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResSeatDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResSeatDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResSeatDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResSeatDown::MergeFrom(const ResSeatDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResSeatDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResSeatDown::CopyFrom(const ResSeatDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResSeatDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResSeatDown::Swap(ResSeatDown* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResSeatDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResSeatDown_descriptor_;
  metadata.reflection = ResSeatDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqBeWather::ReqBeWather()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqBeWather::InitAsDefaultInstance() {
}

ReqBeWather::ReqBeWather(const ReqBeWather& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqBeWather::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqBeWather::~ReqBeWather() {
  SharedDtor();
}

void ReqBeWather::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqBeWather::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqBeWather::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqBeWather_descriptor_;
}

const ReqBeWather& ReqBeWather::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogicWather_2eproto();
  return *default_instance_;
}

ReqBeWather* ReqBeWather::default_instance_ = NULL;

ReqBeWather* ReqBeWather::New() const {
  return new ReqBeWather;
}

void ReqBeWather::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqBeWather::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqBeWather::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqBeWather::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqBeWather::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqBeWather::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqBeWather* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqBeWather*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqBeWather::MergeFrom(const ReqBeWather& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqBeWather::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqBeWather::CopyFrom(const ReqBeWather& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqBeWather::IsInitialized() const {

  return true;
}

void ReqBeWather::Swap(ReqBeWather* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqBeWather::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqBeWather_descriptor_;
  metadata.reflection = ReqBeWather_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResBeWather::kResultFieldNumber;
#endif  // !_MSC_VER

ResBeWather::ResBeWather()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResBeWather::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResBeWather::ResBeWather(const ResBeWather& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResBeWather::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResBeWather::~ResBeWather() {
  SharedDtor();
}

void ResBeWather::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResBeWather::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResBeWather::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResBeWather_descriptor_;
}

const ResBeWather& ResBeWather::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogicWather_2eproto();
  return *default_instance_;
}

ResBeWather* ResBeWather::default_instance_ = NULL;

ResBeWather* ResBeWather::New() const {
  return new ResBeWather;
}

void ResBeWather::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResBeWather::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResBeWather::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResBeWather::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResBeWather::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResBeWather::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResBeWather* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResBeWather*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResBeWather::MergeFrom(const ResBeWather& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResBeWather::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResBeWather::CopyFrom(const ResBeWather& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResBeWather::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResBeWather::Swap(ResBeWather* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResBeWather::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResBeWather_descriptor_;
  metadata.reflection = ResBeWather_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyAddWather::kSdkControllerFieldNumber;
#endif  // !_MSC_VER

ResNotifyAddWather::ResNotifyAddWather()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyAddWather::InitAsDefaultInstance() {
  sdkcontroller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
}

ResNotifyAddWather::ResNotifyAddWather(const ResNotifyAddWather& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyAddWather::SharedCtor() {
  _cached_size_ = 0;
  sdkcontroller_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyAddWather::~ResNotifyAddWather() {
  SharedDtor();
}

void ResNotifyAddWather::SharedDtor() {
  if (this != default_instance_) {
    delete sdkcontroller_;
  }
}

void ResNotifyAddWather::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyAddWather::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyAddWather_descriptor_;
}

const ResNotifyAddWather& ResNotifyAddWather::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogicWather_2eproto();
  return *default_instance_;
}

ResNotifyAddWather* ResNotifyAddWather::default_instance_ = NULL;

ResNotifyAddWather* ResNotifyAddWather::New() const {
  return new ResNotifyAddWather;
}

void ResNotifyAddWather::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_sdkcontroller()) {
      if (sdkcontroller_ != NULL) sdkcontroller_->::ProtoNet::SdkController::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyAddWather::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.SdkController sdkController = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sdkcontroller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyAddWather::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.SdkController sdkController = 1;
  if (has_sdkcontroller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sdkcontroller(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyAddWather::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.SdkController sdkController = 1;
  if (has_sdkcontroller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sdkcontroller(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyAddWather::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.SdkController sdkController = 1;
    if (has_sdkcontroller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sdkcontroller());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyAddWather::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyAddWather* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyAddWather*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyAddWather::MergeFrom(const ResNotifyAddWather& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sdkcontroller()) {
      mutable_sdkcontroller()->::ProtoNet::SdkController::MergeFrom(from.sdkcontroller());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyAddWather::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyAddWather::CopyFrom(const ResNotifyAddWather& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyAddWather::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_sdkcontroller()) {
    if (!this->sdkcontroller().IsInitialized()) return false;
  }
  return true;
}

void ResNotifyAddWather::Swap(ResNotifyAddWather* other) {
  if (other != this) {
    std::swap(sdkcontroller_, other->sdkcontroller_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyAddWather::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyAddWather_descriptor_;
  metadata.reflection = ResNotifyAddWather_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyRemoveWather::kSdkControllerFieldNumber;
#endif  // !_MSC_VER

ResNotifyRemoveWather::ResNotifyRemoveWather()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyRemoveWather::InitAsDefaultInstance() {
  sdkcontroller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
}

ResNotifyRemoveWather::ResNotifyRemoveWather(const ResNotifyRemoveWather& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyRemoveWather::SharedCtor() {
  _cached_size_ = 0;
  sdkcontroller_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyRemoveWather::~ResNotifyRemoveWather() {
  SharedDtor();
}

void ResNotifyRemoveWather::SharedDtor() {
  if (this != default_instance_) {
    delete sdkcontroller_;
  }
}

void ResNotifyRemoveWather::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyRemoveWather::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyRemoveWather_descriptor_;
}

const ResNotifyRemoveWather& ResNotifyRemoveWather::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogicWather_2eproto();
  return *default_instance_;
}

ResNotifyRemoveWather* ResNotifyRemoveWather::default_instance_ = NULL;

ResNotifyRemoveWather* ResNotifyRemoveWather::New() const {
  return new ResNotifyRemoveWather;
}

void ResNotifyRemoveWather::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_sdkcontroller()) {
      if (sdkcontroller_ != NULL) sdkcontroller_->::ProtoNet::SdkController::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyRemoveWather::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.SdkController sdkController = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sdkcontroller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyRemoveWather::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.SdkController sdkController = 1;
  if (has_sdkcontroller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sdkcontroller(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyRemoveWather::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.SdkController sdkController = 1;
  if (has_sdkcontroller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sdkcontroller(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyRemoveWather::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.SdkController sdkController = 1;
    if (has_sdkcontroller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sdkcontroller());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyRemoveWather::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyRemoveWather* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyRemoveWather*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyRemoveWather::MergeFrom(const ResNotifyRemoveWather& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sdkcontroller()) {
      mutable_sdkcontroller()->::ProtoNet::SdkController::MergeFrom(from.sdkcontroller());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyRemoveWather::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyRemoveWather::CopyFrom(const ResNotifyRemoveWather& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyRemoveWather::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_sdkcontroller()) {
    if (!this->sdkcontroller().IsInitialized()) return false;
  }
  return true;
}

void ResNotifyRemoveWather::Swap(ResNotifyRemoveWather* other) {
  if (other != this) {
    std::swap(sdkcontroller_, other->sdkcontroller_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyRemoveWather::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyRemoveWather_descriptor_;
  metadata.reflection = ResNotifyRemoveWather_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoNet

// @@protoc_insertion_point(global_scope)
