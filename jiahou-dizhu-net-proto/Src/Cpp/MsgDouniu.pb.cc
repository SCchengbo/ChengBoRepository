// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgDouniu.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgDouniu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoNet {

namespace {

const ::google::protobuf::Descriptor* SmallCalculatePanel_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SmallCalculatePanel_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* SmallCalController_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SmallCalController_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* BigCalController_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BigCalController_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* BigCalculatePanel_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BigCalculatePanel_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* QiangzhuangOperate_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QiangzhuangOperate_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* YazhuOperate_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YazhuOperate_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* CardInfo_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CardInfo_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* PosGameInfo_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PosGameInfo_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControllerDispachInfo_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControllerDispachInfo_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* DouniuGameRoom_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DouniuGameRoom_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqQiangzhuang_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqQiangzhuang_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResQiangzhuang_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResQiangzhuang_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneQiangzhuang_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneQiangzhuang_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* LiangPaiOperate_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LiangPaiOperate_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyGameStart_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyGameStart_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyDispachCard_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyDispachCard_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqYazhu_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqYazhu_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResYazhu_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResYazhu_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneYazhu_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneYazhu_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyDispachLeftCard_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyDispachLeftCard_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqLiangPai_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqLiangPai_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResLiangPai_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResLiangPai_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneLiangPai_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneLiangPai_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqSmallCalculatePanel_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqSmallCalculatePanel_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResSmallCalculatePanel_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResSmallCalculatePanel_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqBigCalculatePanel_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqBigCalculatePanel_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResBigCalculatePanel_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResBigCalculatePanel_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqRecoverGameSceen_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqRecoverGameSceen_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResRecoverGameSceen_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResRecoverGameSceen_8854_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResTuoGuan_8854_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResTuoGuan_8854_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DouniuCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgDouniu_2eproto() {
  protobuf_AddDesc_MsgDouniu_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgDouniu.proto");
  GOOGLE_CHECK(file != NULL);
  SmallCalculatePanel_8854_descriptor_ = file->message_type(0);
  static const int SmallCalculatePanel_8854_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalculatePanel_8854, smallcalcontrollers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalculatePanel_8854, bankeruniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalculatePanel_8854, bankerpos_),
  };
  SmallCalculatePanel_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SmallCalculatePanel_8854_descriptor_,
      SmallCalculatePanel_8854::default_instance_,
      SmallCalculatePanel_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalculatePanel_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalculatePanel_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SmallCalculatePanel_8854));
  SmallCalController_8854_descriptor_ = file->message_type(1);
  static const int SmallCalController_8854_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalController_8854, winscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalController_8854, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalController_8854, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalController_8854, health_),
  };
  SmallCalController_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SmallCalController_8854_descriptor_,
      SmallCalController_8854::default_instance_,
      SmallCalController_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalController_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallCalController_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SmallCalController_8854));
  BigCalController_8854_descriptor_ = file->message_type(2);
  static const int BigCalController_8854_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, headimg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, nick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, winscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, niuniucount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, wincount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, losecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, tongshacount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, tongpeicount_),
  };
  BigCalController_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BigCalController_8854_descriptor_,
      BigCalController_8854::default_instance_,
      BigCalController_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalController_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BigCalController_8854));
  BigCalculatePanel_8854_descriptor_ = file->message_type(3);
  static const int BigCalculatePanel_8854_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalculatePanel_8854, controllers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalculatePanel_8854, roomerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalculatePanel_8854, roomid_),
  };
  BigCalculatePanel_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BigCalculatePanel_8854_descriptor_,
      BigCalculatePanel_8854::default_instance_,
      BigCalculatePanel_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalculatePanel_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigCalculatePanel_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BigCalculatePanel_8854));
  QiangzhuangOperate_8854_descriptor_ = file->message_type(4);
  static const int QiangzhuangOperate_8854_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QiangzhuangOperate_8854, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QiangzhuangOperate_8854, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QiangzhuangOperate_8854, maxfan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QiangzhuangOperate_8854, choosefan_),
  };
  QiangzhuangOperate_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QiangzhuangOperate_8854_descriptor_,
      QiangzhuangOperate_8854::default_instance_,
      QiangzhuangOperate_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QiangzhuangOperate_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QiangzhuangOperate_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QiangzhuangOperate_8854));
  YazhuOperate_8854_descriptor_ = file->message_type(5);
  static const int YazhuOperate_8854_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YazhuOperate_8854, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YazhuOperate_8854, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YazhuOperate_8854, maxfan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YazhuOperate_8854, choosefan_),
  };
  YazhuOperate_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      YazhuOperate_8854_descriptor_,
      YazhuOperate_8854::default_instance_,
      YazhuOperate_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YazhuOperate_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YazhuOperate_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(YazhuOperate_8854));
  CardInfo_8854_descriptor_ = file->message_type(6);
  static const int CardInfo_8854_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardInfo_8854, cardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardInfo_8854, cardcolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardInfo_8854, cardnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardInfo_8854, laizi_),
  };
  CardInfo_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CardInfo_8854_descriptor_,
      CardInfo_8854::default_instance_,
      CardInfo_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardInfo_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardInfo_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CardInfo_8854));
  PosGameInfo_8854_descriptor_ = file->message_type(7);
  static const int PosGameInfo_8854_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosGameInfo_8854, posbrife_),
  };
  PosGameInfo_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PosGameInfo_8854_descriptor_,
      PosGameInfo_8854::default_instance_,
      PosGameInfo_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosGameInfo_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosGameInfo_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PosGameInfo_8854));
  ControllerDispachInfo_8854_descriptor_ = file->message_type(8);
  static const int ControllerDispachInfo_8854_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerDispachInfo_8854, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerDispachInfo_8854, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerDispachInfo_8854, cardinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerDispachInfo_8854, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerDispachInfo_8854, multiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerDispachInfo_8854, istuoguan_),
  };
  ControllerDispachInfo_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ControllerDispachInfo_8854_descriptor_,
      ControllerDispachInfo_8854::default_instance_,
      ControllerDispachInfo_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerDispachInfo_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerDispachInfo_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ControllerDispachInfo_8854));
  DouniuGameRoom_8854_descriptor_ = file->message_type(9);
  static const int DouniuGameRoom_8854_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, roominfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, leftmatchcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, bankeruniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, gameing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, posgameinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, fan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, rubcard_),
  };
  DouniuGameRoom_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DouniuGameRoom_8854_descriptor_,
      DouniuGameRoom_8854::default_instance_,
      DouniuGameRoom_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DouniuGameRoom_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DouniuGameRoom_8854));
  ReqQiangzhuang_8854_descriptor_ = file->message_type(10);
  static const int ReqQiangzhuang_8854_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqQiangzhuang_8854, fan_),
  };
  ReqQiangzhuang_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqQiangzhuang_8854_descriptor_,
      ReqQiangzhuang_8854::default_instance_,
      ReqQiangzhuang_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqQiangzhuang_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqQiangzhuang_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqQiangzhuang_8854));
  ResQiangzhuang_8854_descriptor_ = file->message_type(11);
  static const int ResQiangzhuang_8854_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQiangzhuang_8854, result_),
  };
  ResQiangzhuang_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResQiangzhuang_8854_descriptor_,
      ResQiangzhuang_8854::default_instance_,
      ResQiangzhuang_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQiangzhuang_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQiangzhuang_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResQiangzhuang_8854));
  ResNotifySomeOneQiangzhuang_8854_descriptor_ = file->message_type(12);
  static const int ResNotifySomeOneQiangzhuang_8854_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneQiangzhuang_8854, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneQiangzhuang_8854, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneQiangzhuang_8854, fan_),
  };
  ResNotifySomeOneQiangzhuang_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneQiangzhuang_8854_descriptor_,
      ResNotifySomeOneQiangzhuang_8854::default_instance_,
      ResNotifySomeOneQiangzhuang_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneQiangzhuang_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneQiangzhuang_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneQiangzhuang_8854));
  LiangPaiOperate_8854_descriptor_ = file->message_type(13);
  static const int LiangPaiOperate_8854_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiangPaiOperate_8854, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiangPaiOperate_8854, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiangPaiOperate_8854, cardinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiangPaiOperate_8854, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiangPaiOperate_8854, multiple_),
  };
  LiangPaiOperate_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LiangPaiOperate_8854_descriptor_,
      LiangPaiOperate_8854::default_instance_,
      LiangPaiOperate_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiangPaiOperate_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiangPaiOperate_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LiangPaiOperate_8854));
  ResNotifyGameStart_8854_descriptor_ = file->message_type(14);
  static const int ResNotifyGameStart_8854_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameStart_8854, douniugameroom_),
  };
  ResNotifyGameStart_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyGameStart_8854_descriptor_,
      ResNotifyGameStart_8854::default_instance_,
      ResNotifyGameStart_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameStart_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameStart_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyGameStart_8854));
  ResNotifyDispachCard_8854_descriptor_ = file->message_type(15);
  static const int ResNotifyDispachCard_8854_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, recovercontrollerinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, operatetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, fanmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, qiangzhuangtimer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, maxyazhufan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, yazhutimer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, bankerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, bankerpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, canyu_),
  };
  ResNotifyDispachCard_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyDispachCard_8854_descriptor_,
      ResNotifyDispachCard_8854::default_instance_,
      ResNotifyDispachCard_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachCard_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyDispachCard_8854));
  ReqYazhu_8854_descriptor_ = file->message_type(16);
  static const int ReqYazhu_8854_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqYazhu_8854, yazhufan_),
  };
  ReqYazhu_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqYazhu_8854_descriptor_,
      ReqYazhu_8854::default_instance_,
      ReqYazhu_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqYazhu_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqYazhu_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqYazhu_8854));
  ResYazhu_8854_descriptor_ = file->message_type(17);
  static const int ResYazhu_8854_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResYazhu_8854, result_),
  };
  ResYazhu_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResYazhu_8854_descriptor_,
      ResYazhu_8854::default_instance_,
      ResYazhu_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResYazhu_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResYazhu_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResYazhu_8854));
  ResNotifySomeOneYazhu_8854_descriptor_ = file->message_type(18);
  static const int ResNotifySomeOneYazhu_8854_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneYazhu_8854, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneYazhu_8854, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneYazhu_8854, yazhufan_),
  };
  ResNotifySomeOneYazhu_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneYazhu_8854_descriptor_,
      ResNotifySomeOneYazhu_8854::default_instance_,
      ResNotifySomeOneYazhu_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneYazhu_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneYazhu_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneYazhu_8854));
  ResNotifyDispachLeftCard_8854_descriptor_ = file->message_type(19);
  static const int ResNotifyDispachLeftCard_8854_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachLeftCard_8854, cardinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachLeftCard_8854, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachLeftCard_8854, multiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachLeftCard_8854, timer_),
  };
  ResNotifyDispachLeftCard_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyDispachLeftCard_8854_descriptor_,
      ResNotifyDispachLeftCard_8854::default_instance_,
      ResNotifyDispachLeftCard_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachLeftCard_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyDispachLeftCard_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyDispachLeftCard_8854));
  ReqLiangPai_8854_descriptor_ = file->message_type(20);
  static const int ReqLiangPai_8854_offsets_[1] = {
  };
  ReqLiangPai_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqLiangPai_8854_descriptor_,
      ReqLiangPai_8854::default_instance_,
      ReqLiangPai_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLiangPai_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLiangPai_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqLiangPai_8854));
  ResLiangPai_8854_descriptor_ = file->message_type(21);
  static const int ResLiangPai_8854_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLiangPai_8854, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLiangPai_8854, cardinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLiangPai_8854, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLiangPai_8854, multiple_),
  };
  ResLiangPai_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResLiangPai_8854_descriptor_,
      ResLiangPai_8854::default_instance_,
      ResLiangPai_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLiangPai_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLiangPai_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResLiangPai_8854));
  ResNotifySomeOneLiangPai_8854_descriptor_ = file->message_type(22);
  static const int ResNotifySomeOneLiangPai_8854_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneLiangPai_8854, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneLiangPai_8854, cardinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneLiangPai_8854, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneLiangPai_8854, multiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneLiangPai_8854, pos_),
  };
  ResNotifySomeOneLiangPai_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneLiangPai_8854_descriptor_,
      ResNotifySomeOneLiangPai_8854::default_instance_,
      ResNotifySomeOneLiangPai_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneLiangPai_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneLiangPai_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneLiangPai_8854));
  ReqSmallCalculatePanel_8854_descriptor_ = file->message_type(23);
  static const int ReqSmallCalculatePanel_8854_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSmallCalculatePanel_8854, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSmallCalculatePanel_8854, times_),
  };
  ReqSmallCalculatePanel_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqSmallCalculatePanel_8854_descriptor_,
      ReqSmallCalculatePanel_8854::default_instance_,
      ReqSmallCalculatePanel_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSmallCalculatePanel_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSmallCalculatePanel_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqSmallCalculatePanel_8854));
  ResSmallCalculatePanel_8854_descriptor_ = file->message_type(24);
  static const int ResSmallCalculatePanel_8854_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSmallCalculatePanel_8854, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSmallCalculatePanel_8854, smallcalculatepanel_),
  };
  ResSmallCalculatePanel_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResSmallCalculatePanel_8854_descriptor_,
      ResSmallCalculatePanel_8854::default_instance_,
      ResSmallCalculatePanel_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSmallCalculatePanel_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSmallCalculatePanel_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResSmallCalculatePanel_8854));
  ReqBigCalculatePanel_8854_descriptor_ = file->message_type(25);
  static const int ReqBigCalculatePanel_8854_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBigCalculatePanel_8854, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBigCalculatePanel_8854, containsmall_),
  };
  ReqBigCalculatePanel_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqBigCalculatePanel_8854_descriptor_,
      ReqBigCalculatePanel_8854::default_instance_,
      ReqBigCalculatePanel_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBigCalculatePanel_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBigCalculatePanel_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqBigCalculatePanel_8854));
  ResBigCalculatePanel_8854_descriptor_ = file->message_type(26);
  static const int ResBigCalculatePanel_8854_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResBigCalculatePanel_8854, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResBigCalculatePanel_8854, bigcalculatepanel_),
  };
  ResBigCalculatePanel_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResBigCalculatePanel_8854_descriptor_,
      ResBigCalculatePanel_8854::default_instance_,
      ResBigCalculatePanel_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResBigCalculatePanel_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResBigCalculatePanel_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResBigCalculatePanel_8854));
  ReqRecoverGameSceen_8854_descriptor_ = file->message_type(27);
  static const int ReqRecoverGameSceen_8854_offsets_[1] = {
  };
  ReqRecoverGameSceen_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqRecoverGameSceen_8854_descriptor_,
      ReqRecoverGameSceen_8854::default_instance_,
      ReqRecoverGameSceen_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRecoverGameSceen_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRecoverGameSceen_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqRecoverGameSceen_8854));
  ResRecoverGameSceen_8854_descriptor_ = file->message_type(28);
  static const int ResRecoverGameSceen_8854_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, gameid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, roomstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, roominfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, douniugameroom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, qiangzhaungoperates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, yazhuoperates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, liangpaioperates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, recovercontrollerinfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, selfqiangzhuangmaxfan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, selfyazhumaxfan_),
  };
  ResRecoverGameSceen_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResRecoverGameSceen_8854_descriptor_,
      ResRecoverGameSceen_8854::default_instance_,
      ResRecoverGameSceen_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRecoverGameSceen_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResRecoverGameSceen_8854));
  ResTuoGuan_8854_descriptor_ = file->message_type(29);
  static const int ResTuoGuan_8854_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResTuoGuan_8854, istuoguan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResTuoGuan_8854, uniqueid_),
  };
  ResTuoGuan_8854_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResTuoGuan_8854_descriptor_,
      ResTuoGuan_8854::default_instance_,
      ResTuoGuan_8854_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResTuoGuan_8854, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResTuoGuan_8854, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResTuoGuan_8854));
  DouniuCode_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgDouniu_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SmallCalculatePanel_8854_descriptor_, &SmallCalculatePanel_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SmallCalController_8854_descriptor_, &SmallCalController_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BigCalController_8854_descriptor_, &BigCalController_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BigCalculatePanel_8854_descriptor_, &BigCalculatePanel_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QiangzhuangOperate_8854_descriptor_, &QiangzhuangOperate_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    YazhuOperate_8854_descriptor_, &YazhuOperate_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CardInfo_8854_descriptor_, &CardInfo_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PosGameInfo_8854_descriptor_, &PosGameInfo_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ControllerDispachInfo_8854_descriptor_, &ControllerDispachInfo_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DouniuGameRoom_8854_descriptor_, &DouniuGameRoom_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqQiangzhuang_8854_descriptor_, &ReqQiangzhuang_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResQiangzhuang_8854_descriptor_, &ResQiangzhuang_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneQiangzhuang_8854_descriptor_, &ResNotifySomeOneQiangzhuang_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LiangPaiOperate_8854_descriptor_, &LiangPaiOperate_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyGameStart_8854_descriptor_, &ResNotifyGameStart_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyDispachCard_8854_descriptor_, &ResNotifyDispachCard_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqYazhu_8854_descriptor_, &ReqYazhu_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResYazhu_8854_descriptor_, &ResYazhu_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneYazhu_8854_descriptor_, &ResNotifySomeOneYazhu_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyDispachLeftCard_8854_descriptor_, &ResNotifyDispachLeftCard_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqLiangPai_8854_descriptor_, &ReqLiangPai_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResLiangPai_8854_descriptor_, &ResLiangPai_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneLiangPai_8854_descriptor_, &ResNotifySomeOneLiangPai_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqSmallCalculatePanel_8854_descriptor_, &ReqSmallCalculatePanel_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResSmallCalculatePanel_8854_descriptor_, &ResSmallCalculatePanel_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqBigCalculatePanel_8854_descriptor_, &ReqBigCalculatePanel_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResBigCalculatePanel_8854_descriptor_, &ResBigCalculatePanel_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqRecoverGameSceen_8854_descriptor_, &ReqRecoverGameSceen_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResRecoverGameSceen_8854_descriptor_, &ResRecoverGameSceen_8854::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResTuoGuan_8854_descriptor_, &ResTuoGuan_8854::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgDouniu_2eproto() {
  delete SmallCalculatePanel_8854::default_instance_;
  delete SmallCalculatePanel_8854_reflection_;
  delete SmallCalController_8854::default_instance_;
  delete SmallCalController_8854_reflection_;
  delete BigCalController_8854::default_instance_;
  delete BigCalController_8854_reflection_;
  delete BigCalculatePanel_8854::default_instance_;
  delete BigCalculatePanel_8854_reflection_;
  delete QiangzhuangOperate_8854::default_instance_;
  delete QiangzhuangOperate_8854_reflection_;
  delete YazhuOperate_8854::default_instance_;
  delete YazhuOperate_8854_reflection_;
  delete CardInfo_8854::default_instance_;
  delete CardInfo_8854_reflection_;
  delete PosGameInfo_8854::default_instance_;
  delete PosGameInfo_8854_reflection_;
  delete ControllerDispachInfo_8854::default_instance_;
  delete ControllerDispachInfo_8854_reflection_;
  delete DouniuGameRoom_8854::default_instance_;
  delete DouniuGameRoom_8854_reflection_;
  delete ReqQiangzhuang_8854::default_instance_;
  delete ReqQiangzhuang_8854_reflection_;
  delete ResQiangzhuang_8854::default_instance_;
  delete ResQiangzhuang_8854_reflection_;
  delete ResNotifySomeOneQiangzhuang_8854::default_instance_;
  delete ResNotifySomeOneQiangzhuang_8854_reflection_;
  delete LiangPaiOperate_8854::default_instance_;
  delete LiangPaiOperate_8854_reflection_;
  delete ResNotifyGameStart_8854::default_instance_;
  delete ResNotifyGameStart_8854_reflection_;
  delete ResNotifyDispachCard_8854::default_instance_;
  delete ResNotifyDispachCard_8854_reflection_;
  delete ReqYazhu_8854::default_instance_;
  delete ReqYazhu_8854_reflection_;
  delete ResYazhu_8854::default_instance_;
  delete ResYazhu_8854_reflection_;
  delete ResNotifySomeOneYazhu_8854::default_instance_;
  delete ResNotifySomeOneYazhu_8854_reflection_;
  delete ResNotifyDispachLeftCard_8854::default_instance_;
  delete ResNotifyDispachLeftCard_8854_reflection_;
  delete ReqLiangPai_8854::default_instance_;
  delete ReqLiangPai_8854_reflection_;
  delete ResLiangPai_8854::default_instance_;
  delete ResLiangPai_8854_reflection_;
  delete ResNotifySomeOneLiangPai_8854::default_instance_;
  delete ResNotifySomeOneLiangPai_8854_reflection_;
  delete ReqSmallCalculatePanel_8854::default_instance_;
  delete ReqSmallCalculatePanel_8854_reflection_;
  delete ResSmallCalculatePanel_8854::default_instance_;
  delete ResSmallCalculatePanel_8854_reflection_;
  delete ReqBigCalculatePanel_8854::default_instance_;
  delete ReqBigCalculatePanel_8854_reflection_;
  delete ResBigCalculatePanel_8854::default_instance_;
  delete ResBigCalculatePanel_8854_reflection_;
  delete ReqRecoverGameSceen_8854::default_instance_;
  delete ReqRecoverGameSceen_8854_reflection_;
  delete ResRecoverGameSceen_8854::default_instance_;
  delete ResRecoverGameSceen_8854_reflection_;
  delete ResTuoGuan_8854::default_instance_;
  delete ResTuoGuan_8854_reflection_;
}

void protobuf_AddDesc_MsgDouniu_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ProtoNet::protobuf_AddDesc_MsgLogic_2eproto();
  ::ProtoNet::protobuf_AddDesc_MsgCode_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017MsgDouniu.proto\022\010ProtoNet\032\016MsgLogic.pr"
    "oto\032\rMsgCode.proto\"\205\001\n\030SmallCalculatePan"
    "el_8854\022>\n\023smallCalControllers\030\001 \003(\0132!.P"
    "rotoNet.SmallCalController_8854\022\026\n\016banke"
    "rUniqueId\030\002 \002(\t\022\021\n\tbankerPos\030\003 \002(\005\"Z\n\027Sm"
    "allCalController_8854\022\020\n\010winScore\030\001 \002(\005\022"
    "\020\n\010uniqueId\030\002 \002(\t\022\013\n\003pos\030\003 \002(\005\022\016\n\006health"
    "\030\004 \002(\005\"\316\001\n\025BigCalController_8854\022\017\n\007head"
    "Img\030\001 \002(\t\022\014\n\004nick\030\002 \002(\t\022\020\n\010uniqueId\030\003 \002("
    "\t\022\014\n\004head\030\004 \002(\005\022\020\n\010winScore\030\005 \002(\005\022\023\n\013niu"
    "niuCount\030\006 \002(\005\022\020\n\010winCount\030\007 \002(\005\022\021\n\tlose"
    "Count\030\010 \002(\005\022\024\n\014tongshaCount\030\t \002(\005\022\024\n\014ton"
    "gpeiCount\030\n \002(\005\"p\n\026BigCalculatePanel_885"
    "4\0224\n\013controllers\030\001 \003(\0132\037.ProtoNet.BigCal"
    "Controller_8854\022\020\n\010roomerId\030\002 \002(\t\022\016\n\006roo"
    "mId\030\003 \002(\t\"[\n\027QiangzhuangOperate_8854\022\013\n\003"
    "pos\030\001 \002(\005\022\020\n\010uniqueId\030\002 \002(\t\022\016\n\006maxFan\030\003 "
    "\002(\005\022\021\n\tchooseFan\030\004 \001(\005\"U\n\021YazhuOperate_8"
    "854\022\013\n\003pos\030\001 \002(\005\022\020\n\010uniqueId\030\002 \002(\t\022\016\n\006ma"
    "xFan\030\003 \002(\005\022\021\n\tchooseFan\030\004 \001(\005\"R\n\rCardInf"
    "o_8854\022\016\n\006cardId\030\001 \002(\t\022\021\n\tcardColor\030\002 \002("
    "\005\022\017\n\007cardNum\030\003 \002(\005\022\r\n\005laizi\030\004 \002(\010\"8\n\020Pos"
    "GameInfo_8854\022$\n\010posBrife\030\001 \002(\0132\022.ProtoN"
    "et.PosBrife\"\232\001\n\032ControllerDispachInfo_88"
    "54\022\020\n\010uniqueId\030\001 \002(\t\022\013\n\003pos\030\002 \002(\005\022*\n\tcar"
    "dInfos\030\003 \003(\0132\027.ProtoNet.CardInfo_8854\022\014\n"
    "\004type\030\004 \001(\005\022\020\n\010multiple\030\005 \001(\005\022\021\n\tisTuoGu"
    "an\030\006 \001(\005\"\333\001\n\023DouniuGameRoom_8854\022$\n\010room"
    "Info\030\001 \002(\0132\022.ProtoNet.RoomInfo\022\026\n\016leftMa"
    "tchCount\030\002 \002(\005\022\026\n\016bankerUniqueId\030\003 \001(\t\022\017"
    "\n\007gameing\030\004 \002(\010\0220\n\014posGameInfos\030\005 \003(\0132\032."
    "ProtoNet.PosGameInfo_8854\022\r\n\005model\030\006 \002(\005"
    "\022\013\n\003fan\030\007 \001(\005\022\017\n\007rubCard\030\010 \001(\005\"\"\n\023ReqQia"
    "ngzhuang_8854\022\013\n\003fan\030\001 \002(\005\"\?\n\023ResQiangzh"
    "uang_8854\022(\n\006result\030\001 \002(\0132\030.ProtoNet.Res"
    "ponseResult\"N\n ResNotifySomeOneQiangzhua"
    "ng_8854\022\020\n\010uniqueId\030\001 \002(\t\022\013\n\003pos\030\002 \002(\005\022\013"
    "\n\003fan\030\003 \002(\005\"\201\001\n\024LiangPaiOperate_8854\022\020\n\010"
    "uniqueId\030\001 \002(\t\022\013\n\003pos\030\002 \002(\005\022*\n\tcardInfos"
    "\030\003 \003(\0132\027.ProtoNet.CardInfo_8854\022\014\n\004type\030"
    "\004 \001(\005\022\020\n\010multiple\030\005 \001(\005\"P\n\027ResNotifyGame"
    "Start_8854\0225\n\016douniuGameRoom\030\001 \002(\0132\035.Pro"
    "toNet.DouniuGameRoom_8854\"\375\001\n\031ResNotifyD"
    "ispachCard_8854\022D\n\026recoverControllerInfo"
    "s\030\001 \003(\0132$.ProtoNet.ControllerDispachInfo"
    "_8854\022\023\n\013operateType\030\002 \002(\005\022\016\n\006fanMax\030\003 \001"
    "(\005\022\030\n\020qiangzhuangTimer\030\004 \001(\005\022\023\n\013maxYazhu"
    "Fan\030\005 \001(\005\022\022\n\nyazhuTimer\030\006 \001(\005\022\020\n\010bankerI"
    "d\030\007 \001(\t\022\021\n\tbankerPos\030\010 \001(\005\022\r\n\005canyu\030\t \001("
    "\t\"!\n\rReqYazhu_8854\022\020\n\010yazhuFan\030\001 \002(\005\"9\n\r"
    "ResYazhu_8854\022(\n\006result\030\001 \002(\0132\030.ProtoNet"
    ".ResponseResult\"M\n\032ResNotifySomeOneYazhu"
    "_8854\022\020\n\010uniqueId\030\001 \002(\t\022\013\n\003pos\030\002 \002(\005\022\020\n\010"
    "yazhuFan\030\003 \002(\005\"z\n\035ResNotifyDispachLeftCa"
    "rd_8854\022*\n\tcardInfos\030\001 \003(\0132\027.ProtoNet.Ca"
    "rdInfo_8854\022\014\n\004type\030\002 \002(\005\022\020\n\010multiple\030\003 "
    "\002(\005\022\r\n\005timer\030\004 \002(\005\"\022\n\020ReqLiangPai_8854\"\210"
    "\001\n\020ResLiangPai_8854\022(\n\006result\030\001 \002(\0132\030.Pr"
    "otoNet.ResponseResult\022*\n\tcardInfos\030\002 \003(\013"
    "2\027.ProtoNet.CardInfo_8854\022\014\n\004type\030\003 \001(\005\022"
    "\020\n\010multiple\030\004 \001(\005\"\212\001\n\035ResNotifySomeOneLi"
    "angPai_8854\022\020\n\010uniqueId\030\001 \002(\t\022*\n\tcardInf"
    "os\030\002 \003(\0132\027.ProtoNet.CardInfo_8854\022\014\n\004typ"
    "e\030\003 \002(\005\022\020\n\010multiple\030\004 \002(\005\022\013\n\003pos\030\005 \002(\005\"<"
    "\n\033ReqSmallCalculatePanel_8854\022\016\n\006roomId\030"
    "\001 \002(\t\022\r\n\005times\030\002 \002(\005\"\210\001\n\033ResSmallCalcula"
    "tePanel_8854\022(\n\006result\030\001 \002(\0132\030.ProtoNet."
    "ResponseResult\022\?\n\023smallCalculatePanel\030\002 "
    "\001(\0132\".ProtoNet.SmallCalculatePanel_8854\""
    "A\n\031ReqBigCalculatePanel_8854\022\016\n\006roomId\030\001"
    " \002(\t\022\024\n\014containSmall\030\002 \002(\010\"\202\001\n\031ResBigCal"
    "culatePanel_8854\022(\n\006result\030\001 \002(\0132\030.Proto"
    "Net.ResponseResult\022;\n\021bigCalculatePanel\030"
    "\002 \001(\0132 .ProtoNet.BigCalculatePanel_8854\""
    "\032\n\030ReqRecoverGameSceen_8854\"\361\003\n\030ResRecov"
    "erGameSceen_8854\022(\n\006result\030\001 \002(\0132\030.Proto"
    "Net.ResponseResult\022\016\n\006gameId\030\002 \001(\005\022\022\n\nro"
    "omStatus\030\003 \001(\005\022$\n\010roomInfo\030\004 \001(\0132\022.Proto"
    "Net.RoomInfo\0225\n\016douniuGameRoom\030\005 \001(\0132\035.P"
    "rotoNet.DouniuGameRoom_8854\022>\n\023qiangzhau"
    "ngOperates\030\006 \003(\0132!.ProtoNet.QiangzhuangO"
    "perate_8854\0222\n\ryazhuOperates\030\007 \003(\0132\033.Pro"
    "toNet.YazhuOperate_8854\0228\n\020liangPaiOpera"
    "tes\030\010 \003(\0132\036.ProtoNet.LiangPaiOperate_885"
    "4\022D\n\026recoverControllerInfos\030\t \003(\0132$.Prot"
    "oNet.ControllerDispachInfo_8854\022\035\n\025selfQ"
    "iangzhuangMaxFan\030\n \001(\005\022\027\n\017selfYazhuMaxFa"
    "n\030\013 \001(\005\"6\n\017ResTuoGuan_8854\022\021\n\tisTuoGuan\030"
    "\001 \001(\005\022\020\n\010uniqueId\030\002 \001(\t*\374\004\n\nDouniuCode\022\032"
    "\n\024REQ_QIANGZHUANG_8854\020\356\252+\022\032\n\024RES_QIANGZ"
    "HUANG_8854\020\355\252+\022)\n#RES_NOTIFY_SOMEONE_QIA"
    "NGZHUANG_8854\020\354\252+\022 \n\032RES_NOTIFY_GAME_STA"
    "RT_8854\020\353\252+\022\"\n\034RES_NOTIFY_DISPACH_CARD_8"
    "854\020\352\252+\022\024\n\016REQ_YAZHU_8854\020\350\252+\022\024\n\016RES_YAZ"
    "HU_8854\020\347\252+\022#\n\035RES_NOTIFY_SOMEONE_YAZHU_"
    "8854\020\346\252+\022\'\n!RES_NOTIFY_DISPACH_LEFT_CARD"
    "_8854\020\345\252+\022\030\n\022REQ_LIANG_PAI_8854\020\344\252+\022\030\n\022R"
    "ES_LIANG_PAI_8854\020\343\252+\022\'\n!RES_NOTIFY_SOME"
    "ONE_LIANG_PAI_8854\020\342\252+\022$\n\036REQ_SMALL_CALC"
    "ULATE_PANEL_8854\020\341\252+\022$\n\036RES_SMALL_CALCUL"
    "ATE_PANEL_8854\020\340\252+\022\"\n\034REQ_BIG_CALCULATE_"
    "PANEL_8854\020\337\252+\022\"\n\034RES_BIG_CALCULATE_PANE"
    "L_8854\020\336\252+\022 \n\032REQ_RECOVER_GAMESCEEN_8854"
    "\020\335\252+\022 \n\032RES_RECOVER_GAMESCEEN_8854\020\334\252+\022\026"
    "\n\020RES_TUOGUAN_8854\020\333\252+B\031\n\027com.version.pr"
    "otobuf.pb", 4209);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgDouniu.proto", &protobuf_RegisterTypes);
  SmallCalculatePanel_8854::default_instance_ = new SmallCalculatePanel_8854();
  SmallCalController_8854::default_instance_ = new SmallCalController_8854();
  BigCalController_8854::default_instance_ = new BigCalController_8854();
  BigCalculatePanel_8854::default_instance_ = new BigCalculatePanel_8854();
  QiangzhuangOperate_8854::default_instance_ = new QiangzhuangOperate_8854();
  YazhuOperate_8854::default_instance_ = new YazhuOperate_8854();
  CardInfo_8854::default_instance_ = new CardInfo_8854();
  PosGameInfo_8854::default_instance_ = new PosGameInfo_8854();
  ControllerDispachInfo_8854::default_instance_ = new ControllerDispachInfo_8854();
  DouniuGameRoom_8854::default_instance_ = new DouniuGameRoom_8854();
  ReqQiangzhuang_8854::default_instance_ = new ReqQiangzhuang_8854();
  ResQiangzhuang_8854::default_instance_ = new ResQiangzhuang_8854();
  ResNotifySomeOneQiangzhuang_8854::default_instance_ = new ResNotifySomeOneQiangzhuang_8854();
  LiangPaiOperate_8854::default_instance_ = new LiangPaiOperate_8854();
  ResNotifyGameStart_8854::default_instance_ = new ResNotifyGameStart_8854();
  ResNotifyDispachCard_8854::default_instance_ = new ResNotifyDispachCard_8854();
  ReqYazhu_8854::default_instance_ = new ReqYazhu_8854();
  ResYazhu_8854::default_instance_ = new ResYazhu_8854();
  ResNotifySomeOneYazhu_8854::default_instance_ = new ResNotifySomeOneYazhu_8854();
  ResNotifyDispachLeftCard_8854::default_instance_ = new ResNotifyDispachLeftCard_8854();
  ReqLiangPai_8854::default_instance_ = new ReqLiangPai_8854();
  ResLiangPai_8854::default_instance_ = new ResLiangPai_8854();
  ResNotifySomeOneLiangPai_8854::default_instance_ = new ResNotifySomeOneLiangPai_8854();
  ReqSmallCalculatePanel_8854::default_instance_ = new ReqSmallCalculatePanel_8854();
  ResSmallCalculatePanel_8854::default_instance_ = new ResSmallCalculatePanel_8854();
  ReqBigCalculatePanel_8854::default_instance_ = new ReqBigCalculatePanel_8854();
  ResBigCalculatePanel_8854::default_instance_ = new ResBigCalculatePanel_8854();
  ReqRecoverGameSceen_8854::default_instance_ = new ReqRecoverGameSceen_8854();
  ResRecoverGameSceen_8854::default_instance_ = new ResRecoverGameSceen_8854();
  ResTuoGuan_8854::default_instance_ = new ResTuoGuan_8854();
  SmallCalculatePanel_8854::default_instance_->InitAsDefaultInstance();
  SmallCalController_8854::default_instance_->InitAsDefaultInstance();
  BigCalController_8854::default_instance_->InitAsDefaultInstance();
  BigCalculatePanel_8854::default_instance_->InitAsDefaultInstance();
  QiangzhuangOperate_8854::default_instance_->InitAsDefaultInstance();
  YazhuOperate_8854::default_instance_->InitAsDefaultInstance();
  CardInfo_8854::default_instance_->InitAsDefaultInstance();
  PosGameInfo_8854::default_instance_->InitAsDefaultInstance();
  ControllerDispachInfo_8854::default_instance_->InitAsDefaultInstance();
  DouniuGameRoom_8854::default_instance_->InitAsDefaultInstance();
  ReqQiangzhuang_8854::default_instance_->InitAsDefaultInstance();
  ResQiangzhuang_8854::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneQiangzhuang_8854::default_instance_->InitAsDefaultInstance();
  LiangPaiOperate_8854::default_instance_->InitAsDefaultInstance();
  ResNotifyGameStart_8854::default_instance_->InitAsDefaultInstance();
  ResNotifyDispachCard_8854::default_instance_->InitAsDefaultInstance();
  ReqYazhu_8854::default_instance_->InitAsDefaultInstance();
  ResYazhu_8854::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneYazhu_8854::default_instance_->InitAsDefaultInstance();
  ResNotifyDispachLeftCard_8854::default_instance_->InitAsDefaultInstance();
  ReqLiangPai_8854::default_instance_->InitAsDefaultInstance();
  ResLiangPai_8854::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneLiangPai_8854::default_instance_->InitAsDefaultInstance();
  ReqSmallCalculatePanel_8854::default_instance_->InitAsDefaultInstance();
  ResSmallCalculatePanel_8854::default_instance_->InitAsDefaultInstance();
  ReqBigCalculatePanel_8854::default_instance_->InitAsDefaultInstance();
  ResBigCalculatePanel_8854::default_instance_->InitAsDefaultInstance();
  ReqRecoverGameSceen_8854::default_instance_->InitAsDefaultInstance();
  ResRecoverGameSceen_8854::default_instance_->InitAsDefaultInstance();
  ResTuoGuan_8854::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgDouniu_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgDouniu_2eproto {
  StaticDescriptorInitializer_MsgDouniu_2eproto() {
    protobuf_AddDesc_MsgDouniu_2eproto();
  }
} static_descriptor_initializer_MsgDouniu_2eproto_;
const ::google::protobuf::EnumDescriptor* DouniuCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DouniuCode_descriptor_;
}
bool DouniuCode_IsValid(int value) {
  switch(value) {
    case 709979:
    case 709980:
    case 709981:
    case 709982:
    case 709983:
    case 709984:
    case 709985:
    case 709986:
    case 709987:
    case 709988:
    case 709989:
    case 709990:
    case 709991:
    case 709992:
    case 709994:
    case 709995:
    case 709996:
    case 709997:
    case 709998:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int SmallCalculatePanel_8854::kSmallCalControllersFieldNumber;
const int SmallCalculatePanel_8854::kBankerUniqueIdFieldNumber;
const int SmallCalculatePanel_8854::kBankerPosFieldNumber;
#endif  // !_MSC_VER

SmallCalculatePanel_8854::SmallCalculatePanel_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SmallCalculatePanel_8854::InitAsDefaultInstance() {
}

SmallCalculatePanel_8854::SmallCalculatePanel_8854(const SmallCalculatePanel_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SmallCalculatePanel_8854::SharedCtor() {
  _cached_size_ = 0;
  bankeruniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bankerpos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SmallCalculatePanel_8854::~SmallCalculatePanel_8854() {
  SharedDtor();
}

void SmallCalculatePanel_8854::SharedDtor() {
  if (bankeruniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete bankeruniqueid_;
  }
  if (this != default_instance_) {
  }
}

void SmallCalculatePanel_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SmallCalculatePanel_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SmallCalculatePanel_8854_descriptor_;
}

const SmallCalculatePanel_8854& SmallCalculatePanel_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

SmallCalculatePanel_8854* SmallCalculatePanel_8854::default_instance_ = NULL;

SmallCalculatePanel_8854* SmallCalculatePanel_8854::New() const {
  return new SmallCalculatePanel_8854;
}

void SmallCalculatePanel_8854::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bankeruniqueid()) {
      if (bankeruniqueid_ != &::google::protobuf::internal::kEmptyString) {
        bankeruniqueid_->clear();
      }
    }
    bankerpos_ = 0;
  }
  smallcalcontrollers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SmallCalculatePanel_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoNet.SmallCalController_8854 smallCalControllers = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_smallCalControllers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_smallcalcontrollers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_smallCalControllers;
        if (input->ExpectTag(18)) goto parse_bankerUniqueId;
        break;
      }

      // required string bankerUniqueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bankerUniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankeruniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bankeruniqueid().data(), this->bankeruniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bankerPos;
        break;
      }

      // required int32 bankerPos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bankerPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bankerpos_)));
          set_has_bankerpos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SmallCalculatePanel_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoNet.SmallCalController_8854 smallCalControllers = 1;
  for (int i = 0; i < this->smallcalcontrollers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->smallcalcontrollers(i), output);
  }

  // required string bankerUniqueId = 2;
  if (has_bankeruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bankeruniqueid().data(), this->bankeruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->bankeruniqueid(), output);
  }

  // required int32 bankerPos = 3;
  if (has_bankerpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bankerpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SmallCalculatePanel_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoNet.SmallCalController_8854 smallCalControllers = 1;
  for (int i = 0; i < this->smallcalcontrollers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->smallcalcontrollers(i), target);
  }

  // required string bankerUniqueId = 2;
  if (has_bankeruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bankeruniqueid().data(), this->bankeruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bankeruniqueid(), target);
  }

  // required int32 bankerPos = 3;
  if (has_bankerpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bankerpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SmallCalculatePanel_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string bankerUniqueId = 2;
    if (has_bankeruniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bankeruniqueid());
    }

    // required int32 bankerPos = 3;
    if (has_bankerpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bankerpos());
    }

  }
  // repeated .ProtoNet.SmallCalController_8854 smallCalControllers = 1;
  total_size += 1 * this->smallcalcontrollers_size();
  for (int i = 0; i < this->smallcalcontrollers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->smallcalcontrollers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SmallCalculatePanel_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SmallCalculatePanel_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SmallCalculatePanel_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SmallCalculatePanel_8854::MergeFrom(const SmallCalculatePanel_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  smallcalcontrollers_.MergeFrom(from.smallcalcontrollers_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bankeruniqueid()) {
      set_bankeruniqueid(from.bankeruniqueid());
    }
    if (from.has_bankerpos()) {
      set_bankerpos(from.bankerpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SmallCalculatePanel_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmallCalculatePanel_8854::CopyFrom(const SmallCalculatePanel_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmallCalculatePanel_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  for (int i = 0; i < smallcalcontrollers_size(); i++) {
    if (!this->smallcalcontrollers(i).IsInitialized()) return false;
  }
  return true;
}

void SmallCalculatePanel_8854::Swap(SmallCalculatePanel_8854* other) {
  if (other != this) {
    smallcalcontrollers_.Swap(&other->smallcalcontrollers_);
    std::swap(bankeruniqueid_, other->bankeruniqueid_);
    std::swap(bankerpos_, other->bankerpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SmallCalculatePanel_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SmallCalculatePanel_8854_descriptor_;
  metadata.reflection = SmallCalculatePanel_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SmallCalController_8854::kWinScoreFieldNumber;
const int SmallCalController_8854::kUniqueIdFieldNumber;
const int SmallCalController_8854::kPosFieldNumber;
const int SmallCalController_8854::kHealthFieldNumber;
#endif  // !_MSC_VER

SmallCalController_8854::SmallCalController_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SmallCalController_8854::InitAsDefaultInstance() {
}

SmallCalController_8854::SmallCalController_8854(const SmallCalController_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SmallCalController_8854::SharedCtor() {
  _cached_size_ = 0;
  winscore_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pos_ = 0;
  health_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SmallCalController_8854::~SmallCalController_8854() {
  SharedDtor();
}

void SmallCalController_8854::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void SmallCalController_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SmallCalController_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SmallCalController_8854_descriptor_;
}

const SmallCalController_8854& SmallCalController_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

SmallCalController_8854* SmallCalController_8854::default_instance_ = NULL;

SmallCalController_8854* SmallCalController_8854::New() const {
  return new SmallCalController_8854;
}

void SmallCalController_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    winscore_ = 0;
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    pos_ = 0;
    health_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SmallCalController_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 winScore = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &winscore_)));
          set_has_winscore();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_uniqueId;
        break;
      }

      // required string uniqueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        break;
      }

      // required int32 pos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_health;
        break;
      }

      // required int32 health = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_health:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_)));
          set_has_health();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SmallCalController_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 winScore = 1;
  if (has_winscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->winscore(), output);
  }

  // required string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->uniqueid(), output);
  }

  // required int32 pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos(), output);
  }

  // required int32 health = 4;
  if (has_health()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->health(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SmallCalController_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 winScore = 1;
  if (has_winscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->winscore(), target);
  }

  // required string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uniqueid(), target);
  }

  // required int32 pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos(), target);
  }

  // required int32 health = 4;
  if (has_health()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->health(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SmallCalController_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 winScore = 1;
    if (has_winscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->winscore());
    }

    // required string uniqueId = 2;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required int32 health = 4;
    if (has_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SmallCalController_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SmallCalController_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SmallCalController_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SmallCalController_8854::MergeFrom(const SmallCalController_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_winscore()) {
      set_winscore(from.winscore());
    }
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_health()) {
      set_health(from.health());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SmallCalController_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmallCalController_8854::CopyFrom(const SmallCalController_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmallCalController_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void SmallCalController_8854::Swap(SmallCalController_8854* other) {
  if (other != this) {
    std::swap(winscore_, other->winscore_);
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(pos_, other->pos_);
    std::swap(health_, other->health_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SmallCalController_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SmallCalController_8854_descriptor_;
  metadata.reflection = SmallCalController_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BigCalController_8854::kHeadImgFieldNumber;
const int BigCalController_8854::kNickFieldNumber;
const int BigCalController_8854::kUniqueIdFieldNumber;
const int BigCalController_8854::kHeadFieldNumber;
const int BigCalController_8854::kWinScoreFieldNumber;
const int BigCalController_8854::kNiuniuCountFieldNumber;
const int BigCalController_8854::kWinCountFieldNumber;
const int BigCalController_8854::kLoseCountFieldNumber;
const int BigCalController_8854::kTongshaCountFieldNumber;
const int BigCalController_8854::kTongpeiCountFieldNumber;
#endif  // !_MSC_VER

BigCalController_8854::BigCalController_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BigCalController_8854::InitAsDefaultInstance() {
}

BigCalController_8854::BigCalController_8854(const BigCalController_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BigCalController_8854::SharedCtor() {
  _cached_size_ = 0;
  headimg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  head_ = 0;
  winscore_ = 0;
  niuniucount_ = 0;
  wincount_ = 0;
  losecount_ = 0;
  tongshacount_ = 0;
  tongpeicount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BigCalController_8854::~BigCalController_8854() {
  SharedDtor();
}

void BigCalController_8854::SharedDtor() {
  if (headimg_ != &::google::protobuf::internal::kEmptyString) {
    delete headimg_;
  }
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_;
  }
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void BigCalController_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BigCalController_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BigCalController_8854_descriptor_;
}

const BigCalController_8854& BigCalController_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

BigCalController_8854* BigCalController_8854::default_instance_ = NULL;

BigCalController_8854* BigCalController_8854::New() const {
  return new BigCalController_8854;
}

void BigCalController_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_headimg()) {
      if (headimg_ != &::google::protobuf::internal::kEmptyString) {
        headimg_->clear();
      }
    }
    if (has_nick()) {
      if (nick_ != &::google::protobuf::internal::kEmptyString) {
        nick_->clear();
      }
    }
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    head_ = 0;
    winscore_ = 0;
    niuniucount_ = 0;
    wincount_ = 0;
    losecount_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    tongshacount_ = 0;
    tongpeicount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BigCalController_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string headImg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headimg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->headimg().data(), this->headimg().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_nick;
        break;
      }

      // required string nick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nick:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nick().data(), this->nick().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_uniqueId;
        break;
      }

      // required string uniqueId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_head;
        break;
      }

      // required int32 head = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_head:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &head_)));
          set_has_head();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_winScore;
        break;
      }

      // required int32 winScore = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_winScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &winscore_)));
          set_has_winscore();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_niuniuCount;
        break;
      }

      // required int32 niuniuCount = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_niuniuCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &niuniucount_)));
          set_has_niuniucount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_winCount;
        break;
      }

      // required int32 winCount = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_winCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wincount_)));
          set_has_wincount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_loseCount;
        break;
      }

      // required int32 loseCount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_loseCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &losecount_)));
          set_has_losecount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_tongshaCount;
        break;
      }

      // required int32 tongshaCount = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tongshaCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tongshacount_)));
          set_has_tongshacount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_tongpeiCount;
        break;
      }

      // required int32 tongpeiCount = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tongpeiCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tongpeicount_)));
          set_has_tongpeicount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BigCalController_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string headImg = 1;
  if (has_headimg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->headimg().data(), this->headimg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->headimg(), output);
  }

  // required string nick = 2;
  if (has_nick()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nick().data(), this->nick().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->nick(), output);
  }

  // required string uniqueId = 3;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->uniqueid(), output);
  }

  // required int32 head = 4;
  if (has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->head(), output);
  }

  // required int32 winScore = 5;
  if (has_winscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->winscore(), output);
  }

  // required int32 niuniuCount = 6;
  if (has_niuniucount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->niuniucount(), output);
  }

  // required int32 winCount = 7;
  if (has_wincount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->wincount(), output);
  }

  // required int32 loseCount = 8;
  if (has_losecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->losecount(), output);
  }

  // required int32 tongshaCount = 9;
  if (has_tongshacount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->tongshacount(), output);
  }

  // required int32 tongpeiCount = 10;
  if (has_tongpeicount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->tongpeicount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BigCalController_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string headImg = 1;
  if (has_headimg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->headimg().data(), this->headimg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->headimg(), target);
  }

  // required string nick = 2;
  if (has_nick()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nick().data(), this->nick().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nick(), target);
  }

  // required string uniqueId = 3;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uniqueid(), target);
  }

  // required int32 head = 4;
  if (has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->head(), target);
  }

  // required int32 winScore = 5;
  if (has_winscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->winscore(), target);
  }

  // required int32 niuniuCount = 6;
  if (has_niuniucount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->niuniucount(), target);
  }

  // required int32 winCount = 7;
  if (has_wincount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->wincount(), target);
  }

  // required int32 loseCount = 8;
  if (has_losecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->losecount(), target);
  }

  // required int32 tongshaCount = 9;
  if (has_tongshacount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->tongshacount(), target);
  }

  // required int32 tongpeiCount = 10;
  if (has_tongpeicount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->tongpeicount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BigCalController_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string headImg = 1;
    if (has_headimg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->headimg());
    }

    // required string nick = 2;
    if (has_nick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nick());
    }

    // required string uniqueId = 3;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 head = 4;
    if (has_head()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->head());
    }

    // required int32 winScore = 5;
    if (has_winscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->winscore());
    }

    // required int32 niuniuCount = 6;
    if (has_niuniucount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->niuniucount());
    }

    // required int32 winCount = 7;
    if (has_wincount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wincount());
    }

    // required int32 loseCount = 8;
    if (has_losecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->losecount());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 tongshaCount = 9;
    if (has_tongshacount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tongshacount());
    }

    // required int32 tongpeiCount = 10;
    if (has_tongpeicount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tongpeicount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BigCalController_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BigCalController_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BigCalController_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BigCalController_8854::MergeFrom(const BigCalController_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headimg()) {
      set_headimg(from.headimg());
    }
    if (from.has_nick()) {
      set_nick(from.nick());
    }
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_head()) {
      set_head(from.head());
    }
    if (from.has_winscore()) {
      set_winscore(from.winscore());
    }
    if (from.has_niuniucount()) {
      set_niuniucount(from.niuniucount());
    }
    if (from.has_wincount()) {
      set_wincount(from.wincount());
    }
    if (from.has_losecount()) {
      set_losecount(from.losecount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_tongshacount()) {
      set_tongshacount(from.tongshacount());
    }
    if (from.has_tongpeicount()) {
      set_tongpeicount(from.tongpeicount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BigCalController_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BigCalController_8854::CopyFrom(const BigCalController_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BigCalController_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;

  return true;
}

void BigCalController_8854::Swap(BigCalController_8854* other) {
  if (other != this) {
    std::swap(headimg_, other->headimg_);
    std::swap(nick_, other->nick_);
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(head_, other->head_);
    std::swap(winscore_, other->winscore_);
    std::swap(niuniucount_, other->niuniucount_);
    std::swap(wincount_, other->wincount_);
    std::swap(losecount_, other->losecount_);
    std::swap(tongshacount_, other->tongshacount_);
    std::swap(tongpeicount_, other->tongpeicount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BigCalController_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BigCalController_8854_descriptor_;
  metadata.reflection = BigCalController_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BigCalculatePanel_8854::kControllersFieldNumber;
const int BigCalculatePanel_8854::kRoomerIdFieldNumber;
const int BigCalculatePanel_8854::kRoomIdFieldNumber;
#endif  // !_MSC_VER

BigCalculatePanel_8854::BigCalculatePanel_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BigCalculatePanel_8854::InitAsDefaultInstance() {
}

BigCalculatePanel_8854::BigCalculatePanel_8854(const BigCalculatePanel_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BigCalculatePanel_8854::SharedCtor() {
  _cached_size_ = 0;
  roomerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BigCalculatePanel_8854::~BigCalculatePanel_8854() {
  SharedDtor();
}

void BigCalculatePanel_8854::SharedDtor() {
  if (roomerid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomerid_;
  }
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
  }
}

void BigCalculatePanel_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BigCalculatePanel_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BigCalculatePanel_8854_descriptor_;
}

const BigCalculatePanel_8854& BigCalculatePanel_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

BigCalculatePanel_8854* BigCalculatePanel_8854::default_instance_ = NULL;

BigCalculatePanel_8854* BigCalculatePanel_8854::New() const {
  return new BigCalculatePanel_8854;
}

void BigCalculatePanel_8854::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_roomerid()) {
      if (roomerid_ != &::google::protobuf::internal::kEmptyString) {
        roomerid_->clear();
      }
    }
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
  }
  controllers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BigCalculatePanel_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoNet.BigCalController_8854 controllers = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controllers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_controllers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_controllers;
        if (input->ExpectTag(18)) goto parse_roomerId;
        break;
      }

      // required string roomerId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomerid().data(), this->roomerid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_roomId;
        break;
      }

      // required string roomId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BigCalculatePanel_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoNet.BigCalController_8854 controllers = 1;
  for (int i = 0; i < this->controllers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->controllers(i), output);
  }

  // required string roomerId = 2;
  if (has_roomerid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomerid().data(), this->roomerid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->roomerid(), output);
  }

  // required string roomId = 3;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->roomid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BigCalculatePanel_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoNet.BigCalController_8854 controllers = 1;
  for (int i = 0; i < this->controllers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->controllers(i), target);
  }

  // required string roomerId = 2;
  if (has_roomerid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomerid().data(), this->roomerid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomerid(), target);
  }

  // required string roomId = 3;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roomid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BigCalculatePanel_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string roomerId = 2;
    if (has_roomerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomerid());
    }

    // required string roomId = 3;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

  }
  // repeated .ProtoNet.BigCalController_8854 controllers = 1;
  total_size += 1 * this->controllers_size();
  for (int i = 0; i < this->controllers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->controllers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BigCalculatePanel_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BigCalculatePanel_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BigCalculatePanel_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BigCalculatePanel_8854::MergeFrom(const BigCalculatePanel_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  controllers_.MergeFrom(from.controllers_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_roomerid()) {
      set_roomerid(from.roomerid());
    }
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BigCalculatePanel_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BigCalculatePanel_8854::CopyFrom(const BigCalculatePanel_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BigCalculatePanel_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  for (int i = 0; i < controllers_size(); i++) {
    if (!this->controllers(i).IsInitialized()) return false;
  }
  return true;
}

void BigCalculatePanel_8854::Swap(BigCalculatePanel_8854* other) {
  if (other != this) {
    controllers_.Swap(&other->controllers_);
    std::swap(roomerid_, other->roomerid_);
    std::swap(roomid_, other->roomid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BigCalculatePanel_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BigCalculatePanel_8854_descriptor_;
  metadata.reflection = BigCalculatePanel_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QiangzhuangOperate_8854::kPosFieldNumber;
const int QiangzhuangOperate_8854::kUniqueIdFieldNumber;
const int QiangzhuangOperate_8854::kMaxFanFieldNumber;
const int QiangzhuangOperate_8854::kChooseFanFieldNumber;
#endif  // !_MSC_VER

QiangzhuangOperate_8854::QiangzhuangOperate_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QiangzhuangOperate_8854::InitAsDefaultInstance() {
}

QiangzhuangOperate_8854::QiangzhuangOperate_8854(const QiangzhuangOperate_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QiangzhuangOperate_8854::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  maxfan_ = 0;
  choosefan_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QiangzhuangOperate_8854::~QiangzhuangOperate_8854() {
  SharedDtor();
}

void QiangzhuangOperate_8854::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void QiangzhuangOperate_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QiangzhuangOperate_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QiangzhuangOperate_8854_descriptor_;
}

const QiangzhuangOperate_8854& QiangzhuangOperate_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

QiangzhuangOperate_8854* QiangzhuangOperate_8854::default_instance_ = NULL;

QiangzhuangOperate_8854* QiangzhuangOperate_8854::New() const {
  return new QiangzhuangOperate_8854;
}

void QiangzhuangOperate_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    maxfan_ = 0;
    choosefan_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QiangzhuangOperate_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_uniqueId;
        break;
      }

      // required string uniqueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_maxFan;
        break;
      }

      // required int32 maxFan = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxFan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxfan_)));
          set_has_maxfan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_chooseFan;
        break;
      }

      // optional int32 chooseFan = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chooseFan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &choosefan_)));
          set_has_choosefan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QiangzhuangOperate_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // required string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->uniqueid(), output);
  }

  // required int32 maxFan = 3;
  if (has_maxfan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxfan(), output);
  }

  // optional int32 chooseFan = 4;
  if (has_choosefan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->choosefan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QiangzhuangOperate_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // required string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uniqueid(), target);
  }

  // required int32 maxFan = 3;
  if (has_maxfan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxfan(), target);
  }

  // optional int32 chooseFan = 4;
  if (has_choosefan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->choosefan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QiangzhuangOperate_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required string uniqueId = 2;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 maxFan = 3;
    if (has_maxfan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxfan());
    }

    // optional int32 chooseFan = 4;
    if (has_choosefan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->choosefan());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QiangzhuangOperate_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QiangzhuangOperate_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QiangzhuangOperate_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QiangzhuangOperate_8854::MergeFrom(const QiangzhuangOperate_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_maxfan()) {
      set_maxfan(from.maxfan());
    }
    if (from.has_choosefan()) {
      set_choosefan(from.choosefan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QiangzhuangOperate_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QiangzhuangOperate_8854::CopyFrom(const QiangzhuangOperate_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QiangzhuangOperate_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void QiangzhuangOperate_8854::Swap(QiangzhuangOperate_8854* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(maxfan_, other->maxfan_);
    std::swap(choosefan_, other->choosefan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QiangzhuangOperate_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QiangzhuangOperate_8854_descriptor_;
  metadata.reflection = QiangzhuangOperate_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int YazhuOperate_8854::kPosFieldNumber;
const int YazhuOperate_8854::kUniqueIdFieldNumber;
const int YazhuOperate_8854::kMaxFanFieldNumber;
const int YazhuOperate_8854::kChooseFanFieldNumber;
#endif  // !_MSC_VER

YazhuOperate_8854::YazhuOperate_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void YazhuOperate_8854::InitAsDefaultInstance() {
}

YazhuOperate_8854::YazhuOperate_8854(const YazhuOperate_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void YazhuOperate_8854::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  maxfan_ = 0;
  choosefan_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YazhuOperate_8854::~YazhuOperate_8854() {
  SharedDtor();
}

void YazhuOperate_8854::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void YazhuOperate_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YazhuOperate_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YazhuOperate_8854_descriptor_;
}

const YazhuOperate_8854& YazhuOperate_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

YazhuOperate_8854* YazhuOperate_8854::default_instance_ = NULL;

YazhuOperate_8854* YazhuOperate_8854::New() const {
  return new YazhuOperate_8854;
}

void YazhuOperate_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    maxfan_ = 0;
    choosefan_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool YazhuOperate_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_uniqueId;
        break;
      }

      // required string uniqueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_maxFan;
        break;
      }

      // required int32 maxFan = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxFan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxfan_)));
          set_has_maxfan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_chooseFan;
        break;
      }

      // optional int32 chooseFan = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chooseFan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &choosefan_)));
          set_has_choosefan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void YazhuOperate_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // required string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->uniqueid(), output);
  }

  // required int32 maxFan = 3;
  if (has_maxfan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxfan(), output);
  }

  // optional int32 chooseFan = 4;
  if (has_choosefan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->choosefan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* YazhuOperate_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // required string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uniqueid(), target);
  }

  // required int32 maxFan = 3;
  if (has_maxfan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxfan(), target);
  }

  // optional int32 chooseFan = 4;
  if (has_choosefan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->choosefan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int YazhuOperate_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required string uniqueId = 2;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 maxFan = 3;
    if (has_maxfan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxfan());
    }

    // optional int32 chooseFan = 4;
    if (has_choosefan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->choosefan());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YazhuOperate_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const YazhuOperate_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const YazhuOperate_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void YazhuOperate_8854::MergeFrom(const YazhuOperate_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_maxfan()) {
      set_maxfan(from.maxfan());
    }
    if (from.has_choosefan()) {
      set_choosefan(from.choosefan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void YazhuOperate_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YazhuOperate_8854::CopyFrom(const YazhuOperate_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YazhuOperate_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void YazhuOperate_8854::Swap(YazhuOperate_8854* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(maxfan_, other->maxfan_);
    std::swap(choosefan_, other->choosefan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata YazhuOperate_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YazhuOperate_8854_descriptor_;
  metadata.reflection = YazhuOperate_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CardInfo_8854::kCardIdFieldNumber;
const int CardInfo_8854::kCardColorFieldNumber;
const int CardInfo_8854::kCardNumFieldNumber;
const int CardInfo_8854::kLaiziFieldNumber;
#endif  // !_MSC_VER

CardInfo_8854::CardInfo_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CardInfo_8854::InitAsDefaultInstance() {
}

CardInfo_8854::CardInfo_8854(const CardInfo_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CardInfo_8854::SharedCtor() {
  _cached_size_ = 0;
  cardid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cardcolor_ = 0;
  cardnum_ = 0;
  laizi_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CardInfo_8854::~CardInfo_8854() {
  SharedDtor();
}

void CardInfo_8854::SharedDtor() {
  if (cardid_ != &::google::protobuf::internal::kEmptyString) {
    delete cardid_;
  }
  if (this != default_instance_) {
  }
}

void CardInfo_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardInfo_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CardInfo_8854_descriptor_;
}

const CardInfo_8854& CardInfo_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

CardInfo_8854* CardInfo_8854::default_instance_ = NULL;

CardInfo_8854* CardInfo_8854::New() const {
  return new CardInfo_8854;
}

void CardInfo_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cardid()) {
      if (cardid_ != &::google::protobuf::internal::kEmptyString) {
        cardid_->clear();
      }
    }
    cardcolor_ = 0;
    cardnum_ = 0;
    laizi_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CardInfo_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string cardId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cardid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cardid().data(), this->cardid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cardColor;
        break;
      }

      // required int32 cardColor = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cardColor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardcolor_)));
          set_has_cardcolor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cardNum;
        break;
      }

      // required int32 cardNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cardNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardnum_)));
          set_has_cardnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_laizi;
        break;
      }

      // required bool laizi = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_laizi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &laizi_)));
          set_has_laizi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CardInfo_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string cardId = 1;
  if (has_cardid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cardid().data(), this->cardid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->cardid(), output);
  }

  // required int32 cardColor = 2;
  if (has_cardcolor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cardcolor(), output);
  }

  // required int32 cardNum = 3;
  if (has_cardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cardnum(), output);
  }

  // required bool laizi = 4;
  if (has_laizi()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->laizi(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CardInfo_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string cardId = 1;
  if (has_cardid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cardid().data(), this->cardid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cardid(), target);
  }

  // required int32 cardColor = 2;
  if (has_cardcolor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cardcolor(), target);
  }

  // required int32 cardNum = 3;
  if (has_cardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cardnum(), target);
  }

  // required bool laizi = 4;
  if (has_laizi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->laizi(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CardInfo_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string cardId = 1;
    if (has_cardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cardid());
    }

    // required int32 cardColor = 2;
    if (has_cardcolor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cardcolor());
    }

    // required int32 cardNum = 3;
    if (has_cardnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cardnum());
    }

    // required bool laizi = 4;
    if (has_laizi()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardInfo_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CardInfo_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CardInfo_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CardInfo_8854::MergeFrom(const CardInfo_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cardid()) {
      set_cardid(from.cardid());
    }
    if (from.has_cardcolor()) {
      set_cardcolor(from.cardcolor());
    }
    if (from.has_cardnum()) {
      set_cardnum(from.cardnum());
    }
    if (from.has_laizi()) {
      set_laizi(from.laizi());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CardInfo_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardInfo_8854::CopyFrom(const CardInfo_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardInfo_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void CardInfo_8854::Swap(CardInfo_8854* other) {
  if (other != this) {
    std::swap(cardid_, other->cardid_);
    std::swap(cardcolor_, other->cardcolor_);
    std::swap(cardnum_, other->cardnum_);
    std::swap(laizi_, other->laizi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CardInfo_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CardInfo_8854_descriptor_;
  metadata.reflection = CardInfo_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PosGameInfo_8854::kPosBrifeFieldNumber;
#endif  // !_MSC_VER

PosGameInfo_8854::PosGameInfo_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PosGameInfo_8854::InitAsDefaultInstance() {
  posbrife_ = const_cast< ::ProtoNet::PosBrife*>(&::ProtoNet::PosBrife::default_instance());
}

PosGameInfo_8854::PosGameInfo_8854(const PosGameInfo_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PosGameInfo_8854::SharedCtor() {
  _cached_size_ = 0;
  posbrife_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PosGameInfo_8854::~PosGameInfo_8854() {
  SharedDtor();
}

void PosGameInfo_8854::SharedDtor() {
  if (this != default_instance_) {
    delete posbrife_;
  }
}

void PosGameInfo_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PosGameInfo_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PosGameInfo_8854_descriptor_;
}

const PosGameInfo_8854& PosGameInfo_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

PosGameInfo_8854* PosGameInfo_8854::default_instance_ = NULL;

PosGameInfo_8854* PosGameInfo_8854::New() const {
  return new PosGameInfo_8854;
}

void PosGameInfo_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_posbrife()) {
      if (posbrife_ != NULL) posbrife_->::ProtoNet::PosBrife::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PosGameInfo_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.PosBrife posBrife = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_posbrife()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PosGameInfo_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.PosBrife posBrife = 1;
  if (has_posbrife()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->posbrife(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PosGameInfo_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.PosBrife posBrife = 1;
  if (has_posbrife()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->posbrife(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PosGameInfo_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.PosBrife posBrife = 1;
    if (has_posbrife()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->posbrife());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PosGameInfo_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PosGameInfo_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PosGameInfo_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PosGameInfo_8854::MergeFrom(const PosGameInfo_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_posbrife()) {
      mutable_posbrife()->::ProtoNet::PosBrife::MergeFrom(from.posbrife());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PosGameInfo_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PosGameInfo_8854::CopyFrom(const PosGameInfo_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PosGameInfo_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_posbrife()) {
    if (!this->posbrife().IsInitialized()) return false;
  }
  return true;
}

void PosGameInfo_8854::Swap(PosGameInfo_8854* other) {
  if (other != this) {
    std::swap(posbrife_, other->posbrife_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PosGameInfo_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PosGameInfo_8854_descriptor_;
  metadata.reflection = PosGameInfo_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ControllerDispachInfo_8854::kUniqueIdFieldNumber;
const int ControllerDispachInfo_8854::kPosFieldNumber;
const int ControllerDispachInfo_8854::kCardInfosFieldNumber;
const int ControllerDispachInfo_8854::kTypeFieldNumber;
const int ControllerDispachInfo_8854::kMultipleFieldNumber;
const int ControllerDispachInfo_8854::kIsTuoGuanFieldNumber;
#endif  // !_MSC_VER

ControllerDispachInfo_8854::ControllerDispachInfo_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ControllerDispachInfo_8854::InitAsDefaultInstance() {
}

ControllerDispachInfo_8854::ControllerDispachInfo_8854(const ControllerDispachInfo_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ControllerDispachInfo_8854::SharedCtor() {
  _cached_size_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pos_ = 0;
  type_ = 0;
  multiple_ = 0;
  istuoguan_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ControllerDispachInfo_8854::~ControllerDispachInfo_8854() {
  SharedDtor();
}

void ControllerDispachInfo_8854::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void ControllerDispachInfo_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControllerDispachInfo_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControllerDispachInfo_8854_descriptor_;
}

const ControllerDispachInfo_8854& ControllerDispachInfo_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ControllerDispachInfo_8854* ControllerDispachInfo_8854::default_instance_ = NULL;

ControllerDispachInfo_8854* ControllerDispachInfo_8854::New() const {
  return new ControllerDispachInfo_8854;
}

void ControllerDispachInfo_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    pos_ = 0;
    type_ = 0;
    multiple_ = 0;
    istuoguan_ = 0;
  }
  cardinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ControllerDispachInfo_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // required int32 pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cardInfos;
        break;
      }

      // repeated .ProtoNet.CardInfo_8854 cardInfos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cardInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cardinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cardInfos;
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_multiple;
        break;
      }

      // optional int32 multiple = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiple_)));
          set_has_multiple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_isTuoGuan;
        break;
      }

      // optional int32 isTuoGuan = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isTuoGuan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &istuoguan_)));
          set_has_istuoguan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ControllerDispachInfo_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uniqueid(), output);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  // repeated .ProtoNet.CardInfo_8854 cardInfos = 3;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cardinfos(i), output);
  }

  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // optional int32 multiple = 5;
  if (has_multiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->multiple(), output);
  }

  // optional int32 isTuoGuan = 6;
  if (has_istuoguan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->istuoguan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ControllerDispachInfo_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueid(), target);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  // repeated .ProtoNet.CardInfo_8854 cardInfos = 3;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cardinfos(i), target);
  }

  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // optional int32 multiple = 5;
  if (has_multiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->multiple(), target);
  }

  // optional int32 isTuoGuan = 6;
  if (has_istuoguan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->istuoguan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ControllerDispachInfo_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueId = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 multiple = 5;
    if (has_multiple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->multiple());
    }

    // optional int32 isTuoGuan = 6;
    if (has_istuoguan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->istuoguan());
    }

  }
  // repeated .ProtoNet.CardInfo_8854 cardInfos = 3;
  total_size += 1 * this->cardinfos_size();
  for (int i = 0; i < this->cardinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cardinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControllerDispachInfo_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ControllerDispachInfo_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ControllerDispachInfo_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ControllerDispachInfo_8854::MergeFrom(const ControllerDispachInfo_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  cardinfos_.MergeFrom(from.cardinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_multiple()) {
      set_multiple(from.multiple());
    }
    if (from.has_istuoguan()) {
      set_istuoguan(from.istuoguan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ControllerDispachInfo_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerDispachInfo_8854::CopyFrom(const ControllerDispachInfo_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerDispachInfo_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < cardinfos_size(); i++) {
    if (!this->cardinfos(i).IsInitialized()) return false;
  }
  return true;
}

void ControllerDispachInfo_8854::Swap(ControllerDispachInfo_8854* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(pos_, other->pos_);
    cardinfos_.Swap(&other->cardinfos_);
    std::swap(type_, other->type_);
    std::swap(multiple_, other->multiple_);
    std::swap(istuoguan_, other->istuoguan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ControllerDispachInfo_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControllerDispachInfo_8854_descriptor_;
  metadata.reflection = ControllerDispachInfo_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DouniuGameRoom_8854::kRoomInfoFieldNumber;
const int DouniuGameRoom_8854::kLeftMatchCountFieldNumber;
const int DouniuGameRoom_8854::kBankerUniqueIdFieldNumber;
const int DouniuGameRoom_8854::kGameingFieldNumber;
const int DouniuGameRoom_8854::kPosGameInfosFieldNumber;
const int DouniuGameRoom_8854::kModelFieldNumber;
const int DouniuGameRoom_8854::kFanFieldNumber;
const int DouniuGameRoom_8854::kRubCardFieldNumber;
#endif  // !_MSC_VER

DouniuGameRoom_8854::DouniuGameRoom_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DouniuGameRoom_8854::InitAsDefaultInstance() {
  roominfo_ = const_cast< ::ProtoNet::RoomInfo*>(&::ProtoNet::RoomInfo::default_instance());
}

DouniuGameRoom_8854::DouniuGameRoom_8854(const DouniuGameRoom_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DouniuGameRoom_8854::SharedCtor() {
  _cached_size_ = 0;
  roominfo_ = NULL;
  leftmatchcount_ = 0;
  bankeruniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gameing_ = false;
  model_ = 0;
  fan_ = 0;
  rubcard_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DouniuGameRoom_8854::~DouniuGameRoom_8854() {
  SharedDtor();
}

void DouniuGameRoom_8854::SharedDtor() {
  if (bankeruniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete bankeruniqueid_;
  }
  if (this != default_instance_) {
    delete roominfo_;
  }
}

void DouniuGameRoom_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DouniuGameRoom_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DouniuGameRoom_8854_descriptor_;
}

const DouniuGameRoom_8854& DouniuGameRoom_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

DouniuGameRoom_8854* DouniuGameRoom_8854::default_instance_ = NULL;

DouniuGameRoom_8854* DouniuGameRoom_8854::New() const {
  return new DouniuGameRoom_8854;
}

void DouniuGameRoom_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roominfo()) {
      if (roominfo_ != NULL) roominfo_->::ProtoNet::RoomInfo::Clear();
    }
    leftmatchcount_ = 0;
    if (has_bankeruniqueid()) {
      if (bankeruniqueid_ != &::google::protobuf::internal::kEmptyString) {
        bankeruniqueid_->clear();
      }
    }
    gameing_ = false;
    model_ = 0;
    fan_ = 0;
    rubcard_ = 0;
  }
  posgameinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DouniuGameRoom_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.RoomInfo roomInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roominfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leftMatchCount;
        break;
      }

      // required int32 leftMatchCount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leftMatchCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leftmatchcount_)));
          set_has_leftmatchcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bankerUniqueId;
        break;
      }

      // optional string bankerUniqueId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bankerUniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankeruniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bankeruniqueid().data(), this->bankeruniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_gameing;
        break;
      }

      // required bool gameing = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gameing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gameing_)));
          set_has_gameing();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_posGameInfos;
        break;
      }

      // repeated .ProtoNet.PosGameInfo_8854 posGameInfos = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_posGameInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_posgameinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_posGameInfos;
        if (input->ExpectTag(48)) goto parse_model;
        break;
      }

      // required int32 model = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_model:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_)));
          set_has_model();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_fan;
        break;
      }

      // optional int32 fan = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fan_)));
          set_has_fan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_rubCard;
        break;
      }

      // optional int32 rubCard = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rubCard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rubcard_)));
          set_has_rubcard();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DouniuGameRoom_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.RoomInfo roomInfo = 1;
  if (has_roominfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->roominfo(), output);
  }

  // required int32 leftMatchCount = 2;
  if (has_leftmatchcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leftmatchcount(), output);
  }

  // optional string bankerUniqueId = 3;
  if (has_bankeruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bankeruniqueid().data(), this->bankeruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->bankeruniqueid(), output);
  }

  // required bool gameing = 4;
  if (has_gameing()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->gameing(), output);
  }

  // repeated .ProtoNet.PosGameInfo_8854 posGameInfos = 5;
  for (int i = 0; i < this->posgameinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->posgameinfos(i), output);
  }

  // required int32 model = 6;
  if (has_model()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->model(), output);
  }

  // optional int32 fan = 7;
  if (has_fan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->fan(), output);
  }

  // optional int32 rubCard = 8;
  if (has_rubcard()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->rubcard(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DouniuGameRoom_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.RoomInfo roomInfo = 1;
  if (has_roominfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->roominfo(), target);
  }

  // required int32 leftMatchCount = 2;
  if (has_leftmatchcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leftmatchcount(), target);
  }

  // optional string bankerUniqueId = 3;
  if (has_bankeruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bankeruniqueid().data(), this->bankeruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bankeruniqueid(), target);
  }

  // required bool gameing = 4;
  if (has_gameing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->gameing(), target);
  }

  // repeated .ProtoNet.PosGameInfo_8854 posGameInfos = 5;
  for (int i = 0; i < this->posgameinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->posgameinfos(i), target);
  }

  // required int32 model = 6;
  if (has_model()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->model(), target);
  }

  // optional int32 fan = 7;
  if (has_fan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->fan(), target);
  }

  // optional int32 rubCard = 8;
  if (has_rubcard()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->rubcard(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DouniuGameRoom_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.RoomInfo roomInfo = 1;
    if (has_roominfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->roominfo());
    }

    // required int32 leftMatchCount = 2;
    if (has_leftmatchcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leftmatchcount());
    }

    // optional string bankerUniqueId = 3;
    if (has_bankeruniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bankeruniqueid());
    }

    // required bool gameing = 4;
    if (has_gameing()) {
      total_size += 1 + 1;
    }

    // required int32 model = 6;
    if (has_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->model());
    }

    // optional int32 fan = 7;
    if (has_fan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fan());
    }

    // optional int32 rubCard = 8;
    if (has_rubcard()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rubcard());
    }

  }
  // repeated .ProtoNet.PosGameInfo_8854 posGameInfos = 5;
  total_size += 1 * this->posgameinfos_size();
  for (int i = 0; i < this->posgameinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->posgameinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DouniuGameRoom_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DouniuGameRoom_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DouniuGameRoom_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DouniuGameRoom_8854::MergeFrom(const DouniuGameRoom_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  posgameinfos_.MergeFrom(from.posgameinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roominfo()) {
      mutable_roominfo()->::ProtoNet::RoomInfo::MergeFrom(from.roominfo());
    }
    if (from.has_leftmatchcount()) {
      set_leftmatchcount(from.leftmatchcount());
    }
    if (from.has_bankeruniqueid()) {
      set_bankeruniqueid(from.bankeruniqueid());
    }
    if (from.has_gameing()) {
      set_gameing(from.gameing());
    }
    if (from.has_model()) {
      set_model(from.model());
    }
    if (from.has_fan()) {
      set_fan(from.fan());
    }
    if (from.has_rubcard()) {
      set_rubcard(from.rubcard());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DouniuGameRoom_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DouniuGameRoom_8854::CopyFrom(const DouniuGameRoom_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DouniuGameRoom_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000002b) != 0x0000002b) return false;

  if (has_roominfo()) {
    if (!this->roominfo().IsInitialized()) return false;
  }
  for (int i = 0; i < posgameinfos_size(); i++) {
    if (!this->posgameinfos(i).IsInitialized()) return false;
  }
  return true;
}

void DouniuGameRoom_8854::Swap(DouniuGameRoom_8854* other) {
  if (other != this) {
    std::swap(roominfo_, other->roominfo_);
    std::swap(leftmatchcount_, other->leftmatchcount_);
    std::swap(bankeruniqueid_, other->bankeruniqueid_);
    std::swap(gameing_, other->gameing_);
    posgameinfos_.Swap(&other->posgameinfos_);
    std::swap(model_, other->model_);
    std::swap(fan_, other->fan_);
    std::swap(rubcard_, other->rubcard_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DouniuGameRoom_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DouniuGameRoom_8854_descriptor_;
  metadata.reflection = DouniuGameRoom_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqQiangzhuang_8854::kFanFieldNumber;
#endif  // !_MSC_VER

ReqQiangzhuang_8854::ReqQiangzhuang_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqQiangzhuang_8854::InitAsDefaultInstance() {
}

ReqQiangzhuang_8854::ReqQiangzhuang_8854(const ReqQiangzhuang_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqQiangzhuang_8854::SharedCtor() {
  _cached_size_ = 0;
  fan_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqQiangzhuang_8854::~ReqQiangzhuang_8854() {
  SharedDtor();
}

void ReqQiangzhuang_8854::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqQiangzhuang_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqQiangzhuang_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqQiangzhuang_8854_descriptor_;
}

const ReqQiangzhuang_8854& ReqQiangzhuang_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ReqQiangzhuang_8854* ReqQiangzhuang_8854::default_instance_ = NULL;

ReqQiangzhuang_8854* ReqQiangzhuang_8854::New() const {
  return new ReqQiangzhuang_8854;
}

void ReqQiangzhuang_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fan_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqQiangzhuang_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fan = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fan_)));
          set_has_fan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqQiangzhuang_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 fan = 1;
  if (has_fan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqQiangzhuang_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 fan = 1;
  if (has_fan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqQiangzhuang_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 fan = 1;
    if (has_fan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fan());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqQiangzhuang_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqQiangzhuang_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqQiangzhuang_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqQiangzhuang_8854::MergeFrom(const ReqQiangzhuang_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fan()) {
      set_fan(from.fan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqQiangzhuang_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqQiangzhuang_8854::CopyFrom(const ReqQiangzhuang_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqQiangzhuang_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqQiangzhuang_8854::Swap(ReqQiangzhuang_8854* other) {
  if (other != this) {
    std::swap(fan_, other->fan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqQiangzhuang_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqQiangzhuang_8854_descriptor_;
  metadata.reflection = ReqQiangzhuang_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResQiangzhuang_8854::kResultFieldNumber;
#endif  // !_MSC_VER

ResQiangzhuang_8854::ResQiangzhuang_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResQiangzhuang_8854::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResQiangzhuang_8854::ResQiangzhuang_8854(const ResQiangzhuang_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResQiangzhuang_8854::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResQiangzhuang_8854::~ResQiangzhuang_8854() {
  SharedDtor();
}

void ResQiangzhuang_8854::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResQiangzhuang_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResQiangzhuang_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResQiangzhuang_8854_descriptor_;
}

const ResQiangzhuang_8854& ResQiangzhuang_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResQiangzhuang_8854* ResQiangzhuang_8854::default_instance_ = NULL;

ResQiangzhuang_8854* ResQiangzhuang_8854::New() const {
  return new ResQiangzhuang_8854;
}

void ResQiangzhuang_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResQiangzhuang_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResQiangzhuang_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResQiangzhuang_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResQiangzhuang_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResQiangzhuang_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResQiangzhuang_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResQiangzhuang_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResQiangzhuang_8854::MergeFrom(const ResQiangzhuang_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResQiangzhuang_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResQiangzhuang_8854::CopyFrom(const ResQiangzhuang_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResQiangzhuang_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResQiangzhuang_8854::Swap(ResQiangzhuang_8854* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResQiangzhuang_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResQiangzhuang_8854_descriptor_;
  metadata.reflection = ResQiangzhuang_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneQiangzhuang_8854::kUniqueIdFieldNumber;
const int ResNotifySomeOneQiangzhuang_8854::kPosFieldNumber;
const int ResNotifySomeOneQiangzhuang_8854::kFanFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneQiangzhuang_8854::ResNotifySomeOneQiangzhuang_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneQiangzhuang_8854::InitAsDefaultInstance() {
}

ResNotifySomeOneQiangzhuang_8854::ResNotifySomeOneQiangzhuang_8854(const ResNotifySomeOneQiangzhuang_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneQiangzhuang_8854::SharedCtor() {
  _cached_size_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pos_ = 0;
  fan_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneQiangzhuang_8854::~ResNotifySomeOneQiangzhuang_8854() {
  SharedDtor();
}

void ResNotifySomeOneQiangzhuang_8854::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void ResNotifySomeOneQiangzhuang_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneQiangzhuang_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneQiangzhuang_8854_descriptor_;
}

const ResNotifySomeOneQiangzhuang_8854& ResNotifySomeOneQiangzhuang_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResNotifySomeOneQiangzhuang_8854* ResNotifySomeOneQiangzhuang_8854::default_instance_ = NULL;

ResNotifySomeOneQiangzhuang_8854* ResNotifySomeOneQiangzhuang_8854::New() const {
  return new ResNotifySomeOneQiangzhuang_8854;
}

void ResNotifySomeOneQiangzhuang_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    pos_ = 0;
    fan_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneQiangzhuang_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // required int32 pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fan;
        break;
      }

      // required int32 fan = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fan_)));
          set_has_fan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneQiangzhuang_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uniqueid(), output);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  // required int32 fan = 3;
  if (has_fan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneQiangzhuang_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueid(), target);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  // required int32 fan = 3;
  if (has_fan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneQiangzhuang_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueId = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required int32 fan = 3;
    if (has_fan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fan());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneQiangzhuang_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneQiangzhuang_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneQiangzhuang_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneQiangzhuang_8854::MergeFrom(const ResNotifySomeOneQiangzhuang_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_fan()) {
      set_fan(from.fan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneQiangzhuang_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneQiangzhuang_8854::CopyFrom(const ResNotifySomeOneQiangzhuang_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneQiangzhuang_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ResNotifySomeOneQiangzhuang_8854::Swap(ResNotifySomeOneQiangzhuang_8854* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(pos_, other->pos_);
    std::swap(fan_, other->fan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneQiangzhuang_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneQiangzhuang_8854_descriptor_;
  metadata.reflection = ResNotifySomeOneQiangzhuang_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LiangPaiOperate_8854::kUniqueIdFieldNumber;
const int LiangPaiOperate_8854::kPosFieldNumber;
const int LiangPaiOperate_8854::kCardInfosFieldNumber;
const int LiangPaiOperate_8854::kTypeFieldNumber;
const int LiangPaiOperate_8854::kMultipleFieldNumber;
#endif  // !_MSC_VER

LiangPaiOperate_8854::LiangPaiOperate_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LiangPaiOperate_8854::InitAsDefaultInstance() {
}

LiangPaiOperate_8854::LiangPaiOperate_8854(const LiangPaiOperate_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LiangPaiOperate_8854::SharedCtor() {
  _cached_size_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pos_ = 0;
  type_ = 0;
  multiple_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LiangPaiOperate_8854::~LiangPaiOperate_8854() {
  SharedDtor();
}

void LiangPaiOperate_8854::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void LiangPaiOperate_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiangPaiOperate_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LiangPaiOperate_8854_descriptor_;
}

const LiangPaiOperate_8854& LiangPaiOperate_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

LiangPaiOperate_8854* LiangPaiOperate_8854::default_instance_ = NULL;

LiangPaiOperate_8854* LiangPaiOperate_8854::New() const {
  return new LiangPaiOperate_8854;
}

void LiangPaiOperate_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    pos_ = 0;
    type_ = 0;
    multiple_ = 0;
  }
  cardinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LiangPaiOperate_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // required int32 pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cardInfos;
        break;
      }

      // repeated .ProtoNet.CardInfo_8854 cardInfos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cardInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cardinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cardInfos;
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_multiple;
        break;
      }

      // optional int32 multiple = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiple_)));
          set_has_multiple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LiangPaiOperate_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uniqueid(), output);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  // repeated .ProtoNet.CardInfo_8854 cardInfos = 3;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cardinfos(i), output);
  }

  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // optional int32 multiple = 5;
  if (has_multiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->multiple(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LiangPaiOperate_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueid(), target);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  // repeated .ProtoNet.CardInfo_8854 cardInfos = 3;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cardinfos(i), target);
  }

  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // optional int32 multiple = 5;
  if (has_multiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->multiple(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LiangPaiOperate_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueId = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 multiple = 5;
    if (has_multiple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->multiple());
    }

  }
  // repeated .ProtoNet.CardInfo_8854 cardInfos = 3;
  total_size += 1 * this->cardinfos_size();
  for (int i = 0; i < this->cardinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cardinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiangPaiOperate_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LiangPaiOperate_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LiangPaiOperate_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LiangPaiOperate_8854::MergeFrom(const LiangPaiOperate_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  cardinfos_.MergeFrom(from.cardinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_multiple()) {
      set_multiple(from.multiple());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LiangPaiOperate_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiangPaiOperate_8854::CopyFrom(const LiangPaiOperate_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiangPaiOperate_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < cardinfos_size(); i++) {
    if (!this->cardinfos(i).IsInitialized()) return false;
  }
  return true;
}

void LiangPaiOperate_8854::Swap(LiangPaiOperate_8854* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(pos_, other->pos_);
    cardinfos_.Swap(&other->cardinfos_);
    std::swap(type_, other->type_);
    std::swap(multiple_, other->multiple_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LiangPaiOperate_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LiangPaiOperate_8854_descriptor_;
  metadata.reflection = LiangPaiOperate_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyGameStart_8854::kDouniuGameRoomFieldNumber;
#endif  // !_MSC_VER

ResNotifyGameStart_8854::ResNotifyGameStart_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyGameStart_8854::InitAsDefaultInstance() {
  douniugameroom_ = const_cast< ::ProtoNet::DouniuGameRoom_8854*>(&::ProtoNet::DouniuGameRoom_8854::default_instance());
}

ResNotifyGameStart_8854::ResNotifyGameStart_8854(const ResNotifyGameStart_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyGameStart_8854::SharedCtor() {
  _cached_size_ = 0;
  douniugameroom_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyGameStart_8854::~ResNotifyGameStart_8854() {
  SharedDtor();
}

void ResNotifyGameStart_8854::SharedDtor() {
  if (this != default_instance_) {
    delete douniugameroom_;
  }
}

void ResNotifyGameStart_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyGameStart_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyGameStart_8854_descriptor_;
}

const ResNotifyGameStart_8854& ResNotifyGameStart_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResNotifyGameStart_8854* ResNotifyGameStart_8854::default_instance_ = NULL;

ResNotifyGameStart_8854* ResNotifyGameStart_8854::New() const {
  return new ResNotifyGameStart_8854;
}

void ResNotifyGameStart_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_douniugameroom()) {
      if (douniugameroom_ != NULL) douniugameroom_->::ProtoNet::DouniuGameRoom_8854::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyGameStart_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.DouniuGameRoom_8854 douniuGameRoom = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_douniugameroom()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyGameStart_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.DouniuGameRoom_8854 douniuGameRoom = 1;
  if (has_douniugameroom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->douniugameroom(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyGameStart_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.DouniuGameRoom_8854 douniuGameRoom = 1;
  if (has_douniugameroom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->douniugameroom(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyGameStart_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.DouniuGameRoom_8854 douniuGameRoom = 1;
    if (has_douniugameroom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->douniugameroom());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyGameStart_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyGameStart_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyGameStart_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyGameStart_8854::MergeFrom(const ResNotifyGameStart_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_douniugameroom()) {
      mutable_douniugameroom()->::ProtoNet::DouniuGameRoom_8854::MergeFrom(from.douniugameroom());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyGameStart_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyGameStart_8854::CopyFrom(const ResNotifyGameStart_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyGameStart_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_douniugameroom()) {
    if (!this->douniugameroom().IsInitialized()) return false;
  }
  return true;
}

void ResNotifyGameStart_8854::Swap(ResNotifyGameStart_8854* other) {
  if (other != this) {
    std::swap(douniugameroom_, other->douniugameroom_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyGameStart_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyGameStart_8854_descriptor_;
  metadata.reflection = ResNotifyGameStart_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyDispachCard_8854::kRecoverControllerInfosFieldNumber;
const int ResNotifyDispachCard_8854::kOperateTypeFieldNumber;
const int ResNotifyDispachCard_8854::kFanMaxFieldNumber;
const int ResNotifyDispachCard_8854::kQiangzhuangTimerFieldNumber;
const int ResNotifyDispachCard_8854::kMaxYazhuFanFieldNumber;
const int ResNotifyDispachCard_8854::kYazhuTimerFieldNumber;
const int ResNotifyDispachCard_8854::kBankerIdFieldNumber;
const int ResNotifyDispachCard_8854::kBankerPosFieldNumber;
const int ResNotifyDispachCard_8854::kCanyuFieldNumber;
#endif  // !_MSC_VER

ResNotifyDispachCard_8854::ResNotifyDispachCard_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyDispachCard_8854::InitAsDefaultInstance() {
}

ResNotifyDispachCard_8854::ResNotifyDispachCard_8854(const ResNotifyDispachCard_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyDispachCard_8854::SharedCtor() {
  _cached_size_ = 0;
  operatetype_ = 0;
  fanmax_ = 0;
  qiangzhuangtimer_ = 0;
  maxyazhufan_ = 0;
  yazhutimer_ = 0;
  bankerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bankerpos_ = 0;
  canyu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyDispachCard_8854::~ResNotifyDispachCard_8854() {
  SharedDtor();
}

void ResNotifyDispachCard_8854::SharedDtor() {
  if (bankerid_ != &::google::protobuf::internal::kEmptyString) {
    delete bankerid_;
  }
  if (canyu_ != &::google::protobuf::internal::kEmptyString) {
    delete canyu_;
  }
  if (this != default_instance_) {
  }
}

void ResNotifyDispachCard_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyDispachCard_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyDispachCard_8854_descriptor_;
}

const ResNotifyDispachCard_8854& ResNotifyDispachCard_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResNotifyDispachCard_8854* ResNotifyDispachCard_8854::default_instance_ = NULL;

ResNotifyDispachCard_8854* ResNotifyDispachCard_8854::New() const {
  return new ResNotifyDispachCard_8854;
}

void ResNotifyDispachCard_8854::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    operatetype_ = 0;
    fanmax_ = 0;
    qiangzhuangtimer_ = 0;
    maxyazhufan_ = 0;
    yazhutimer_ = 0;
    if (has_bankerid()) {
      if (bankerid_ != &::google::protobuf::internal::kEmptyString) {
        bankerid_->clear();
      }
    }
    bankerpos_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_canyu()) {
      if (canyu_ != &::google::protobuf::internal::kEmptyString) {
        canyu_->clear();
      }
    }
  }
  recovercontrollerinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyDispachCard_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoNet.ControllerDispachInfo_8854 recoverControllerInfos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_recoverControllerInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recovercontrollerinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_recoverControllerInfos;
        if (input->ExpectTag(16)) goto parse_operateType;
        break;
      }

      // required int32 operateType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_operateType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operatetype_)));
          set_has_operatetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fanMax;
        break;
      }

      // optional int32 fanMax = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fanMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fanmax_)));
          set_has_fanmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qiangzhuangTimer;
        break;
      }

      // optional int32 qiangzhuangTimer = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qiangzhuangTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qiangzhuangtimer_)));
          set_has_qiangzhuangtimer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_maxYazhuFan;
        break;
      }

      // optional int32 maxYazhuFan = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxYazhuFan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxyazhufan_)));
          set_has_maxyazhufan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_yazhuTimer;
        break;
      }

      // optional int32 yazhuTimer = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yazhuTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yazhutimer_)));
          set_has_yazhutimer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_bankerId;
        break;
      }

      // optional string bankerId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bankerId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bankerid().data(), this->bankerid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_bankerPos;
        break;
      }

      // optional int32 bankerPos = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bankerPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bankerpos_)));
          set_has_bankerpos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_canyu;
        break;
      }

      // optional string canyu = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_canyu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_canyu()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->canyu().data(), this->canyu().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyDispachCard_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoNet.ControllerDispachInfo_8854 recoverControllerInfos = 1;
  for (int i = 0; i < this->recovercontrollerinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->recovercontrollerinfos(i), output);
  }

  // required int32 operateType = 2;
  if (has_operatetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->operatetype(), output);
  }

  // optional int32 fanMax = 3;
  if (has_fanmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fanmax(), output);
  }

  // optional int32 qiangzhuangTimer = 4;
  if (has_qiangzhuangtimer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qiangzhuangtimer(), output);
  }

  // optional int32 maxYazhuFan = 5;
  if (has_maxyazhufan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->maxyazhufan(), output);
  }

  // optional int32 yazhuTimer = 6;
  if (has_yazhutimer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->yazhutimer(), output);
  }

  // optional string bankerId = 7;
  if (has_bankerid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bankerid().data(), this->bankerid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->bankerid(), output);
  }

  // optional int32 bankerPos = 8;
  if (has_bankerpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->bankerpos(), output);
  }

  // optional string canyu = 9;
  if (has_canyu()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->canyu().data(), this->canyu().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->canyu(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyDispachCard_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoNet.ControllerDispachInfo_8854 recoverControllerInfos = 1;
  for (int i = 0; i < this->recovercontrollerinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->recovercontrollerinfos(i), target);
  }

  // required int32 operateType = 2;
  if (has_operatetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->operatetype(), target);
  }

  // optional int32 fanMax = 3;
  if (has_fanmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fanmax(), target);
  }

  // optional int32 qiangzhuangTimer = 4;
  if (has_qiangzhuangtimer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qiangzhuangtimer(), target);
  }

  // optional int32 maxYazhuFan = 5;
  if (has_maxyazhufan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->maxyazhufan(), target);
  }

  // optional int32 yazhuTimer = 6;
  if (has_yazhutimer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->yazhutimer(), target);
  }

  // optional string bankerId = 7;
  if (has_bankerid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bankerid().data(), this->bankerid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->bankerid(), target);
  }

  // optional int32 bankerPos = 8;
  if (has_bankerpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->bankerpos(), target);
  }

  // optional string canyu = 9;
  if (has_canyu()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->canyu().data(), this->canyu().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->canyu(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyDispachCard_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required int32 operateType = 2;
    if (has_operatetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operatetype());
    }

    // optional int32 fanMax = 3;
    if (has_fanmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fanmax());
    }

    // optional int32 qiangzhuangTimer = 4;
    if (has_qiangzhuangtimer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qiangzhuangtimer());
    }

    // optional int32 maxYazhuFan = 5;
    if (has_maxyazhufan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxyazhufan());
    }

    // optional int32 yazhuTimer = 6;
    if (has_yazhutimer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yazhutimer());
    }

    // optional string bankerId = 7;
    if (has_bankerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bankerid());
    }

    // optional int32 bankerPos = 8;
    if (has_bankerpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bankerpos());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string canyu = 9;
    if (has_canyu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->canyu());
    }

  }
  // repeated .ProtoNet.ControllerDispachInfo_8854 recoverControllerInfos = 1;
  total_size += 1 * this->recovercontrollerinfos_size();
  for (int i = 0; i < this->recovercontrollerinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->recovercontrollerinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyDispachCard_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyDispachCard_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyDispachCard_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyDispachCard_8854::MergeFrom(const ResNotifyDispachCard_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  recovercontrollerinfos_.MergeFrom(from.recovercontrollerinfos_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_operatetype()) {
      set_operatetype(from.operatetype());
    }
    if (from.has_fanmax()) {
      set_fanmax(from.fanmax());
    }
    if (from.has_qiangzhuangtimer()) {
      set_qiangzhuangtimer(from.qiangzhuangtimer());
    }
    if (from.has_maxyazhufan()) {
      set_maxyazhufan(from.maxyazhufan());
    }
    if (from.has_yazhutimer()) {
      set_yazhutimer(from.yazhutimer());
    }
    if (from.has_bankerid()) {
      set_bankerid(from.bankerid());
    }
    if (from.has_bankerpos()) {
      set_bankerpos(from.bankerpos());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_canyu()) {
      set_canyu(from.canyu());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyDispachCard_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyDispachCard_8854::CopyFrom(const ResNotifyDispachCard_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyDispachCard_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  for (int i = 0; i < recovercontrollerinfos_size(); i++) {
    if (!this->recovercontrollerinfos(i).IsInitialized()) return false;
  }
  return true;
}

void ResNotifyDispachCard_8854::Swap(ResNotifyDispachCard_8854* other) {
  if (other != this) {
    recovercontrollerinfos_.Swap(&other->recovercontrollerinfos_);
    std::swap(operatetype_, other->operatetype_);
    std::swap(fanmax_, other->fanmax_);
    std::swap(qiangzhuangtimer_, other->qiangzhuangtimer_);
    std::swap(maxyazhufan_, other->maxyazhufan_);
    std::swap(yazhutimer_, other->yazhutimer_);
    std::swap(bankerid_, other->bankerid_);
    std::swap(bankerpos_, other->bankerpos_);
    std::swap(canyu_, other->canyu_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyDispachCard_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyDispachCard_8854_descriptor_;
  metadata.reflection = ResNotifyDispachCard_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqYazhu_8854::kYazhuFanFieldNumber;
#endif  // !_MSC_VER

ReqYazhu_8854::ReqYazhu_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqYazhu_8854::InitAsDefaultInstance() {
}

ReqYazhu_8854::ReqYazhu_8854(const ReqYazhu_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqYazhu_8854::SharedCtor() {
  _cached_size_ = 0;
  yazhufan_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqYazhu_8854::~ReqYazhu_8854() {
  SharedDtor();
}

void ReqYazhu_8854::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqYazhu_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqYazhu_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqYazhu_8854_descriptor_;
}

const ReqYazhu_8854& ReqYazhu_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ReqYazhu_8854* ReqYazhu_8854::default_instance_ = NULL;

ReqYazhu_8854* ReqYazhu_8854::New() const {
  return new ReqYazhu_8854;
}

void ReqYazhu_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    yazhufan_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqYazhu_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 yazhuFan = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yazhufan_)));
          set_has_yazhufan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqYazhu_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 yazhuFan = 1;
  if (has_yazhufan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->yazhufan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqYazhu_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 yazhuFan = 1;
  if (has_yazhufan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->yazhufan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqYazhu_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 yazhuFan = 1;
    if (has_yazhufan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yazhufan());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqYazhu_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqYazhu_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqYazhu_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqYazhu_8854::MergeFrom(const ReqYazhu_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_yazhufan()) {
      set_yazhufan(from.yazhufan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqYazhu_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqYazhu_8854::CopyFrom(const ReqYazhu_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqYazhu_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqYazhu_8854::Swap(ReqYazhu_8854* other) {
  if (other != this) {
    std::swap(yazhufan_, other->yazhufan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqYazhu_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqYazhu_8854_descriptor_;
  metadata.reflection = ReqYazhu_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResYazhu_8854::kResultFieldNumber;
#endif  // !_MSC_VER

ResYazhu_8854::ResYazhu_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResYazhu_8854::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResYazhu_8854::ResYazhu_8854(const ResYazhu_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResYazhu_8854::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResYazhu_8854::~ResYazhu_8854() {
  SharedDtor();
}

void ResYazhu_8854::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResYazhu_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResYazhu_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResYazhu_8854_descriptor_;
}

const ResYazhu_8854& ResYazhu_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResYazhu_8854* ResYazhu_8854::default_instance_ = NULL;

ResYazhu_8854* ResYazhu_8854::New() const {
  return new ResYazhu_8854;
}

void ResYazhu_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResYazhu_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResYazhu_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResYazhu_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResYazhu_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResYazhu_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResYazhu_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResYazhu_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResYazhu_8854::MergeFrom(const ResYazhu_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResYazhu_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResYazhu_8854::CopyFrom(const ResYazhu_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResYazhu_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResYazhu_8854::Swap(ResYazhu_8854* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResYazhu_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResYazhu_8854_descriptor_;
  metadata.reflection = ResYazhu_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneYazhu_8854::kUniqueIdFieldNumber;
const int ResNotifySomeOneYazhu_8854::kPosFieldNumber;
const int ResNotifySomeOneYazhu_8854::kYazhuFanFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneYazhu_8854::ResNotifySomeOneYazhu_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneYazhu_8854::InitAsDefaultInstance() {
}

ResNotifySomeOneYazhu_8854::ResNotifySomeOneYazhu_8854(const ResNotifySomeOneYazhu_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneYazhu_8854::SharedCtor() {
  _cached_size_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pos_ = 0;
  yazhufan_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneYazhu_8854::~ResNotifySomeOneYazhu_8854() {
  SharedDtor();
}

void ResNotifySomeOneYazhu_8854::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void ResNotifySomeOneYazhu_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneYazhu_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneYazhu_8854_descriptor_;
}

const ResNotifySomeOneYazhu_8854& ResNotifySomeOneYazhu_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResNotifySomeOneYazhu_8854* ResNotifySomeOneYazhu_8854::default_instance_ = NULL;

ResNotifySomeOneYazhu_8854* ResNotifySomeOneYazhu_8854::New() const {
  return new ResNotifySomeOneYazhu_8854;
}

void ResNotifySomeOneYazhu_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    pos_ = 0;
    yazhufan_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneYazhu_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // required int32 pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_yazhuFan;
        break;
      }

      // required int32 yazhuFan = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yazhuFan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yazhufan_)));
          set_has_yazhufan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneYazhu_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uniqueid(), output);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  // required int32 yazhuFan = 3;
  if (has_yazhufan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->yazhufan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneYazhu_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueid(), target);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  // required int32 yazhuFan = 3;
  if (has_yazhufan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->yazhufan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneYazhu_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueId = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required int32 yazhuFan = 3;
    if (has_yazhufan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yazhufan());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneYazhu_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneYazhu_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneYazhu_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneYazhu_8854::MergeFrom(const ResNotifySomeOneYazhu_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_yazhufan()) {
      set_yazhufan(from.yazhufan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneYazhu_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneYazhu_8854::CopyFrom(const ResNotifySomeOneYazhu_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneYazhu_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ResNotifySomeOneYazhu_8854::Swap(ResNotifySomeOneYazhu_8854* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(pos_, other->pos_);
    std::swap(yazhufan_, other->yazhufan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneYazhu_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneYazhu_8854_descriptor_;
  metadata.reflection = ResNotifySomeOneYazhu_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyDispachLeftCard_8854::kCardInfosFieldNumber;
const int ResNotifyDispachLeftCard_8854::kTypeFieldNumber;
const int ResNotifyDispachLeftCard_8854::kMultipleFieldNumber;
const int ResNotifyDispachLeftCard_8854::kTimerFieldNumber;
#endif  // !_MSC_VER

ResNotifyDispachLeftCard_8854::ResNotifyDispachLeftCard_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyDispachLeftCard_8854::InitAsDefaultInstance() {
}

ResNotifyDispachLeftCard_8854::ResNotifyDispachLeftCard_8854(const ResNotifyDispachLeftCard_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyDispachLeftCard_8854::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  multiple_ = 0;
  timer_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyDispachLeftCard_8854::~ResNotifyDispachLeftCard_8854() {
  SharedDtor();
}

void ResNotifyDispachLeftCard_8854::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResNotifyDispachLeftCard_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyDispachLeftCard_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyDispachLeftCard_8854_descriptor_;
}

const ResNotifyDispachLeftCard_8854& ResNotifyDispachLeftCard_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResNotifyDispachLeftCard_8854* ResNotifyDispachLeftCard_8854::default_instance_ = NULL;

ResNotifyDispachLeftCard_8854* ResNotifyDispachLeftCard_8854::New() const {
  return new ResNotifyDispachLeftCard_8854;
}

void ResNotifyDispachLeftCard_8854::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    type_ = 0;
    multiple_ = 0;
    timer_ = 0;
  }
  cardinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyDispachLeftCard_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoNet.CardInfo_8854 cardInfos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cardInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cardinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_cardInfos;
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_multiple;
        break;
      }

      // required int32 multiple = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiple_)));
          set_has_multiple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_timer;
        break;
      }

      // required int32 timer = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timer_)));
          set_has_timer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyDispachLeftCard_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoNet.CardInfo_8854 cardInfos = 1;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cardinfos(i), output);
  }

  // required int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required int32 multiple = 3;
  if (has_multiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->multiple(), output);
  }

  // required int32 timer = 4;
  if (has_timer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyDispachLeftCard_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoNet.CardInfo_8854 cardInfos = 1;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cardinfos(i), target);
  }

  // required int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required int32 multiple = 3;
  if (has_multiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->multiple(), target);
  }

  // required int32 timer = 4;
  if (has_timer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyDispachLeftCard_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required int32 multiple = 3;
    if (has_multiple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->multiple());
    }

    // required int32 timer = 4;
    if (has_timer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timer());
    }

  }
  // repeated .ProtoNet.CardInfo_8854 cardInfos = 1;
  total_size += 1 * this->cardinfos_size();
  for (int i = 0; i < this->cardinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cardinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyDispachLeftCard_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyDispachLeftCard_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyDispachLeftCard_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyDispachLeftCard_8854::MergeFrom(const ResNotifyDispachLeftCard_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  cardinfos_.MergeFrom(from.cardinfos_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_multiple()) {
      set_multiple(from.multiple());
    }
    if (from.has_timer()) {
      set_timer(from.timer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyDispachLeftCard_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyDispachLeftCard_8854::CopyFrom(const ResNotifyDispachLeftCard_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyDispachLeftCard_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < cardinfos_size(); i++) {
    if (!this->cardinfos(i).IsInitialized()) return false;
  }
  return true;
}

void ResNotifyDispachLeftCard_8854::Swap(ResNotifyDispachLeftCard_8854* other) {
  if (other != this) {
    cardinfos_.Swap(&other->cardinfos_);
    std::swap(type_, other->type_);
    std::swap(multiple_, other->multiple_);
    std::swap(timer_, other->timer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyDispachLeftCard_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyDispachLeftCard_8854_descriptor_;
  metadata.reflection = ResNotifyDispachLeftCard_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqLiangPai_8854::ReqLiangPai_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqLiangPai_8854::InitAsDefaultInstance() {
}

ReqLiangPai_8854::ReqLiangPai_8854(const ReqLiangPai_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqLiangPai_8854::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqLiangPai_8854::~ReqLiangPai_8854() {
  SharedDtor();
}

void ReqLiangPai_8854::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqLiangPai_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqLiangPai_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqLiangPai_8854_descriptor_;
}

const ReqLiangPai_8854& ReqLiangPai_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ReqLiangPai_8854* ReqLiangPai_8854::default_instance_ = NULL;

ReqLiangPai_8854* ReqLiangPai_8854::New() const {
  return new ReqLiangPai_8854;
}

void ReqLiangPai_8854::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqLiangPai_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqLiangPai_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqLiangPai_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqLiangPai_8854::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqLiangPai_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqLiangPai_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqLiangPai_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqLiangPai_8854::MergeFrom(const ReqLiangPai_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqLiangPai_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqLiangPai_8854::CopyFrom(const ReqLiangPai_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqLiangPai_8854::IsInitialized() const {

  return true;
}

void ReqLiangPai_8854::Swap(ReqLiangPai_8854* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqLiangPai_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqLiangPai_8854_descriptor_;
  metadata.reflection = ReqLiangPai_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResLiangPai_8854::kResultFieldNumber;
const int ResLiangPai_8854::kCardInfosFieldNumber;
const int ResLiangPai_8854::kTypeFieldNumber;
const int ResLiangPai_8854::kMultipleFieldNumber;
#endif  // !_MSC_VER

ResLiangPai_8854::ResLiangPai_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResLiangPai_8854::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResLiangPai_8854::ResLiangPai_8854(const ResLiangPai_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResLiangPai_8854::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  type_ = 0;
  multiple_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResLiangPai_8854::~ResLiangPai_8854() {
  SharedDtor();
}

void ResLiangPai_8854::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResLiangPai_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResLiangPai_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResLiangPai_8854_descriptor_;
}

const ResLiangPai_8854& ResLiangPai_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResLiangPai_8854* ResLiangPai_8854::default_instance_ = NULL;

ResLiangPai_8854* ResLiangPai_8854::New() const {
  return new ResLiangPai_8854;
}

void ResLiangPai_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    type_ = 0;
    multiple_ = 0;
  }
  cardinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResLiangPai_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_cardInfos;
        break;
      }

      // repeated .ProtoNet.CardInfo_8854 cardInfos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cardInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cardinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_cardInfos;
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_multiple;
        break;
      }

      // optional int32 multiple = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiple_)));
          set_has_multiple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResLiangPai_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // repeated .ProtoNet.CardInfo_8854 cardInfos = 2;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cardinfos(i), output);
  }

  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional int32 multiple = 4;
  if (has_multiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->multiple(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResLiangPai_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // repeated .ProtoNet.CardInfo_8854 cardInfos = 2;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cardinfos(i), target);
  }

  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional int32 multiple = 4;
  if (has_multiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->multiple(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResLiangPai_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 multiple = 4;
    if (has_multiple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->multiple());
    }

  }
  // repeated .ProtoNet.CardInfo_8854 cardInfos = 2;
  total_size += 1 * this->cardinfos_size();
  for (int i = 0; i < this->cardinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cardinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResLiangPai_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResLiangPai_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResLiangPai_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResLiangPai_8854::MergeFrom(const ResLiangPai_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  cardinfos_.MergeFrom(from.cardinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_multiple()) {
      set_multiple(from.multiple());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResLiangPai_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResLiangPai_8854::CopyFrom(const ResLiangPai_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResLiangPai_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  for (int i = 0; i < cardinfos_size(); i++) {
    if (!this->cardinfos(i).IsInitialized()) return false;
  }
  return true;
}

void ResLiangPai_8854::Swap(ResLiangPai_8854* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    cardinfos_.Swap(&other->cardinfos_);
    std::swap(type_, other->type_);
    std::swap(multiple_, other->multiple_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResLiangPai_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResLiangPai_8854_descriptor_;
  metadata.reflection = ResLiangPai_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneLiangPai_8854::kUniqueIdFieldNumber;
const int ResNotifySomeOneLiangPai_8854::kCardInfosFieldNumber;
const int ResNotifySomeOneLiangPai_8854::kTypeFieldNumber;
const int ResNotifySomeOneLiangPai_8854::kMultipleFieldNumber;
const int ResNotifySomeOneLiangPai_8854::kPosFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneLiangPai_8854::ResNotifySomeOneLiangPai_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneLiangPai_8854::InitAsDefaultInstance() {
}

ResNotifySomeOneLiangPai_8854::ResNotifySomeOneLiangPai_8854(const ResNotifySomeOneLiangPai_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneLiangPai_8854::SharedCtor() {
  _cached_size_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  multiple_ = 0;
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneLiangPai_8854::~ResNotifySomeOneLiangPai_8854() {
  SharedDtor();
}

void ResNotifySomeOneLiangPai_8854::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void ResNotifySomeOneLiangPai_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneLiangPai_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneLiangPai_8854_descriptor_;
}

const ResNotifySomeOneLiangPai_8854& ResNotifySomeOneLiangPai_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResNotifySomeOneLiangPai_8854* ResNotifySomeOneLiangPai_8854::default_instance_ = NULL;

ResNotifySomeOneLiangPai_8854* ResNotifySomeOneLiangPai_8854::New() const {
  return new ResNotifySomeOneLiangPai_8854;
}

void ResNotifySomeOneLiangPai_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    type_ = 0;
    multiple_ = 0;
    pos_ = 0;
  }
  cardinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneLiangPai_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_cardInfos;
        break;
      }

      // repeated .ProtoNet.CardInfo_8854 cardInfos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cardInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cardinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_cardInfos;
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // required int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_multiple;
        break;
      }

      // required int32 multiple = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiple_)));
          set_has_multiple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pos;
        break;
      }

      // required int32 pos = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneLiangPai_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uniqueid(), output);
  }

  // repeated .ProtoNet.CardInfo_8854 cardInfos = 2;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cardinfos(i), output);
  }

  // required int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // required int32 multiple = 4;
  if (has_multiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->multiple(), output);
  }

  // required int32 pos = 5;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneLiangPai_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueid(), target);
  }

  // repeated .ProtoNet.CardInfo_8854 cardInfos = 2;
  for (int i = 0; i < this->cardinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cardinfos(i), target);
  }

  // required int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // required int32 multiple = 4;
  if (has_multiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->multiple(), target);
  }

  // required int32 pos = 5;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneLiangPai_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueId = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required int32 multiple = 4;
    if (has_multiple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->multiple());
    }

    // required int32 pos = 5;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  // repeated .ProtoNet.CardInfo_8854 cardInfos = 2;
  total_size += 1 * this->cardinfos_size();
  for (int i = 0; i < this->cardinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cardinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneLiangPai_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneLiangPai_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneLiangPai_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneLiangPai_8854::MergeFrom(const ResNotifySomeOneLiangPai_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  cardinfos_.MergeFrom(from.cardinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_multiple()) {
      set_multiple(from.multiple());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneLiangPai_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneLiangPai_8854::CopyFrom(const ResNotifySomeOneLiangPai_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneLiangPai_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001d) != 0x0000001d) return false;

  for (int i = 0; i < cardinfos_size(); i++) {
    if (!this->cardinfos(i).IsInitialized()) return false;
  }
  return true;
}

void ResNotifySomeOneLiangPai_8854::Swap(ResNotifySomeOneLiangPai_8854* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    cardinfos_.Swap(&other->cardinfos_);
    std::swap(type_, other->type_);
    std::swap(multiple_, other->multiple_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneLiangPai_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneLiangPai_8854_descriptor_;
  metadata.reflection = ResNotifySomeOneLiangPai_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqSmallCalculatePanel_8854::kRoomIdFieldNumber;
const int ReqSmallCalculatePanel_8854::kTimesFieldNumber;
#endif  // !_MSC_VER

ReqSmallCalculatePanel_8854::ReqSmallCalculatePanel_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqSmallCalculatePanel_8854::InitAsDefaultInstance() {
}

ReqSmallCalculatePanel_8854::ReqSmallCalculatePanel_8854(const ReqSmallCalculatePanel_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqSmallCalculatePanel_8854::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqSmallCalculatePanel_8854::~ReqSmallCalculatePanel_8854() {
  SharedDtor();
}

void ReqSmallCalculatePanel_8854::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
  }
}

void ReqSmallCalculatePanel_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSmallCalculatePanel_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqSmallCalculatePanel_8854_descriptor_;
}

const ReqSmallCalculatePanel_8854& ReqSmallCalculatePanel_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ReqSmallCalculatePanel_8854* ReqSmallCalculatePanel_8854::default_instance_ = NULL;

ReqSmallCalculatePanel_8854* ReqSmallCalculatePanel_8854::New() const {
  return new ReqSmallCalculatePanel_8854;
}

void ReqSmallCalculatePanel_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqSmallCalculatePanel_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_times;
        break;
      }

      // required int32 times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqSmallCalculatePanel_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required int32 times = 2;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->times(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqSmallCalculatePanel_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required int32 times = 2;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->times(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqSmallCalculatePanel_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required int32 times = 2;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSmallCalculatePanel_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqSmallCalculatePanel_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqSmallCalculatePanel_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqSmallCalculatePanel_8854::MergeFrom(const ReqSmallCalculatePanel_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqSmallCalculatePanel_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSmallCalculatePanel_8854::CopyFrom(const ReqSmallCalculatePanel_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSmallCalculatePanel_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqSmallCalculatePanel_8854::Swap(ReqSmallCalculatePanel_8854* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(times_, other->times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqSmallCalculatePanel_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqSmallCalculatePanel_8854_descriptor_;
  metadata.reflection = ReqSmallCalculatePanel_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResSmallCalculatePanel_8854::kResultFieldNumber;
const int ResSmallCalculatePanel_8854::kSmallCalculatePanelFieldNumber;
#endif  // !_MSC_VER

ResSmallCalculatePanel_8854::ResSmallCalculatePanel_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResSmallCalculatePanel_8854::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
  smallcalculatepanel_ = const_cast< ::ProtoNet::SmallCalculatePanel_8854*>(&::ProtoNet::SmallCalculatePanel_8854::default_instance());
}

ResSmallCalculatePanel_8854::ResSmallCalculatePanel_8854(const ResSmallCalculatePanel_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResSmallCalculatePanel_8854::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  smallcalculatepanel_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResSmallCalculatePanel_8854::~ResSmallCalculatePanel_8854() {
  SharedDtor();
}

void ResSmallCalculatePanel_8854::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
    delete smallcalculatepanel_;
  }
}

void ResSmallCalculatePanel_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResSmallCalculatePanel_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResSmallCalculatePanel_8854_descriptor_;
}

const ResSmallCalculatePanel_8854& ResSmallCalculatePanel_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResSmallCalculatePanel_8854* ResSmallCalculatePanel_8854::default_instance_ = NULL;

ResSmallCalculatePanel_8854* ResSmallCalculatePanel_8854::New() const {
  return new ResSmallCalculatePanel_8854;
}

void ResSmallCalculatePanel_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    if (has_smallcalculatepanel()) {
      if (smallcalculatepanel_ != NULL) smallcalculatepanel_->::ProtoNet::SmallCalculatePanel_8854::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResSmallCalculatePanel_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_smallCalculatePanel;
        break;
      }

      // optional .ProtoNet.SmallCalculatePanel_8854 smallCalculatePanel = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_smallCalculatePanel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_smallcalculatepanel()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResSmallCalculatePanel_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional .ProtoNet.SmallCalculatePanel_8854 smallCalculatePanel = 2;
  if (has_smallcalculatepanel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->smallcalculatepanel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResSmallCalculatePanel_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional .ProtoNet.SmallCalculatePanel_8854 smallCalculatePanel = 2;
  if (has_smallcalculatepanel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->smallcalculatepanel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResSmallCalculatePanel_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional .ProtoNet.SmallCalculatePanel_8854 smallCalculatePanel = 2;
    if (has_smallcalculatepanel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->smallcalculatepanel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResSmallCalculatePanel_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResSmallCalculatePanel_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResSmallCalculatePanel_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResSmallCalculatePanel_8854::MergeFrom(const ResSmallCalculatePanel_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_smallcalculatepanel()) {
      mutable_smallcalculatepanel()->::ProtoNet::SmallCalculatePanel_8854::MergeFrom(from.smallcalculatepanel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResSmallCalculatePanel_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResSmallCalculatePanel_8854::CopyFrom(const ResSmallCalculatePanel_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResSmallCalculatePanel_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  if (has_smallcalculatepanel()) {
    if (!this->smallcalculatepanel().IsInitialized()) return false;
  }
  return true;
}

void ResSmallCalculatePanel_8854::Swap(ResSmallCalculatePanel_8854* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(smallcalculatepanel_, other->smallcalculatepanel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResSmallCalculatePanel_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResSmallCalculatePanel_8854_descriptor_;
  metadata.reflection = ResSmallCalculatePanel_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqBigCalculatePanel_8854::kRoomIdFieldNumber;
const int ReqBigCalculatePanel_8854::kContainSmallFieldNumber;
#endif  // !_MSC_VER

ReqBigCalculatePanel_8854::ReqBigCalculatePanel_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqBigCalculatePanel_8854::InitAsDefaultInstance() {
}

ReqBigCalculatePanel_8854::ReqBigCalculatePanel_8854(const ReqBigCalculatePanel_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqBigCalculatePanel_8854::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  containsmall_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqBigCalculatePanel_8854::~ReqBigCalculatePanel_8854() {
  SharedDtor();
}

void ReqBigCalculatePanel_8854::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
  }
}

void ReqBigCalculatePanel_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqBigCalculatePanel_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqBigCalculatePanel_8854_descriptor_;
}

const ReqBigCalculatePanel_8854& ReqBigCalculatePanel_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ReqBigCalculatePanel_8854* ReqBigCalculatePanel_8854::default_instance_ = NULL;

ReqBigCalculatePanel_8854* ReqBigCalculatePanel_8854::New() const {
  return new ReqBigCalculatePanel_8854;
}

void ReqBigCalculatePanel_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    containsmall_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqBigCalculatePanel_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_containSmall;
        break;
      }

      // required bool containSmall = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_containSmall:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &containsmall_)));
          set_has_containsmall();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqBigCalculatePanel_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required bool containSmall = 2;
  if (has_containsmall()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->containsmall(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqBigCalculatePanel_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required bool containSmall = 2;
  if (has_containsmall()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->containsmall(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqBigCalculatePanel_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required bool containSmall = 2;
    if (has_containsmall()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqBigCalculatePanel_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqBigCalculatePanel_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqBigCalculatePanel_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqBigCalculatePanel_8854::MergeFrom(const ReqBigCalculatePanel_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_containsmall()) {
      set_containsmall(from.containsmall());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqBigCalculatePanel_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqBigCalculatePanel_8854::CopyFrom(const ReqBigCalculatePanel_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqBigCalculatePanel_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqBigCalculatePanel_8854::Swap(ReqBigCalculatePanel_8854* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(containsmall_, other->containsmall_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqBigCalculatePanel_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqBigCalculatePanel_8854_descriptor_;
  metadata.reflection = ReqBigCalculatePanel_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResBigCalculatePanel_8854::kResultFieldNumber;
const int ResBigCalculatePanel_8854::kBigCalculatePanelFieldNumber;
#endif  // !_MSC_VER

ResBigCalculatePanel_8854::ResBigCalculatePanel_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResBigCalculatePanel_8854::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
  bigcalculatepanel_ = const_cast< ::ProtoNet::BigCalculatePanel_8854*>(&::ProtoNet::BigCalculatePanel_8854::default_instance());
}

ResBigCalculatePanel_8854::ResBigCalculatePanel_8854(const ResBigCalculatePanel_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResBigCalculatePanel_8854::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  bigcalculatepanel_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResBigCalculatePanel_8854::~ResBigCalculatePanel_8854() {
  SharedDtor();
}

void ResBigCalculatePanel_8854::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
    delete bigcalculatepanel_;
  }
}

void ResBigCalculatePanel_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResBigCalculatePanel_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResBigCalculatePanel_8854_descriptor_;
}

const ResBigCalculatePanel_8854& ResBigCalculatePanel_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResBigCalculatePanel_8854* ResBigCalculatePanel_8854::default_instance_ = NULL;

ResBigCalculatePanel_8854* ResBigCalculatePanel_8854::New() const {
  return new ResBigCalculatePanel_8854;
}

void ResBigCalculatePanel_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    if (has_bigcalculatepanel()) {
      if (bigcalculatepanel_ != NULL) bigcalculatepanel_->::ProtoNet::BigCalculatePanel_8854::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResBigCalculatePanel_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bigCalculatePanel;
        break;
      }

      // optional .ProtoNet.BigCalculatePanel_8854 bigCalculatePanel = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bigCalculatePanel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bigcalculatepanel()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResBigCalculatePanel_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional .ProtoNet.BigCalculatePanel_8854 bigCalculatePanel = 2;
  if (has_bigcalculatepanel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bigcalculatepanel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResBigCalculatePanel_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional .ProtoNet.BigCalculatePanel_8854 bigCalculatePanel = 2;
  if (has_bigcalculatepanel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bigcalculatepanel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResBigCalculatePanel_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional .ProtoNet.BigCalculatePanel_8854 bigCalculatePanel = 2;
    if (has_bigcalculatepanel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bigcalculatepanel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResBigCalculatePanel_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResBigCalculatePanel_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResBigCalculatePanel_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResBigCalculatePanel_8854::MergeFrom(const ResBigCalculatePanel_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_bigcalculatepanel()) {
      mutable_bigcalculatepanel()->::ProtoNet::BigCalculatePanel_8854::MergeFrom(from.bigcalculatepanel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResBigCalculatePanel_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResBigCalculatePanel_8854::CopyFrom(const ResBigCalculatePanel_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResBigCalculatePanel_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  if (has_bigcalculatepanel()) {
    if (!this->bigcalculatepanel().IsInitialized()) return false;
  }
  return true;
}

void ResBigCalculatePanel_8854::Swap(ResBigCalculatePanel_8854* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(bigcalculatepanel_, other->bigcalculatepanel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResBigCalculatePanel_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResBigCalculatePanel_8854_descriptor_;
  metadata.reflection = ResBigCalculatePanel_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqRecoverGameSceen_8854::ReqRecoverGameSceen_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqRecoverGameSceen_8854::InitAsDefaultInstance() {
}

ReqRecoverGameSceen_8854::ReqRecoverGameSceen_8854(const ReqRecoverGameSceen_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqRecoverGameSceen_8854::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqRecoverGameSceen_8854::~ReqRecoverGameSceen_8854() {
  SharedDtor();
}

void ReqRecoverGameSceen_8854::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqRecoverGameSceen_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqRecoverGameSceen_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqRecoverGameSceen_8854_descriptor_;
}

const ReqRecoverGameSceen_8854& ReqRecoverGameSceen_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ReqRecoverGameSceen_8854* ReqRecoverGameSceen_8854::default_instance_ = NULL;

ReqRecoverGameSceen_8854* ReqRecoverGameSceen_8854::New() const {
  return new ReqRecoverGameSceen_8854;
}

void ReqRecoverGameSceen_8854::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqRecoverGameSceen_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqRecoverGameSceen_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqRecoverGameSceen_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqRecoverGameSceen_8854::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqRecoverGameSceen_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqRecoverGameSceen_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqRecoverGameSceen_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqRecoverGameSceen_8854::MergeFrom(const ReqRecoverGameSceen_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqRecoverGameSceen_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRecoverGameSceen_8854::CopyFrom(const ReqRecoverGameSceen_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRecoverGameSceen_8854::IsInitialized() const {

  return true;
}

void ReqRecoverGameSceen_8854::Swap(ReqRecoverGameSceen_8854* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqRecoverGameSceen_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqRecoverGameSceen_8854_descriptor_;
  metadata.reflection = ReqRecoverGameSceen_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResRecoverGameSceen_8854::kResultFieldNumber;
const int ResRecoverGameSceen_8854::kGameIdFieldNumber;
const int ResRecoverGameSceen_8854::kRoomStatusFieldNumber;
const int ResRecoverGameSceen_8854::kRoomInfoFieldNumber;
const int ResRecoverGameSceen_8854::kDouniuGameRoomFieldNumber;
const int ResRecoverGameSceen_8854::kQiangzhaungOperatesFieldNumber;
const int ResRecoverGameSceen_8854::kYazhuOperatesFieldNumber;
const int ResRecoverGameSceen_8854::kLiangPaiOperatesFieldNumber;
const int ResRecoverGameSceen_8854::kRecoverControllerInfosFieldNumber;
const int ResRecoverGameSceen_8854::kSelfQiangzhuangMaxFanFieldNumber;
const int ResRecoverGameSceen_8854::kSelfYazhuMaxFanFieldNumber;
#endif  // !_MSC_VER

ResRecoverGameSceen_8854::ResRecoverGameSceen_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResRecoverGameSceen_8854::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
  roominfo_ = const_cast< ::ProtoNet::RoomInfo*>(&::ProtoNet::RoomInfo::default_instance());
  douniugameroom_ = const_cast< ::ProtoNet::DouniuGameRoom_8854*>(&::ProtoNet::DouniuGameRoom_8854::default_instance());
}

ResRecoverGameSceen_8854::ResRecoverGameSceen_8854(const ResRecoverGameSceen_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResRecoverGameSceen_8854::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  gameid_ = 0;
  roomstatus_ = 0;
  roominfo_ = NULL;
  douniugameroom_ = NULL;
  selfqiangzhuangmaxfan_ = 0;
  selfyazhumaxfan_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResRecoverGameSceen_8854::~ResRecoverGameSceen_8854() {
  SharedDtor();
}

void ResRecoverGameSceen_8854::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
    delete roominfo_;
    delete douniugameroom_;
  }
}

void ResRecoverGameSceen_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResRecoverGameSceen_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResRecoverGameSceen_8854_descriptor_;
}

const ResRecoverGameSceen_8854& ResRecoverGameSceen_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResRecoverGameSceen_8854* ResRecoverGameSceen_8854::default_instance_ = NULL;

ResRecoverGameSceen_8854* ResRecoverGameSceen_8854::New() const {
  return new ResRecoverGameSceen_8854;
}

void ResRecoverGameSceen_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    gameid_ = 0;
    roomstatus_ = 0;
    if (has_roominfo()) {
      if (roominfo_ != NULL) roominfo_->::ProtoNet::RoomInfo::Clear();
    }
    if (has_douniugameroom()) {
      if (douniugameroom_ != NULL) douniugameroom_->::ProtoNet::DouniuGameRoom_8854::Clear();
    }
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    selfqiangzhuangmaxfan_ = 0;
    selfyazhumaxfan_ = 0;
  }
  qiangzhaungoperates_.Clear();
  yazhuoperates_.Clear();
  liangpaioperates_.Clear();
  recovercontrollerinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResRecoverGameSceen_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gameId;
        break;
      }

      // optional int32 gameId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gameId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gameid_)));
          set_has_gameid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_roomStatus;
        break;
      }

      // optional int32 roomStatus = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roomStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomstatus_)));
          set_has_roomstatus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_roomInfo;
        break;
      }

      // optional .ProtoNet.RoomInfo roomInfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roominfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_douniuGameRoom;
        break;
      }

      // optional .ProtoNet.DouniuGameRoom_8854 douniuGameRoom = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_douniuGameRoom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_douniugameroom()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_qiangzhaungOperates;
        break;
      }

      // repeated .ProtoNet.QiangzhuangOperate_8854 qiangzhaungOperates = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_qiangzhaungOperates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_qiangzhaungoperates()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_qiangzhaungOperates;
        if (input->ExpectTag(58)) goto parse_yazhuOperates;
        break;
      }

      // repeated .ProtoNet.YazhuOperate_8854 yazhuOperates = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_yazhuOperates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_yazhuoperates()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_yazhuOperates;
        if (input->ExpectTag(66)) goto parse_liangPaiOperates;
        break;
      }

      // repeated .ProtoNet.LiangPaiOperate_8854 liangPaiOperates = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_liangPaiOperates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_liangpaioperates()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_liangPaiOperates;
        if (input->ExpectTag(74)) goto parse_recoverControllerInfos;
        break;
      }

      // repeated .ProtoNet.ControllerDispachInfo_8854 recoverControllerInfos = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_recoverControllerInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recovercontrollerinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_recoverControllerInfos;
        if (input->ExpectTag(80)) goto parse_selfQiangzhuangMaxFan;
        break;
      }

      // optional int32 selfQiangzhuangMaxFan = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_selfQiangzhuangMaxFan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &selfqiangzhuangmaxfan_)));
          set_has_selfqiangzhuangmaxfan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_selfYazhuMaxFan;
        break;
      }

      // optional int32 selfYazhuMaxFan = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_selfYazhuMaxFan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &selfyazhumaxfan_)));
          set_has_selfyazhumaxfan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResRecoverGameSceen_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional int32 gameId = 2;
  if (has_gameid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gameid(), output);
  }

  // optional int32 roomStatus = 3;
  if (has_roomstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->roomstatus(), output);
  }

  // optional .ProtoNet.RoomInfo roomInfo = 4;
  if (has_roominfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->roominfo(), output);
  }

  // optional .ProtoNet.DouniuGameRoom_8854 douniuGameRoom = 5;
  if (has_douniugameroom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->douniugameroom(), output);
  }

  // repeated .ProtoNet.QiangzhuangOperate_8854 qiangzhaungOperates = 6;
  for (int i = 0; i < this->qiangzhaungoperates_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->qiangzhaungoperates(i), output);
  }

  // repeated .ProtoNet.YazhuOperate_8854 yazhuOperates = 7;
  for (int i = 0; i < this->yazhuoperates_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->yazhuoperates(i), output);
  }

  // repeated .ProtoNet.LiangPaiOperate_8854 liangPaiOperates = 8;
  for (int i = 0; i < this->liangpaioperates_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->liangpaioperates(i), output);
  }

  // repeated .ProtoNet.ControllerDispachInfo_8854 recoverControllerInfos = 9;
  for (int i = 0; i < this->recovercontrollerinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->recovercontrollerinfos(i), output);
  }

  // optional int32 selfQiangzhuangMaxFan = 10;
  if (has_selfqiangzhuangmaxfan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->selfqiangzhuangmaxfan(), output);
  }

  // optional int32 selfYazhuMaxFan = 11;
  if (has_selfyazhumaxfan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->selfyazhumaxfan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResRecoverGameSceen_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional int32 gameId = 2;
  if (has_gameid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gameid(), target);
  }

  // optional int32 roomStatus = 3;
  if (has_roomstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->roomstatus(), target);
  }

  // optional .ProtoNet.RoomInfo roomInfo = 4;
  if (has_roominfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->roominfo(), target);
  }

  // optional .ProtoNet.DouniuGameRoom_8854 douniuGameRoom = 5;
  if (has_douniugameroom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->douniugameroom(), target);
  }

  // repeated .ProtoNet.QiangzhuangOperate_8854 qiangzhaungOperates = 6;
  for (int i = 0; i < this->qiangzhaungoperates_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->qiangzhaungoperates(i), target);
  }

  // repeated .ProtoNet.YazhuOperate_8854 yazhuOperates = 7;
  for (int i = 0; i < this->yazhuoperates_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->yazhuoperates(i), target);
  }

  // repeated .ProtoNet.LiangPaiOperate_8854 liangPaiOperates = 8;
  for (int i = 0; i < this->liangpaioperates_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->liangpaioperates(i), target);
  }

  // repeated .ProtoNet.ControllerDispachInfo_8854 recoverControllerInfos = 9;
  for (int i = 0; i < this->recovercontrollerinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->recovercontrollerinfos(i), target);
  }

  // optional int32 selfQiangzhuangMaxFan = 10;
  if (has_selfqiangzhuangmaxfan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->selfqiangzhuangmaxfan(), target);
  }

  // optional int32 selfYazhuMaxFan = 11;
  if (has_selfyazhumaxfan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->selfyazhumaxfan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResRecoverGameSceen_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional int32 gameId = 2;
    if (has_gameid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gameid());
    }

    // optional int32 roomStatus = 3;
    if (has_roomstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomstatus());
    }

    // optional .ProtoNet.RoomInfo roomInfo = 4;
    if (has_roominfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->roominfo());
    }

    // optional .ProtoNet.DouniuGameRoom_8854 douniuGameRoom = 5;
    if (has_douniugameroom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->douniugameroom());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional int32 selfQiangzhuangMaxFan = 10;
    if (has_selfqiangzhuangmaxfan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->selfqiangzhuangmaxfan());
    }

    // optional int32 selfYazhuMaxFan = 11;
    if (has_selfyazhumaxfan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->selfyazhumaxfan());
    }

  }
  // repeated .ProtoNet.QiangzhuangOperate_8854 qiangzhaungOperates = 6;
  total_size += 1 * this->qiangzhaungoperates_size();
  for (int i = 0; i < this->qiangzhaungoperates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->qiangzhaungoperates(i));
  }

  // repeated .ProtoNet.YazhuOperate_8854 yazhuOperates = 7;
  total_size += 1 * this->yazhuoperates_size();
  for (int i = 0; i < this->yazhuoperates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->yazhuoperates(i));
  }

  // repeated .ProtoNet.LiangPaiOperate_8854 liangPaiOperates = 8;
  total_size += 1 * this->liangpaioperates_size();
  for (int i = 0; i < this->liangpaioperates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->liangpaioperates(i));
  }

  // repeated .ProtoNet.ControllerDispachInfo_8854 recoverControllerInfos = 9;
  total_size += 1 * this->recovercontrollerinfos_size();
  for (int i = 0; i < this->recovercontrollerinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->recovercontrollerinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResRecoverGameSceen_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResRecoverGameSceen_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResRecoverGameSceen_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResRecoverGameSceen_8854::MergeFrom(const ResRecoverGameSceen_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  qiangzhaungoperates_.MergeFrom(from.qiangzhaungoperates_);
  yazhuoperates_.MergeFrom(from.yazhuoperates_);
  liangpaioperates_.MergeFrom(from.liangpaioperates_);
  recovercontrollerinfos_.MergeFrom(from.recovercontrollerinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_gameid()) {
      set_gameid(from.gameid());
    }
    if (from.has_roomstatus()) {
      set_roomstatus(from.roomstatus());
    }
    if (from.has_roominfo()) {
      mutable_roominfo()->::ProtoNet::RoomInfo::MergeFrom(from.roominfo());
    }
    if (from.has_douniugameroom()) {
      mutable_douniugameroom()->::ProtoNet::DouniuGameRoom_8854::MergeFrom(from.douniugameroom());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_selfqiangzhuangmaxfan()) {
      set_selfqiangzhuangmaxfan(from.selfqiangzhuangmaxfan());
    }
    if (from.has_selfyazhumaxfan()) {
      set_selfyazhumaxfan(from.selfyazhumaxfan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResRecoverGameSceen_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResRecoverGameSceen_8854::CopyFrom(const ResRecoverGameSceen_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResRecoverGameSceen_8854::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  if (has_roominfo()) {
    if (!this->roominfo().IsInitialized()) return false;
  }
  if (has_douniugameroom()) {
    if (!this->douniugameroom().IsInitialized()) return false;
  }
  for (int i = 0; i < qiangzhaungoperates_size(); i++) {
    if (!this->qiangzhaungoperates(i).IsInitialized()) return false;
  }
  for (int i = 0; i < yazhuoperates_size(); i++) {
    if (!this->yazhuoperates(i).IsInitialized()) return false;
  }
  for (int i = 0; i < liangpaioperates_size(); i++) {
    if (!this->liangpaioperates(i).IsInitialized()) return false;
  }
  for (int i = 0; i < recovercontrollerinfos_size(); i++) {
    if (!this->recovercontrollerinfos(i).IsInitialized()) return false;
  }
  return true;
}

void ResRecoverGameSceen_8854::Swap(ResRecoverGameSceen_8854* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(gameid_, other->gameid_);
    std::swap(roomstatus_, other->roomstatus_);
    std::swap(roominfo_, other->roominfo_);
    std::swap(douniugameroom_, other->douniugameroom_);
    qiangzhaungoperates_.Swap(&other->qiangzhaungoperates_);
    yazhuoperates_.Swap(&other->yazhuoperates_);
    liangpaioperates_.Swap(&other->liangpaioperates_);
    recovercontrollerinfos_.Swap(&other->recovercontrollerinfos_);
    std::swap(selfqiangzhuangmaxfan_, other->selfqiangzhuangmaxfan_);
    std::swap(selfyazhumaxfan_, other->selfyazhumaxfan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResRecoverGameSceen_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResRecoverGameSceen_8854_descriptor_;
  metadata.reflection = ResRecoverGameSceen_8854_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResTuoGuan_8854::kIsTuoGuanFieldNumber;
const int ResTuoGuan_8854::kUniqueIdFieldNumber;
#endif  // !_MSC_VER

ResTuoGuan_8854::ResTuoGuan_8854()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResTuoGuan_8854::InitAsDefaultInstance() {
}

ResTuoGuan_8854::ResTuoGuan_8854(const ResTuoGuan_8854& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResTuoGuan_8854::SharedCtor() {
  _cached_size_ = 0;
  istuoguan_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResTuoGuan_8854::~ResTuoGuan_8854() {
  SharedDtor();
}

void ResTuoGuan_8854::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void ResTuoGuan_8854::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResTuoGuan_8854::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResTuoGuan_8854_descriptor_;
}

const ResTuoGuan_8854& ResTuoGuan_8854::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDouniu_2eproto();
  return *default_instance_;
}

ResTuoGuan_8854* ResTuoGuan_8854::default_instance_ = NULL;

ResTuoGuan_8854* ResTuoGuan_8854::New() const {
  return new ResTuoGuan_8854;
}

void ResTuoGuan_8854::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    istuoguan_ = 0;
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResTuoGuan_8854::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 isTuoGuan = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &istuoguan_)));
          set_has_istuoguan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_uniqueId;
        break;
      }

      // optional string uniqueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResTuoGuan_8854::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 isTuoGuan = 1;
  if (has_istuoguan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->istuoguan(), output);
  }

  // optional string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->uniqueid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResTuoGuan_8854::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 isTuoGuan = 1;
  if (has_istuoguan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->istuoguan(), target);
  }

  // optional string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uniqueid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResTuoGuan_8854::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 isTuoGuan = 1;
    if (has_istuoguan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->istuoguan());
    }

    // optional string uniqueId = 2;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResTuoGuan_8854::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResTuoGuan_8854* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResTuoGuan_8854*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResTuoGuan_8854::MergeFrom(const ResTuoGuan_8854& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_istuoguan()) {
      set_istuoguan(from.istuoguan());
    }
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResTuoGuan_8854::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResTuoGuan_8854::CopyFrom(const ResTuoGuan_8854& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResTuoGuan_8854::IsInitialized() const {

  return true;
}

void ResTuoGuan_8854::Swap(ResTuoGuan_8854* other) {
  if (other != this) {
    std::swap(istuoguan_, other->istuoguan_);
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResTuoGuan_8854::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResTuoGuan_8854_descriptor_;
  metadata.reflection = ResTuoGuan_8854_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoNet

// @@protoc_insertion_point(global_scope)
