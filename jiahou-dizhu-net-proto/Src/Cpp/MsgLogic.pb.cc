// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgLogic.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgLogic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoNet {

namespace {

const ::google::protobuf::Descriptor* SdkController_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SdkController_reflection_ = NULL;
const ::google::protobuf::Descriptor* PosBrife_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PosBrife_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DissolutionStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DissolutionStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* DissolutionStatusDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DissolutionStatusDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqLogicLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqLogicLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResLogicLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResLogicLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqCreateGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqCreateGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResCreateGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResCreateGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyGameRoomCreate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyGameRoomCreate_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqJoinGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqJoinGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResJoinGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResJoinGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneJoinGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneJoinGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqExitGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqExitGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResExitGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResExitGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneExitGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneExitGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqGameReady_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqGameReady_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResGameReady_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResGameReady_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqDissolutionGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqDissolutionGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResDissolutionGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResDissolutionGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneReqDissolutionGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneReqDissolutionGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqAgreeDissolutionGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqAgreeDissolutionGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResAgreeDissolutionGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResAgreeDissolutionGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneAggreeDissolutionGameRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneAggreeDissolutionGameRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyGameRoomDissolution_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyGameRoomDissolution_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyGameOver_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyGameOver_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqGetRoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqGetRoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResGetRoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResGetRoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneGameReady_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneGameReady_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqChangeOnlineStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqChangeOnlineStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResChangeOnlineStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResChangeOnlineStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneChangeOnlineStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneChangeOnlineStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyBigCalculatePanel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyBigCalculatePanel_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqCorrectTimer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqCorrectTimer_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResCorrectTimer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResCorrectTimer_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqQuickChangeRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqQuickChangeRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResQuickChangeRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResQuickChangeRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneChangeRobot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneChangeRobot_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyChangeToOldRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyChangeToOldRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqSitDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqSitDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResSitDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResSitDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneSitDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneSitDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqStandUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqStandUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResStandUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResStandUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneStandUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneStandUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifySomeOneEnterCharge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifySomeOneEnterCharge_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyAccountsChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyAccountsChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyChargeOver_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyChargeOver_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqWatherList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqWatherList_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResWatherList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResWatherList_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqOnceMore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqOnceMore_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResOnceMore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResOnceMore_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResNotifyOnceMore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResNotifyOnceMore_reflection_ = NULL;
const ::google::protobuf::Descriptor* reqLogicServerTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  reqLogicServerTime_reflection_ = NULL;
const ::google::protobuf::Descriptor* resLogicServerTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  resLogicServerTime_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgLogic_2eproto() {
  protobuf_AddDesc_MsgLogic_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgLogic.proto");
  GOOGLE_CHECK(file != NULL);
  SdkController_descriptor_ = file->message_type(0);
  static const int SdkController_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, headimg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, headtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, health_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, selfrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, robot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, watcher_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, extendstr_),
  };
  SdkController_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SdkController_descriptor_,
      SdkController::default_instance_,
      SdkController_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkController, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SdkController));
  PosBrife_descriptor_ = file->message_type(1);
  static const int PosBrife_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosBrife, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosBrife, controlleruniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosBrife, online_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosBrife, ready_),
  };
  PosBrife_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PosBrife_descriptor_,
      PosBrife::default_instance_,
      PosBrife_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosBrife, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosBrife, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PosBrife));
  RoomInfo_descriptor_ = file->message_type(2);
  static const int RoomInfo_offsets_[27] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, roomname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, roomeruniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, controllers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, extendstr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, roomstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, posbrifes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, leftmatchcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, totalcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, dissolutionstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, maxplayernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, currentplayernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, readytimer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, gameid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, roomtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, timestype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, yazhu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, watting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, serverextend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, fangkajinbi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, chargelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, ext_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, clubid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, tablenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, clubgametypeid_),
  };
  RoomInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RoomInfo_descriptor_,
      RoomInfo::default_instance_,
      RoomInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RoomInfo));
  DissolutionStatus_descriptor_ = file->message_type(3);
  static const int DissolutionStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatus, dissolutionstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatus, requniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatus, details_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatus, lefttimer_),
  };
  DissolutionStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DissolutionStatus_descriptor_,
      DissolutionStatus::default_instance_,
      DissolutionStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DissolutionStatus));
  DissolutionStatusDetail_descriptor_ = file->message_type(4);
  static const int DissolutionStatusDetail_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatusDetail, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatusDetail, controlleruniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatusDetail, agree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatusDetail, pos_),
  };
  DissolutionStatusDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DissolutionStatusDetail_descriptor_,
      DissolutionStatusDetail::default_instance_,
      DissolutionStatusDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatusDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DissolutionStatusDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DissolutionStatusDetail));
  ReqLogicLogin_descriptor_ = file->message_type(5);
  static const int ReqLogicLogin_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogicLogin, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogicLogin, ticket_),
  };
  ReqLogicLogin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqLogicLogin_descriptor_,
      ReqLogicLogin::default_instance_,
      ReqLogicLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogicLogin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogicLogin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqLogicLogin));
  ResLogicLogin_descriptor_ = file->message_type(6);
  static const int ResLogicLogin_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLogicLogin, result_),
  };
  ResLogicLogin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResLogicLogin_descriptor_,
      ResLogicLogin::default_instance_,
      ResLogicLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLogicLogin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResLogicLogin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResLogicLogin));
  ReqCreateGameRoom_descriptor_ = file->message_type(7);
  static const int ReqCreateGameRoom_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, roomtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, paramstring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, timestype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, paytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, halfwayjoin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, maxplayernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, yazhu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, fangkajinbi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, minneed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, pipeiparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, clubid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, clubtablenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, clubgametypeid_),
  };
  ReqCreateGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqCreateGameRoom_descriptor_,
      ReqCreateGameRoom::default_instance_,
      ReqCreateGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCreateGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqCreateGameRoom));
  ResCreateGameRoom_descriptor_ = file->message_type(8);
  static const int ResCreateGameRoom_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResCreateGameRoom, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResCreateGameRoom, readytimer_),
  };
  ResCreateGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResCreateGameRoom_descriptor_,
      ResCreateGameRoom::default_instance_,
      ResCreateGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResCreateGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResCreateGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResCreateGameRoom));
  ResNotifyGameRoomCreate_descriptor_ = file->message_type(9);
  static const int ResNotifyGameRoomCreate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameRoomCreate, roomid_),
  };
  ResNotifyGameRoomCreate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyGameRoomCreate_descriptor_,
      ResNotifyGameRoomCreate::default_instance_,
      ResNotifyGameRoomCreate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameRoomCreate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameRoomCreate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyGameRoomCreate));
  ReqJoinGameRoom_descriptor_ = file->message_type(10);
  static const int ReqJoinGameRoom_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqJoinGameRoom, roomid_),
  };
  ReqJoinGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqJoinGameRoom_descriptor_,
      ReqJoinGameRoom::default_instance_,
      ReqJoinGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqJoinGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqJoinGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqJoinGameRoom));
  ResJoinGameRoom_descriptor_ = file->message_type(11);
  static const int ResJoinGameRoom_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResJoinGameRoom, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResJoinGameRoom, roominfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResJoinGameRoom, readytimer_),
  };
  ResJoinGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResJoinGameRoom_descriptor_,
      ResJoinGameRoom::default_instance_,
      ResJoinGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResJoinGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResJoinGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResJoinGameRoom));
  ResNotifySomeOneJoinGameRoom_descriptor_ = file->message_type(12);
  static const int ResNotifySomeOneJoinGameRoom_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneJoinGameRoom, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneJoinGameRoom, controller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneJoinGameRoom, posbrife_),
  };
  ResNotifySomeOneJoinGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneJoinGameRoom_descriptor_,
      ResNotifySomeOneJoinGameRoom::default_instance_,
      ResNotifySomeOneJoinGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneJoinGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneJoinGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneJoinGameRoom));
  ReqExitGameRoom_descriptor_ = file->message_type(13);
  static const int ReqExitGameRoom_offsets_[1] = {
  };
  ReqExitGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqExitGameRoom_descriptor_,
      ReqExitGameRoom::default_instance_,
      ReqExitGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqExitGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqExitGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqExitGameRoom));
  ResExitGameRoom_descriptor_ = file->message_type(14);
  static const int ResExitGameRoom_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResExitGameRoom, result_),
  };
  ResExitGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResExitGameRoom_descriptor_,
      ResExitGameRoom::default_instance_,
      ResExitGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResExitGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResExitGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResExitGameRoom));
  ResNotifySomeOneExitGameRoom_descriptor_ = file->message_type(15);
  static const int ResNotifySomeOneExitGameRoom_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneExitGameRoom, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneExitGameRoom, controller_),
  };
  ResNotifySomeOneExitGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneExitGameRoom_descriptor_,
      ResNotifySomeOneExitGameRoom::default_instance_,
      ResNotifySomeOneExitGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneExitGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneExitGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneExitGameRoom));
  ReqGameReady_descriptor_ = file->message_type(16);
  static const int ReqGameReady_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGameReady, ready_),
  };
  ReqGameReady_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqGameReady_descriptor_,
      ReqGameReady::default_instance_,
      ReqGameReady_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGameReady, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGameReady, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqGameReady));
  ResGameReady_descriptor_ = file->message_type(17);
  static const int ResGameReady_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResGameReady, result_),
  };
  ResGameReady_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResGameReady_descriptor_,
      ResGameReady::default_instance_,
      ResGameReady_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResGameReady, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResGameReady, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResGameReady));
  ReqDissolutionGameRoom_descriptor_ = file->message_type(18);
  static const int ReqDissolutionGameRoom_offsets_[1] = {
  };
  ReqDissolutionGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqDissolutionGameRoom_descriptor_,
      ReqDissolutionGameRoom::default_instance_,
      ReqDissolutionGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqDissolutionGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqDissolutionGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqDissolutionGameRoom));
  ResDissolutionGameRoom_descriptor_ = file->message_type(19);
  static const int ResDissolutionGameRoom_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResDissolutionGameRoom, result_),
  };
  ResDissolutionGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResDissolutionGameRoom_descriptor_,
      ResDissolutionGameRoom::default_instance_,
      ResDissolutionGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResDissolutionGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResDissolutionGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResDissolutionGameRoom));
  ResNotifySomeOneReqDissolutionGameRoom_descriptor_ = file->message_type(20);
  static const int ResNotifySomeOneReqDissolutionGameRoom_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneReqDissolutionGameRoom, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneReqDissolutionGameRoom, controller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneReqDissolutionGameRoom, posbrife_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneReqDissolutionGameRoom, timer_),
  };
  ResNotifySomeOneReqDissolutionGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneReqDissolutionGameRoom_descriptor_,
      ResNotifySomeOneReqDissolutionGameRoom::default_instance_,
      ResNotifySomeOneReqDissolutionGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneReqDissolutionGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneReqDissolutionGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneReqDissolutionGameRoom));
  ReqAgreeDissolutionGameRoom_descriptor_ = file->message_type(21);
  static const int ReqAgreeDissolutionGameRoom_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAgreeDissolutionGameRoom, agree_),
  };
  ReqAgreeDissolutionGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqAgreeDissolutionGameRoom_descriptor_,
      ReqAgreeDissolutionGameRoom::default_instance_,
      ReqAgreeDissolutionGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAgreeDissolutionGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAgreeDissolutionGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqAgreeDissolutionGameRoom));
  ResAgreeDissolutionGameRoom_descriptor_ = file->message_type(22);
  static const int ResAgreeDissolutionGameRoom_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResAgreeDissolutionGameRoom, result_),
  };
  ResAgreeDissolutionGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResAgreeDissolutionGameRoom_descriptor_,
      ResAgreeDissolutionGameRoom::default_instance_,
      ResAgreeDissolutionGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResAgreeDissolutionGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResAgreeDissolutionGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResAgreeDissolutionGameRoom));
  ResNotifySomeOneAggreeDissolutionGameRoom_descriptor_ = file->message_type(23);
  static const int ResNotifySomeOneAggreeDissolutionGameRoom_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneAggreeDissolutionGameRoom, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneAggreeDissolutionGameRoom, controller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneAggreeDissolutionGameRoom, posbrife_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneAggreeDissolutionGameRoom, agree_),
  };
  ResNotifySomeOneAggreeDissolutionGameRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneAggreeDissolutionGameRoom_descriptor_,
      ResNotifySomeOneAggreeDissolutionGameRoom::default_instance_,
      ResNotifySomeOneAggreeDissolutionGameRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneAggreeDissolutionGameRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneAggreeDissolutionGameRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneAggreeDissolutionGameRoom));
  ResNotifyGameRoomDissolution_descriptor_ = file->message_type(24);
  static const int ResNotifyGameRoomDissolution_offsets_[1] = {
  };
  ResNotifyGameRoomDissolution_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyGameRoomDissolution_descriptor_,
      ResNotifyGameRoomDissolution::default_instance_,
      ResNotifyGameRoomDissolution_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameRoomDissolution, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameRoomDissolution, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyGameRoomDissolution));
  ResNotifyGameOver_descriptor_ = file->message_type(25);
  static const int ResNotifyGameOver_offsets_[1] = {
  };
  ResNotifyGameOver_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyGameOver_descriptor_,
      ResNotifyGameOver::default_instance_,
      ResNotifyGameOver_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameOver, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyGameOver, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyGameOver));
  ReqGetRoomInfo_descriptor_ = file->message_type(26);
  static const int ReqGetRoomInfo_offsets_[1] = {
  };
  ReqGetRoomInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqGetRoomInfo_descriptor_,
      ReqGetRoomInfo::default_instance_,
      ReqGetRoomInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGetRoomInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGetRoomInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqGetRoomInfo));
  ResGetRoomInfo_descriptor_ = file->message_type(27);
  static const int ResGetRoomInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResGetRoomInfo, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResGetRoomInfo, roominfo_),
  };
  ResGetRoomInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResGetRoomInfo_descriptor_,
      ResGetRoomInfo::default_instance_,
      ResGetRoomInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResGetRoomInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResGetRoomInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResGetRoomInfo));
  ResNotifySomeOneGameReady_descriptor_ = file->message_type(28);
  static const int ResNotifySomeOneGameReady_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneGameReady, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneGameReady, controller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneGameReady, posbrife_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneGameReady, ready_),
  };
  ResNotifySomeOneGameReady_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneGameReady_descriptor_,
      ResNotifySomeOneGameReady::default_instance_,
      ResNotifySomeOneGameReady_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneGameReady, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneGameReady, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneGameReady));
  ReqChangeOnlineStatus_descriptor_ = file->message_type(29);
  static const int ReqChangeOnlineStatus_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqChangeOnlineStatus, online_),
  };
  ReqChangeOnlineStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqChangeOnlineStatus_descriptor_,
      ReqChangeOnlineStatus::default_instance_,
      ReqChangeOnlineStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqChangeOnlineStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqChangeOnlineStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqChangeOnlineStatus));
  ResChangeOnlineStatus_descriptor_ = file->message_type(30);
  static const int ResChangeOnlineStatus_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResChangeOnlineStatus, result_),
  };
  ResChangeOnlineStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResChangeOnlineStatus_descriptor_,
      ResChangeOnlineStatus::default_instance_,
      ResChangeOnlineStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResChangeOnlineStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResChangeOnlineStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResChangeOnlineStatus));
  ResNotifySomeOneChangeOnlineStatus_descriptor_ = file->message_type(31);
  static const int ResNotifySomeOneChangeOnlineStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeOnlineStatus, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeOnlineStatus, controller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeOnlineStatus, posbrife_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeOnlineStatus, online_),
  };
  ResNotifySomeOneChangeOnlineStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneChangeOnlineStatus_descriptor_,
      ResNotifySomeOneChangeOnlineStatus::default_instance_,
      ResNotifySomeOneChangeOnlineStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeOnlineStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeOnlineStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneChangeOnlineStatus));
  ResNotifyBigCalculatePanel_descriptor_ = file->message_type(32);
  static const int ResNotifyBigCalculatePanel_offsets_[1] = {
  };
  ResNotifyBigCalculatePanel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyBigCalculatePanel_descriptor_,
      ResNotifyBigCalculatePanel::default_instance_,
      ResNotifyBigCalculatePanel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyBigCalculatePanel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyBigCalculatePanel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyBigCalculatePanel));
  ReqCorrectTimer_descriptor_ = file->message_type(33);
  static const int ReqCorrectTimer_offsets_[1] = {
  };
  ReqCorrectTimer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqCorrectTimer_descriptor_,
      ReqCorrectTimer::default_instance_,
      ReqCorrectTimer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCorrectTimer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCorrectTimer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqCorrectTimer));
  ResCorrectTimer_descriptor_ = file->message_type(34);
  static const int ResCorrectTimer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResCorrectTimer, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResCorrectTimer, leftdissolutiontimer_),
  };
  ResCorrectTimer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResCorrectTimer_descriptor_,
      ResCorrectTimer::default_instance_,
      ResCorrectTimer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResCorrectTimer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResCorrectTimer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResCorrectTimer));
  ReqQuickChangeRoom_descriptor_ = file->message_type(35);
  static const int ReqQuickChangeRoom_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqQuickChangeRoom, pipeiparam_),
  };
  ReqQuickChangeRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqQuickChangeRoom_descriptor_,
      ReqQuickChangeRoom::default_instance_,
      ReqQuickChangeRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqQuickChangeRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqQuickChangeRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqQuickChangeRoom));
  ResQuickChangeRoom_descriptor_ = file->message_type(36);
  static const int ResQuickChangeRoom_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, operate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, roomtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, bestserverinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, logicdetails_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, gameid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, timestype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, changeserver_),
  };
  ResQuickChangeRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResQuickChangeRoom_descriptor_,
      ResQuickChangeRoom::default_instance_,
      ResQuickChangeRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResQuickChangeRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResQuickChangeRoom));
  ResNotifySomeOneChangeRobot_descriptor_ = file->message_type(37);
  static const int ResNotifySomeOneChangeRobot_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeRobot, isrobot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeRobot, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeRobot, pos_),
  };
  ResNotifySomeOneChangeRobot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneChangeRobot_descriptor_,
      ResNotifySomeOneChangeRobot::default_instance_,
      ResNotifySomeOneChangeRobot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeRobot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneChangeRobot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneChangeRobot));
  ResNotifyChangeToOldRoom_descriptor_ = file->message_type(38);
  static const int ResNotifyChangeToOldRoom_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChangeToOldRoom, bestserverinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChangeToOldRoom, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChangeToOldRoom, gameid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChangeToOldRoom, timestype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChangeToOldRoom, roomtype_),
  };
  ResNotifyChangeToOldRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyChangeToOldRoom_descriptor_,
      ResNotifyChangeToOldRoom::default_instance_,
      ResNotifyChangeToOldRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChangeToOldRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChangeToOldRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyChangeToOldRoom));
  ReqSitDown_descriptor_ = file->message_type(39);
  static const int ReqSitDown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSitDown, pos_),
  };
  ReqSitDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqSitDown_descriptor_,
      ReqSitDown::default_instance_,
      ReqSitDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSitDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSitDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqSitDown));
  ResSitDown_descriptor_ = file->message_type(40);
  static const int ResSitDown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSitDown, result_),
  };
  ResSitDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResSitDown_descriptor_,
      ResSitDown::default_instance_,
      ResSitDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSitDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResSitDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResSitDown));
  ResNotifySomeOneSitDown_descriptor_ = file->message_type(41);
  static const int ResNotifySomeOneSitDown_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneSitDown, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneSitDown, controller_),
  };
  ResNotifySomeOneSitDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneSitDown_descriptor_,
      ResNotifySomeOneSitDown::default_instance_,
      ResNotifySomeOneSitDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneSitDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneSitDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneSitDown));
  ReqStandUp_descriptor_ = file->message_type(42);
  static const int ReqStandUp_offsets_[1] = {
  };
  ReqStandUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqStandUp_descriptor_,
      ReqStandUp::default_instance_,
      ReqStandUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqStandUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqStandUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqStandUp));
  ResStandUp_descriptor_ = file->message_type(43);
  static const int ResStandUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResStandUp, result_),
  };
  ResStandUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResStandUp_descriptor_,
      ResStandUp::default_instance_,
      ResStandUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResStandUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResStandUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResStandUp));
  ResNotifySomeOneStandUp_descriptor_ = file->message_type(44);
  static const int ResNotifySomeOneStandUp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneStandUp, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneStandUp, controller_),
  };
  ResNotifySomeOneStandUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneStandUp_descriptor_,
      ResNotifySomeOneStandUp::default_instance_,
      ResNotifySomeOneStandUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneStandUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneStandUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneStandUp));
  ResNotifySomeOneEnterCharge_descriptor_ = file->message_type(45);
  static const int ResNotifySomeOneEnterCharge_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneEnterCharge, uniqueids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneEnterCharge, rechargetime_),
  };
  ResNotifySomeOneEnterCharge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifySomeOneEnterCharge_descriptor_,
      ResNotifySomeOneEnterCharge::default_instance_,
      ResNotifySomeOneEnterCharge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneEnterCharge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifySomeOneEnterCharge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifySomeOneEnterCharge));
  ResNotifyAccountsChange_descriptor_ = file->message_type(46);
  static const int ResNotifyAccountsChange_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyAccountsChange, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyAccountsChange, counts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyAccountsChange, extendstr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyAccountsChange, charge_),
  };
  ResNotifyAccountsChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyAccountsChange_descriptor_,
      ResNotifyAccountsChange::default_instance_,
      ResNotifyAccountsChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyAccountsChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyAccountsChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyAccountsChange));
  ResNotifyChargeOver_descriptor_ = file->message_type(47);
  static const int ResNotifyChargeOver_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChargeOver, uniqueid_),
  };
  ResNotifyChargeOver_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyChargeOver_descriptor_,
      ResNotifyChargeOver::default_instance_,
      ResNotifyChargeOver_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChargeOver, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyChargeOver, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyChargeOver));
  ReqWatherList_descriptor_ = file->message_type(48);
  static const int ReqWatherList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqWatherList, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqWatherList, paixu_),
  };
  ReqWatherList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqWatherList_descriptor_,
      ReqWatherList::default_instance_,
      ReqWatherList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqWatherList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqWatherList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqWatherList));
  ResWatherList_descriptor_ = file->message_type(49);
  static const int ResWatherList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResWatherList, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResWatherList, sdkcontrollers_),
  };
  ResWatherList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResWatherList_descriptor_,
      ResWatherList::default_instance_,
      ResWatherList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResWatherList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResWatherList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResWatherList));
  ReqOnceMore_descriptor_ = file->message_type(50);
  static const int ReqOnceMore_offsets_[1] = {
  };
  ReqOnceMore_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqOnceMore_descriptor_,
      ReqOnceMore::default_instance_,
      ReqOnceMore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOnceMore, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOnceMore, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqOnceMore));
  ResOnceMore_descriptor_ = file->message_type(51);
  static const int ResOnceMore_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOnceMore, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOnceMore, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOnceMore, roomid_),
  };
  ResOnceMore_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResOnceMore_descriptor_,
      ResOnceMore::default_instance_,
      ResOnceMore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOnceMore, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOnceMore, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResOnceMore));
  ResNotifyOnceMore_descriptor_ = file->message_type(52);
  static const int ResNotifyOnceMore_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyOnceMore, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyOnceMore, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyOnceMore, roomid_),
  };
  ResNotifyOnceMore_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResNotifyOnceMore_descriptor_,
      ResNotifyOnceMore::default_instance_,
      ResNotifyOnceMore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyOnceMore, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResNotifyOnceMore, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResNotifyOnceMore));
  reqLogicServerTime_descriptor_ = file->message_type(53);
  static const int reqLogicServerTime_offsets_[1] = {
  };
  reqLogicServerTime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      reqLogicServerTime_descriptor_,
      reqLogicServerTime::default_instance_,
      reqLogicServerTime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(reqLogicServerTime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(reqLogicServerTime, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(reqLogicServerTime));
  resLogicServerTime_descriptor_ = file->message_type(54);
  static const int resLogicServerTime_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(resLogicServerTime, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(resLogicServerTime, servertime_),
  };
  resLogicServerTime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      resLogicServerTime_descriptor_,
      resLogicServerTime::default_instance_,
      resLogicServerTime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(resLogicServerTime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(resLogicServerTime, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(resLogicServerTime));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgLogic_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SdkController_descriptor_, &SdkController::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PosBrife_descriptor_, &PosBrife::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RoomInfo_descriptor_, &RoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DissolutionStatus_descriptor_, &DissolutionStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DissolutionStatusDetail_descriptor_, &DissolutionStatusDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqLogicLogin_descriptor_, &ReqLogicLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResLogicLogin_descriptor_, &ResLogicLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqCreateGameRoom_descriptor_, &ReqCreateGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResCreateGameRoom_descriptor_, &ResCreateGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyGameRoomCreate_descriptor_, &ResNotifyGameRoomCreate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqJoinGameRoom_descriptor_, &ReqJoinGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResJoinGameRoom_descriptor_, &ResJoinGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneJoinGameRoom_descriptor_, &ResNotifySomeOneJoinGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqExitGameRoom_descriptor_, &ReqExitGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResExitGameRoom_descriptor_, &ResExitGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneExitGameRoom_descriptor_, &ResNotifySomeOneExitGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqGameReady_descriptor_, &ReqGameReady::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResGameReady_descriptor_, &ResGameReady::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqDissolutionGameRoom_descriptor_, &ReqDissolutionGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResDissolutionGameRoom_descriptor_, &ResDissolutionGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneReqDissolutionGameRoom_descriptor_, &ResNotifySomeOneReqDissolutionGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqAgreeDissolutionGameRoom_descriptor_, &ReqAgreeDissolutionGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResAgreeDissolutionGameRoom_descriptor_, &ResAgreeDissolutionGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneAggreeDissolutionGameRoom_descriptor_, &ResNotifySomeOneAggreeDissolutionGameRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyGameRoomDissolution_descriptor_, &ResNotifyGameRoomDissolution::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyGameOver_descriptor_, &ResNotifyGameOver::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqGetRoomInfo_descriptor_, &ReqGetRoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResGetRoomInfo_descriptor_, &ResGetRoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneGameReady_descriptor_, &ResNotifySomeOneGameReady::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqChangeOnlineStatus_descriptor_, &ReqChangeOnlineStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResChangeOnlineStatus_descriptor_, &ResChangeOnlineStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneChangeOnlineStatus_descriptor_, &ResNotifySomeOneChangeOnlineStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyBigCalculatePanel_descriptor_, &ResNotifyBigCalculatePanel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqCorrectTimer_descriptor_, &ReqCorrectTimer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResCorrectTimer_descriptor_, &ResCorrectTimer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqQuickChangeRoom_descriptor_, &ReqQuickChangeRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResQuickChangeRoom_descriptor_, &ResQuickChangeRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneChangeRobot_descriptor_, &ResNotifySomeOneChangeRobot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyChangeToOldRoom_descriptor_, &ResNotifyChangeToOldRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqSitDown_descriptor_, &ReqSitDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResSitDown_descriptor_, &ResSitDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneSitDown_descriptor_, &ResNotifySomeOneSitDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqStandUp_descriptor_, &ReqStandUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResStandUp_descriptor_, &ResStandUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneStandUp_descriptor_, &ResNotifySomeOneStandUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifySomeOneEnterCharge_descriptor_, &ResNotifySomeOneEnterCharge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyAccountsChange_descriptor_, &ResNotifyAccountsChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyChargeOver_descriptor_, &ResNotifyChargeOver::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqWatherList_descriptor_, &ReqWatherList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResWatherList_descriptor_, &ResWatherList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqOnceMore_descriptor_, &ReqOnceMore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResOnceMore_descriptor_, &ResOnceMore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResNotifyOnceMore_descriptor_, &ResNotifyOnceMore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    reqLogicServerTime_descriptor_, &reqLogicServerTime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    resLogicServerTime_descriptor_, &resLogicServerTime::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgLogic_2eproto() {
  delete SdkController::default_instance_;
  delete SdkController_reflection_;
  delete PosBrife::default_instance_;
  delete PosBrife_reflection_;
  delete RoomInfo::default_instance_;
  delete RoomInfo_reflection_;
  delete DissolutionStatus::default_instance_;
  delete DissolutionStatus_reflection_;
  delete DissolutionStatusDetail::default_instance_;
  delete DissolutionStatusDetail_reflection_;
  delete ReqLogicLogin::default_instance_;
  delete ReqLogicLogin_reflection_;
  delete ResLogicLogin::default_instance_;
  delete ResLogicLogin_reflection_;
  delete ReqCreateGameRoom::default_instance_;
  delete ReqCreateGameRoom_reflection_;
  delete ResCreateGameRoom::default_instance_;
  delete ResCreateGameRoom_reflection_;
  delete ResNotifyGameRoomCreate::default_instance_;
  delete ResNotifyGameRoomCreate_reflection_;
  delete ReqJoinGameRoom::default_instance_;
  delete ReqJoinGameRoom_reflection_;
  delete ResJoinGameRoom::default_instance_;
  delete ResJoinGameRoom_reflection_;
  delete ResNotifySomeOneJoinGameRoom::default_instance_;
  delete ResNotifySomeOneJoinGameRoom_reflection_;
  delete ReqExitGameRoom::default_instance_;
  delete ReqExitGameRoom_reflection_;
  delete ResExitGameRoom::default_instance_;
  delete ResExitGameRoom_reflection_;
  delete ResNotifySomeOneExitGameRoom::default_instance_;
  delete ResNotifySomeOneExitGameRoom_reflection_;
  delete ReqGameReady::default_instance_;
  delete ReqGameReady_reflection_;
  delete ResGameReady::default_instance_;
  delete ResGameReady_reflection_;
  delete ReqDissolutionGameRoom::default_instance_;
  delete ReqDissolutionGameRoom_reflection_;
  delete ResDissolutionGameRoom::default_instance_;
  delete ResDissolutionGameRoom_reflection_;
  delete ResNotifySomeOneReqDissolutionGameRoom::default_instance_;
  delete ResNotifySomeOneReqDissolutionGameRoom_reflection_;
  delete ReqAgreeDissolutionGameRoom::default_instance_;
  delete ReqAgreeDissolutionGameRoom_reflection_;
  delete ResAgreeDissolutionGameRoom::default_instance_;
  delete ResAgreeDissolutionGameRoom_reflection_;
  delete ResNotifySomeOneAggreeDissolutionGameRoom::default_instance_;
  delete ResNotifySomeOneAggreeDissolutionGameRoom_reflection_;
  delete ResNotifyGameRoomDissolution::default_instance_;
  delete ResNotifyGameRoomDissolution_reflection_;
  delete ResNotifyGameOver::default_instance_;
  delete ResNotifyGameOver_reflection_;
  delete ReqGetRoomInfo::default_instance_;
  delete ReqGetRoomInfo_reflection_;
  delete ResGetRoomInfo::default_instance_;
  delete ResGetRoomInfo_reflection_;
  delete ResNotifySomeOneGameReady::default_instance_;
  delete ResNotifySomeOneGameReady_reflection_;
  delete ReqChangeOnlineStatus::default_instance_;
  delete ReqChangeOnlineStatus_reflection_;
  delete ResChangeOnlineStatus::default_instance_;
  delete ResChangeOnlineStatus_reflection_;
  delete ResNotifySomeOneChangeOnlineStatus::default_instance_;
  delete ResNotifySomeOneChangeOnlineStatus_reflection_;
  delete ResNotifyBigCalculatePanel::default_instance_;
  delete ResNotifyBigCalculatePanel_reflection_;
  delete ReqCorrectTimer::default_instance_;
  delete ReqCorrectTimer_reflection_;
  delete ResCorrectTimer::default_instance_;
  delete ResCorrectTimer_reflection_;
  delete ReqQuickChangeRoom::default_instance_;
  delete ReqQuickChangeRoom_reflection_;
  delete ResQuickChangeRoom::default_instance_;
  delete ResQuickChangeRoom_reflection_;
  delete ResNotifySomeOneChangeRobot::default_instance_;
  delete ResNotifySomeOneChangeRobot_reflection_;
  delete ResNotifyChangeToOldRoom::default_instance_;
  delete ResNotifyChangeToOldRoom_reflection_;
  delete ReqSitDown::default_instance_;
  delete ReqSitDown_reflection_;
  delete ResSitDown::default_instance_;
  delete ResSitDown_reflection_;
  delete ResNotifySomeOneSitDown::default_instance_;
  delete ResNotifySomeOneSitDown_reflection_;
  delete ReqStandUp::default_instance_;
  delete ReqStandUp_reflection_;
  delete ResStandUp::default_instance_;
  delete ResStandUp_reflection_;
  delete ResNotifySomeOneStandUp::default_instance_;
  delete ResNotifySomeOneStandUp_reflection_;
  delete ResNotifySomeOneEnterCharge::default_instance_;
  delete ResNotifySomeOneEnterCharge_reflection_;
  delete ResNotifyAccountsChange::default_instance_;
  delete ResNotifyAccountsChange_reflection_;
  delete ResNotifyChargeOver::default_instance_;
  delete ResNotifyChargeOver_reflection_;
  delete ReqWatherList::default_instance_;
  delete ReqWatherList_reflection_;
  delete ResWatherList::default_instance_;
  delete ResWatherList_reflection_;
  delete ReqOnceMore::default_instance_;
  delete ReqOnceMore_reflection_;
  delete ResOnceMore::default_instance_;
  delete ResOnceMore_reflection_;
  delete ResNotifyOnceMore::default_instance_;
  delete ResNotifyOnceMore_reflection_;
  delete reqLogicServerTime::default_instance_;
  delete reqLogicServerTime_reflection_;
  delete resLogicServerTime::default_instance_;
  delete resLogicServerTime_reflection_;
}

void protobuf_AddDesc_MsgLogic_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ProtoNet::protobuf_AddDesc_MsgCode_2eproto();
  ::ProtoNet::protobuf_AddDesc_MsgGate_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016MsgLogic.proto\022\010ProtoNet\032\rMsgCode.prot"
    "o\032\rMsgGate.proto\"\320\001\n\rSdkController\022\020\n\010un"
    "iqueId\030\001 \002(\t\022\020\n\010nickName\030\002 \002(\t\022\017\n\007headIm"
    "g\030\003 \002(\t\022\n\n\002ip\030\004 \002(\t\022\020\n\010headType\030\005 \002(\005\022\016\n"
    "\006health\030\006 \002(\001\022\013\n\003sex\030\007 \002(\005\022\020\n\010selfRank\030\010"
    " \001(\005\022\r\n\005robot\030\t \001(\005\022\017\n\007watcher\030\n \001(\005\022\n\n\002"
    "lv\030\013 \001(\005\022\021\n\textendStr\030\014 \001(\t\"R\n\010PosBrife\022"
    "\013\n\003pos\030\001 \002(\005\022\032\n\022controllerUniqueId\030\002 \001(\t"
    "\022\016\n\006online\030\003 \001(\005\022\r\n\005ready\030\004 \001(\005\"\335\004\n\010Room"
    "Info\022\016\n\006roomId\030\001 \002(\t\022\020\n\010roomName\030\002 \002(\t\022\026"
    "\n\016roomerUniqueId\030\003 \002(\t\022,\n\013controllers\030\004 "
    "\003(\0132\027.ProtoNet.SdkController\022\021\n\textendSt"
    "r\030\005 \001(\t\022\022\n\nroomStatus\030\006 \002(\005\022%\n\tposBrifes"
    "\030\007 \003(\0132\022.ProtoNet.PosBrife\022\026\n\016leftMatchC"
    "ount\030\010 \002(\005\022\022\n\ntotalCount\030\t \002(\005\0226\n\021dissol"
    "utionStatus\030\n \002(\0132\033.ProtoNet.Dissolution"
    "Status\022\024\n\014maxPlayerNum\030\013 \002(\005\022\030\n\020currentP"
    "layerNum\030\014 \002(\005\022\022\n\nreadyTimer\030\r \001(\003\022\016\n\006ga"
    "meId\030\016 \001(\005\022\020\n\010roomType\030\017 \001(\005\022\021\n\ttimesTyp"
    "e\030\020 \001(\005\022\r\n\005yazhu\030\021 \001(\001\022\017\n\007watting\030\022 \001(\005\022"
    "\014\n\004from\030\023 \001(\005\022\n\n\002to\030\024 \001(\005\022\024\n\014serverExten"
    "d\030\025 \001(\t\022\023\n\013fangkaJinbi\030\026 \001(\005\022\022\n\nchargeLi"
    "st\030\027 \001(\t\022\013\n\003ext\030\030 \001(\t\022\016\n\006clubId\030\031 \001(\t\022\020\n"
    "\010tableNum\030\032 \001(\t\022\026\n\016clubGameTypeId\030\033 \001(\t\""
    "\212\001\n\021DissolutionStatus\022\031\n\021dissolutionStat"
    "us\030\001 \002(\005\022\023\n\013reqUniqueId\030\002 \001(\t\0222\n\007details"
    "\030\003 \003(\0132!.ProtoNet.DissolutionStatusDetai"
    "l\022\021\n\tleftTimer\030\004 \001(\003\"a\n\027DissolutionStatu"
    "sDetail\022\016\n\006roomId\030\001 \002(\t\022\032\n\022controllerUni"
    "queId\030\002 \002(\t\022\r\n\005agree\030\003 \002(\005\022\013\n\003pos\030\004 \002(\005\""
    "0\n\rReqLogicLogin\022\017\n\007account\030\001 \002(\t\022\016\n\006tic"
    "ket\030\002 \002(\t\"9\n\rResLogicLogin\022(\n\006result\030\001 \002"
    "(\0132\030.ProtoNet.ResponseResult\"\237\002\n\021ReqCrea"
    "teGameRoom\022\020\n\010roomType\030\001 \002(\005\022\r\n\005times\030\002 "
    "\002(\005\022\023\n\013paramString\030\003 \001(\t\022\021\n\ttimesType\030\004 "
    "\002(\005\022\017\n\007payType\030\005 \001(\005\022\023\n\013halfWayJoin\030\006 \001("
    "\005\022\024\n\014maxPlayerNum\030\007 \001(\005\022\r\n\005yazhu\030\010 \001(\001\022\023"
    "\n\013fangkaJinbi\030\t \001(\005\022\017\n\007minNeed\030\n \001(\001\022\022\n\n"
    "pipeiParam\030\013 \001(\t\022\016\n\006clubId\030\014 \001(\t\022\024\n\014club"
    "TableNum\030\r \001(\t\022\026\n\016clubGameTypeId\030\016 \001(\t\"Q"
    "\n\021ResCreateGameRoom\022(\n\006result\030\001 \002(\0132\030.Pr"
    "otoNet.ResponseResult\022\022\n\nreadyTimer\030\002 \001("
    "\003\")\n\027ResNotifyGameRoomCreate\022\016\n\006roomId\030\001"
    " \002(\t\"!\n\017ReqJoinGameRoom\022\016\n\006roomId\030\001 \002(\t\""
    "u\n\017ResJoinGameRoom\022(\n\006result\030\001 \002(\0132\030.Pro"
    "toNet.ResponseResult\022$\n\010roomInfo\030\002 \001(\0132\022"
    ".ProtoNet.RoomInfo\022\022\n\nreadyTimer\030\003 \001(\003\"\201"
    "\001\n\034ResNotifySomeOneJoinGameRoom\022\016\n\006roomI"
    "d\030\001 \002(\t\022+\n\ncontroller\030\002 \002(\0132\027.ProtoNet.S"
    "dkController\022$\n\010posBrife\030\003 \002(\0132\022.ProtoNe"
    "t.PosBrife\"\021\n\017ReqExitGameRoom\";\n\017ResExit"
    "GameRoom\022(\n\006result\030\001 \002(\0132\030.ProtoNet.Resp"
    "onseResult\"[\n\034ResNotifySomeOneExitGameRo"
    "om\022\016\n\006roomId\030\001 \002(\t\022+\n\ncontroller\030\002 \002(\0132\027"
    ".ProtoNet.SdkController\"\035\n\014ReqGameReady\022"
    "\r\n\005ready\030\001 \002(\010\"8\n\014ResGameReady\022(\n\006result"
    "\030\001 \002(\0132\030.ProtoNet.ResponseResult\"\030\n\026ReqD"
    "issolutionGameRoom\"B\n\026ResDissolutionGame"
    "Room\022(\n\006result\030\001 \002(\0132\030.ProtoNet.Response"
    "Result\"\232\001\n&ResNotifySomeOneReqDissolutio"
    "nGameRoom\022\016\n\006roomId\030\001 \002(\t\022+\n\ncontroller\030"
    "\002 \002(\0132\027.ProtoNet.SdkController\022$\n\010posBri"
    "fe\030\003 \002(\0132\022.ProtoNet.PosBrife\022\r\n\005timer\030\004 "
    "\002(\003\",\n\033ReqAgreeDissolutionGameRoom\022\r\n\005ag"
    "ree\030\001 \002(\010\"G\n\033ResAgreeDissolutionGameRoom"
    "\022(\n\006result\030\001 \002(\0132\030.ProtoNet.ResponseResu"
    "lt\"\235\001\n)ResNotifySomeOneAggreeDissolution"
    "GameRoom\022\016\n\006roomId\030\001 \002(\t\022+\n\ncontroller\030\002"
    " \002(\0132\027.ProtoNet.SdkController\022$\n\010posBrif"
    "e\030\003 \002(\0132\022.ProtoNet.PosBrife\022\r\n\005agree\030\004 \002"
    "(\010\"\036\n\034ResNotifyGameRoomDissolution\"\023\n\021Re"
    "sNotifyGameOver\"\020\n\016ReqGetRoomInfo\"`\n\016Res"
    "GetRoomInfo\022(\n\006result\030\001 \002(\0132\030.ProtoNet.R"
    "esponseResult\022$\n\010roomInfo\030\002 \001(\0132\022.ProtoN"
    "et.RoomInfo\"\215\001\n\031ResNotifySomeOneGameRead"
    "y\022\016\n\006roomId\030\001 \002(\t\022+\n\ncontroller\030\002 \002(\0132\027."
    "ProtoNet.SdkController\022$\n\010posBrife\030\003 \002(\013"
    "2\022.ProtoNet.PosBrife\022\r\n\005ready\030\004 \002(\010\"\'\n\025R"
    "eqChangeOnlineStatus\022\016\n\006online\030\001 \002(\010\"A\n\025"
    "ResChangeOnlineStatus\022(\n\006result\030\001 \002(\0132\030."
    "ProtoNet.ResponseResult\"\227\001\n\"ResNotifySom"
    "eOneChangeOnlineStatus\022\016\n\006roomId\030\001 \002(\t\022+"
    "\n\ncontroller\030\002 \002(\0132\027.ProtoNet.SdkControl"
    "ler\022$\n\010posBrife\030\003 \002(\0132\022.ProtoNet.PosBrif"
    "e\022\016\n\006online\030\004 \002(\010\"\034\n\032ResNotifyBigCalcula"
    "tePanel\"\021\n\017ReqCorrectTimer\"Y\n\017ResCorrect"
    "Timer\022(\n\006result\030\001 \002(\0132\030.ProtoNet.Respons"
    "eResult\022\034\n\024leftDissolutionTimer\030\002 \001(\003\"(\n"
    "\022ReqQuickChangeRoom\022\022\n\npipeiParam\030\001 \001(\t\""
    "\236\002\n\022ResQuickChangeRoom\022(\n\006result\030\001 \002(\0132\030"
    ".ProtoNet.ResponseResult\022\017\n\007operate\030\002 \001("
    "\005\022\020\n\010roomType\030\003 \001(\005\0229\n\016bestServerInfo\030\004 "
    "\001(\0132!.ProtoNet.ServerInfoIpsSafeDetail\022\016"
    "\n\006roomId\030\005 \001(\t\0227\n\014logicDetails\030\006 \003(\0132!.P"
    "rotoNet.ServerInfoIpsSafeDetail\022\016\n\006gameI"
    "d\030\007 \001(\005\022\021\n\ttimesType\030\010 \001(\005\022\024\n\014changeServ"
    "er\030\t \002(\005\"M\n\033ResNotifySomeOneChangeRobot\022"
    "\017\n\007isRobot\030\001 \002(\005\022\020\n\010uniqueId\030\002 \002(\t\022\013\n\003po"
    "s\030\003 \002(\005\"\232\001\n\030ResNotifyChangeToOldRoom\0229\n\016"
    "bestServerInfo\030\001 \001(\0132!.ProtoNet.ServerIn"
    "foIpsSafeDetail\022\016\n\006roomId\030\002 \001(\t\022\016\n\006gameI"
    "d\030\003 \001(\005\022\021\n\ttimesType\030\004 \001(\005\022\020\n\010roomType\030\005"
    " \001(\005\"\031\n\nReqSitDown\022\013\n\003pos\030\001 \001(\005\"6\n\nResSi"
    "tDown\022(\n\006result\030\001 \002(\0132\030.ProtoNet.Respons"
    "eResult\"S\n\027ResNotifySomeOneSitDown\022\013\n\003po"
    "s\030\001 \002(\005\022+\n\ncontroller\030\002 \002(\0132\027.ProtoNet.S"
    "dkController\"\014\n\nReqStandUp\"6\n\nResStandUp"
    "\022(\n\006result\030\001 \002(\0132\030.ProtoNet.ResponseResu"
    "lt\"S\n\027ResNotifySomeOneStandUp\022\013\n\003pos\030\001 \002"
    "(\005\022+\n\ncontroller\030\002 \002(\0132\027.ProtoNet.SdkCon"
    "troller\"F\n\033ResNotifySomeOneEnterCharge\022\021"
    "\n\tuniqueIds\030\001 \002(\t\022\024\n\014rechargeTime\030\002 \002(\005\""
    "w\n\027ResNotifyAccountsChange\022\020\n\010uniqueId\030\001"
    " \002(\t\022\'\n\006counts\030\002 \003(\0132\027.ProtoNet.PlayerAc"
    "count\022\021\n\textendStr\030\003 \001(\t\022\016\n\006charge\030\004 \001(\005"
    "\"\'\n\023ResNotifyChargeOver\022\020\n\010uniqueId\030\001 \002("
    "\t\".\n\rReqWatherList\022\016\n\006length\030\001 \002(\005\022\r\n\005pa"
    "ixu\030\002 \002(\005\"j\n\rResWatherList\022(\n\006result\030\001 \002"
    "(\0132\030.ProtoNet.ResponseResult\022/\n\016sdkContr"
    "ollers\030\002 \003(\0132\027.ProtoNet.SdkController\"\r\n"
    "\013ReqOnceMore\"U\n\013ResOnceMore\022(\n\006result\030\001 "
    "\002(\0132\030.ProtoNet.ResponseResult\022\014\n\004type\030\002 "
    "\002(\005\022\016\n\006roomId\030\003 \002(\t\"[\n\021ResNotifyOnceMore"
    "\022(\n\006result\030\001 \002(\0132\030.ProtoNet.ResponseResu"
    "lt\022\014\n\004type\030\002 \002(\005\022\016\n\006roomId\030\003 \002(\t\"\024\n\022reqL"
    "ogicServerTime\"R\n\022resLogicServerTime\022(\n\006"
    "result\030\001 \002(\0132\030.ProtoNet.ResponseResult\022\022"
    "\n\nserverTime\030\002 \001(\003B\031\n\027com.version.protob"
    "uf.pb", 5125);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgLogic.proto", &protobuf_RegisterTypes);
  SdkController::default_instance_ = new SdkController();
  PosBrife::default_instance_ = new PosBrife();
  RoomInfo::default_instance_ = new RoomInfo();
  DissolutionStatus::default_instance_ = new DissolutionStatus();
  DissolutionStatusDetail::default_instance_ = new DissolutionStatusDetail();
  ReqLogicLogin::default_instance_ = new ReqLogicLogin();
  ResLogicLogin::default_instance_ = new ResLogicLogin();
  ReqCreateGameRoom::default_instance_ = new ReqCreateGameRoom();
  ResCreateGameRoom::default_instance_ = new ResCreateGameRoom();
  ResNotifyGameRoomCreate::default_instance_ = new ResNotifyGameRoomCreate();
  ReqJoinGameRoom::default_instance_ = new ReqJoinGameRoom();
  ResJoinGameRoom::default_instance_ = new ResJoinGameRoom();
  ResNotifySomeOneJoinGameRoom::default_instance_ = new ResNotifySomeOneJoinGameRoom();
  ReqExitGameRoom::default_instance_ = new ReqExitGameRoom();
  ResExitGameRoom::default_instance_ = new ResExitGameRoom();
  ResNotifySomeOneExitGameRoom::default_instance_ = new ResNotifySomeOneExitGameRoom();
  ReqGameReady::default_instance_ = new ReqGameReady();
  ResGameReady::default_instance_ = new ResGameReady();
  ReqDissolutionGameRoom::default_instance_ = new ReqDissolutionGameRoom();
  ResDissolutionGameRoom::default_instance_ = new ResDissolutionGameRoom();
  ResNotifySomeOneReqDissolutionGameRoom::default_instance_ = new ResNotifySomeOneReqDissolutionGameRoom();
  ReqAgreeDissolutionGameRoom::default_instance_ = new ReqAgreeDissolutionGameRoom();
  ResAgreeDissolutionGameRoom::default_instance_ = new ResAgreeDissolutionGameRoom();
  ResNotifySomeOneAggreeDissolutionGameRoom::default_instance_ = new ResNotifySomeOneAggreeDissolutionGameRoom();
  ResNotifyGameRoomDissolution::default_instance_ = new ResNotifyGameRoomDissolution();
  ResNotifyGameOver::default_instance_ = new ResNotifyGameOver();
  ReqGetRoomInfo::default_instance_ = new ReqGetRoomInfo();
  ResGetRoomInfo::default_instance_ = new ResGetRoomInfo();
  ResNotifySomeOneGameReady::default_instance_ = new ResNotifySomeOneGameReady();
  ReqChangeOnlineStatus::default_instance_ = new ReqChangeOnlineStatus();
  ResChangeOnlineStatus::default_instance_ = new ResChangeOnlineStatus();
  ResNotifySomeOneChangeOnlineStatus::default_instance_ = new ResNotifySomeOneChangeOnlineStatus();
  ResNotifyBigCalculatePanel::default_instance_ = new ResNotifyBigCalculatePanel();
  ReqCorrectTimer::default_instance_ = new ReqCorrectTimer();
  ResCorrectTimer::default_instance_ = new ResCorrectTimer();
  ReqQuickChangeRoom::default_instance_ = new ReqQuickChangeRoom();
  ResQuickChangeRoom::default_instance_ = new ResQuickChangeRoom();
  ResNotifySomeOneChangeRobot::default_instance_ = new ResNotifySomeOneChangeRobot();
  ResNotifyChangeToOldRoom::default_instance_ = new ResNotifyChangeToOldRoom();
  ReqSitDown::default_instance_ = new ReqSitDown();
  ResSitDown::default_instance_ = new ResSitDown();
  ResNotifySomeOneSitDown::default_instance_ = new ResNotifySomeOneSitDown();
  ReqStandUp::default_instance_ = new ReqStandUp();
  ResStandUp::default_instance_ = new ResStandUp();
  ResNotifySomeOneStandUp::default_instance_ = new ResNotifySomeOneStandUp();
  ResNotifySomeOneEnterCharge::default_instance_ = new ResNotifySomeOneEnterCharge();
  ResNotifyAccountsChange::default_instance_ = new ResNotifyAccountsChange();
  ResNotifyChargeOver::default_instance_ = new ResNotifyChargeOver();
  ReqWatherList::default_instance_ = new ReqWatherList();
  ResWatherList::default_instance_ = new ResWatherList();
  ReqOnceMore::default_instance_ = new ReqOnceMore();
  ResOnceMore::default_instance_ = new ResOnceMore();
  ResNotifyOnceMore::default_instance_ = new ResNotifyOnceMore();
  reqLogicServerTime::default_instance_ = new reqLogicServerTime();
  resLogicServerTime::default_instance_ = new resLogicServerTime();
  SdkController::default_instance_->InitAsDefaultInstance();
  PosBrife::default_instance_->InitAsDefaultInstance();
  RoomInfo::default_instance_->InitAsDefaultInstance();
  DissolutionStatus::default_instance_->InitAsDefaultInstance();
  DissolutionStatusDetail::default_instance_->InitAsDefaultInstance();
  ReqLogicLogin::default_instance_->InitAsDefaultInstance();
  ResLogicLogin::default_instance_->InitAsDefaultInstance();
  ReqCreateGameRoom::default_instance_->InitAsDefaultInstance();
  ResCreateGameRoom::default_instance_->InitAsDefaultInstance();
  ResNotifyGameRoomCreate::default_instance_->InitAsDefaultInstance();
  ReqJoinGameRoom::default_instance_->InitAsDefaultInstance();
  ResJoinGameRoom::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneJoinGameRoom::default_instance_->InitAsDefaultInstance();
  ReqExitGameRoom::default_instance_->InitAsDefaultInstance();
  ResExitGameRoom::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneExitGameRoom::default_instance_->InitAsDefaultInstance();
  ReqGameReady::default_instance_->InitAsDefaultInstance();
  ResGameReady::default_instance_->InitAsDefaultInstance();
  ReqDissolutionGameRoom::default_instance_->InitAsDefaultInstance();
  ResDissolutionGameRoom::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneReqDissolutionGameRoom::default_instance_->InitAsDefaultInstance();
  ReqAgreeDissolutionGameRoom::default_instance_->InitAsDefaultInstance();
  ResAgreeDissolutionGameRoom::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneAggreeDissolutionGameRoom::default_instance_->InitAsDefaultInstance();
  ResNotifyGameRoomDissolution::default_instance_->InitAsDefaultInstance();
  ResNotifyGameOver::default_instance_->InitAsDefaultInstance();
  ReqGetRoomInfo::default_instance_->InitAsDefaultInstance();
  ResGetRoomInfo::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneGameReady::default_instance_->InitAsDefaultInstance();
  ReqChangeOnlineStatus::default_instance_->InitAsDefaultInstance();
  ResChangeOnlineStatus::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneChangeOnlineStatus::default_instance_->InitAsDefaultInstance();
  ResNotifyBigCalculatePanel::default_instance_->InitAsDefaultInstance();
  ReqCorrectTimer::default_instance_->InitAsDefaultInstance();
  ResCorrectTimer::default_instance_->InitAsDefaultInstance();
  ReqQuickChangeRoom::default_instance_->InitAsDefaultInstance();
  ResQuickChangeRoom::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneChangeRobot::default_instance_->InitAsDefaultInstance();
  ResNotifyChangeToOldRoom::default_instance_->InitAsDefaultInstance();
  ReqSitDown::default_instance_->InitAsDefaultInstance();
  ResSitDown::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneSitDown::default_instance_->InitAsDefaultInstance();
  ReqStandUp::default_instance_->InitAsDefaultInstance();
  ResStandUp::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneStandUp::default_instance_->InitAsDefaultInstance();
  ResNotifySomeOneEnterCharge::default_instance_->InitAsDefaultInstance();
  ResNotifyAccountsChange::default_instance_->InitAsDefaultInstance();
  ResNotifyChargeOver::default_instance_->InitAsDefaultInstance();
  ReqWatherList::default_instance_->InitAsDefaultInstance();
  ResWatherList::default_instance_->InitAsDefaultInstance();
  ReqOnceMore::default_instance_->InitAsDefaultInstance();
  ResOnceMore::default_instance_->InitAsDefaultInstance();
  ResNotifyOnceMore::default_instance_->InitAsDefaultInstance();
  reqLogicServerTime::default_instance_->InitAsDefaultInstance();
  resLogicServerTime::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgLogic_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgLogic_2eproto {
  StaticDescriptorInitializer_MsgLogic_2eproto() {
    protobuf_AddDesc_MsgLogic_2eproto();
  }
} static_descriptor_initializer_MsgLogic_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SdkController::kUniqueIdFieldNumber;
const int SdkController::kNickNameFieldNumber;
const int SdkController::kHeadImgFieldNumber;
const int SdkController::kIpFieldNumber;
const int SdkController::kHeadTypeFieldNumber;
const int SdkController::kHealthFieldNumber;
const int SdkController::kSexFieldNumber;
const int SdkController::kSelfRankFieldNumber;
const int SdkController::kRobotFieldNumber;
const int SdkController::kWatcherFieldNumber;
const int SdkController::kLvFieldNumber;
const int SdkController::kExtendStrFieldNumber;
#endif  // !_MSC_VER

SdkController::SdkController()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SdkController::InitAsDefaultInstance() {
}

SdkController::SdkController(const SdkController& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SdkController::SharedCtor() {
  _cached_size_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  headimg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  headtype_ = 0;
  health_ = 0;
  sex_ = 0;
  selfrank_ = 0;
  robot_ = 0;
  watcher_ = 0;
  lv_ = 0;
  extendstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SdkController::~SdkController() {
  SharedDtor();
}

void SdkController::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (headimg_ != &::google::protobuf::internal::kEmptyString) {
    delete headimg_;
  }
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (extendstr_ != &::google::protobuf::internal::kEmptyString) {
    delete extendstr_;
  }
  if (this != default_instance_) {
  }
}

void SdkController::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SdkController::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SdkController_descriptor_;
}

const SdkController& SdkController::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

SdkController* SdkController::default_instance_ = NULL;

SdkController* SdkController::New() const {
  return new SdkController;
}

void SdkController::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    if (has_nickname()) {
      if (nickname_ != &::google::protobuf::internal::kEmptyString) {
        nickname_->clear();
      }
    }
    if (has_headimg()) {
      if (headimg_ != &::google::protobuf::internal::kEmptyString) {
        headimg_->clear();
      }
    }
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::kEmptyString) {
        ip_->clear();
      }
    }
    headtype_ = 0;
    health_ = 0;
    sex_ = 0;
    selfrank_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    robot_ = 0;
    watcher_ = 0;
    lv_ = 0;
    if (has_extendstr()) {
      if (extendstr_ != &::google::protobuf::internal::kEmptyString) {
        extendstr_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SdkController::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_nickName;
        break;
      }

      // required string nickName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nickName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_headImg;
        break;
      }

      // required string headImg = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_headImg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headimg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->headimg().data(), this->headimg().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ip;
        break;
      }

      // required string ip = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_headType;
        break;
      }

      // required int32 headType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_headType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &headtype_)));
          set_has_headtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(49)) goto parse_health;
        break;
      }

      // required double health = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_health:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &health_)));
          set_has_health();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_sex;
        break;
      }

      // required int32 sex = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_selfRank;
        break;
      }

      // optional int32 selfRank = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_selfRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &selfrank_)));
          set_has_selfrank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_robot;
        break;
      }

      // optional int32 robot = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_robot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robot_)));
          set_has_robot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_watcher;
        break;
      }

      // optional int32 watcher = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_watcher:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &watcher_)));
          set_has_watcher();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_lv;
        break;
      }

      // optional int32 lv = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_extendStr;
        break;
      }

      // optional string extendStr = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extendStr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extendstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->extendstr().data(), this->extendstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SdkController::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uniqueid(), output);
  }

  // required string nickName = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->nickname(), output);
  }

  // required string headImg = 3;
  if (has_headimg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->headimg().data(), this->headimg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->headimg(), output);
  }

  // required string ip = 4;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->ip(), output);
  }

  // required int32 headType = 5;
  if (has_headtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->headtype(), output);
  }

  // required double health = 6;
  if (has_health()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->health(), output);
  }

  // required int32 sex = 7;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->sex(), output);
  }

  // optional int32 selfRank = 8;
  if (has_selfrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->selfrank(), output);
  }

  // optional int32 robot = 9;
  if (has_robot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->robot(), output);
  }

  // optional int32 watcher = 10;
  if (has_watcher()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->watcher(), output);
  }

  // optional int32 lv = 11;
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->lv(), output);
  }

  // optional string extendStr = 12;
  if (has_extendstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extendstr().data(), this->extendstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->extendstr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SdkController::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueid(), target);
  }

  // required string nickName = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // required string headImg = 3;
  if (has_headimg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->headimg().data(), this->headimg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->headimg(), target);
  }

  // required string ip = 4;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ip(), target);
  }

  // required int32 headType = 5;
  if (has_headtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->headtype(), target);
  }

  // required double health = 6;
  if (has_health()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->health(), target);
  }

  // required int32 sex = 7;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->sex(), target);
  }

  // optional int32 selfRank = 8;
  if (has_selfrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->selfrank(), target);
  }

  // optional int32 robot = 9;
  if (has_robot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->robot(), target);
  }

  // optional int32 watcher = 10;
  if (has_watcher()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->watcher(), target);
  }

  // optional int32 lv = 11;
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->lv(), target);
  }

  // optional string extendStr = 12;
  if (has_extendstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extendstr().data(), this->extendstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->extendstr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SdkController::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueId = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required string nickName = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // required string headImg = 3;
    if (has_headimg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->headimg());
    }

    // required string ip = 4;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // required int32 headType = 5;
    if (has_headtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->headtype());
    }

    // required double health = 6;
    if (has_health()) {
      total_size += 1 + 8;
    }

    // required int32 sex = 7;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 selfRank = 8;
    if (has_selfrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->selfrank());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 robot = 9;
    if (has_robot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->robot());
    }

    // optional int32 watcher = 10;
    if (has_watcher()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->watcher());
    }

    // optional int32 lv = 11;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lv());
    }

    // optional string extendStr = 12;
    if (has_extendstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extendstr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SdkController::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SdkController* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SdkController*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SdkController::MergeFrom(const SdkController& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_nickname()) {
      set_nickname(from.nickname());
    }
    if (from.has_headimg()) {
      set_headimg(from.headimg());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_headtype()) {
      set_headtype(from.headtype());
    }
    if (from.has_health()) {
      set_health(from.health());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_selfrank()) {
      set_selfrank(from.selfrank());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_robot()) {
      set_robot(from.robot());
    }
    if (from.has_watcher()) {
      set_watcher(from.watcher());
    }
    if (from.has_lv()) {
      set_lv(from.lv());
    }
    if (from.has_extendstr()) {
      set_extendstr(from.extendstr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SdkController::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SdkController::CopyFrom(const SdkController& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SdkController::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void SdkController::Swap(SdkController* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(nickname_, other->nickname_);
    std::swap(headimg_, other->headimg_);
    std::swap(ip_, other->ip_);
    std::swap(headtype_, other->headtype_);
    std::swap(health_, other->health_);
    std::swap(sex_, other->sex_);
    std::swap(selfrank_, other->selfrank_);
    std::swap(robot_, other->robot_);
    std::swap(watcher_, other->watcher_);
    std::swap(lv_, other->lv_);
    std::swap(extendstr_, other->extendstr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SdkController::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SdkController_descriptor_;
  metadata.reflection = SdkController_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PosBrife::kPosFieldNumber;
const int PosBrife::kControllerUniqueIdFieldNumber;
const int PosBrife::kOnlineFieldNumber;
const int PosBrife::kReadyFieldNumber;
#endif  // !_MSC_VER

PosBrife::PosBrife()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PosBrife::InitAsDefaultInstance() {
}

PosBrife::PosBrife(const PosBrife& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PosBrife::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  controlleruniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  online_ = 0;
  ready_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PosBrife::~PosBrife() {
  SharedDtor();
}

void PosBrife::SharedDtor() {
  if (controlleruniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete controlleruniqueid_;
  }
  if (this != default_instance_) {
  }
}

void PosBrife::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PosBrife::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PosBrife_descriptor_;
}

const PosBrife& PosBrife::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

PosBrife* PosBrife::default_instance_ = NULL;

PosBrife* PosBrife::New() const {
  return new PosBrife;
}

void PosBrife::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
    if (has_controlleruniqueid()) {
      if (controlleruniqueid_ != &::google::protobuf::internal::kEmptyString) {
        controlleruniqueid_->clear();
      }
    }
    online_ = 0;
    ready_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PosBrife::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controllerUniqueId;
        break;
      }

      // optional string controllerUniqueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controllerUniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_controlleruniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->controlleruniqueid().data(), this->controlleruniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_online;
        break;
      }

      // optional int32 online = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_)));
          set_has_online();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ready;
        break;
      }

      // optional int32 ready = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ready:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ready_)));
          set_has_ready();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PosBrife::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // optional string controllerUniqueId = 2;
  if (has_controlleruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->controlleruniqueid().data(), this->controlleruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->controlleruniqueid(), output);
  }

  // optional int32 online = 3;
  if (has_online()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->online(), output);
  }

  // optional int32 ready = 4;
  if (has_ready()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ready(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PosBrife::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // optional string controllerUniqueId = 2;
  if (has_controlleruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->controlleruniqueid().data(), this->controlleruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->controlleruniqueid(), target);
  }

  // optional int32 online = 3;
  if (has_online()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->online(), target);
  }

  // optional int32 ready = 4;
  if (has_ready()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ready(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PosBrife::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional string controllerUniqueId = 2;
    if (has_controlleruniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->controlleruniqueid());
    }

    // optional int32 online = 3;
    if (has_online()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online());
    }

    // optional int32 ready = 4;
    if (has_ready()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ready());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PosBrife::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PosBrife* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PosBrife*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PosBrife::MergeFrom(const PosBrife& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_controlleruniqueid()) {
      set_controlleruniqueid(from.controlleruniqueid());
    }
    if (from.has_online()) {
      set_online(from.online());
    }
    if (from.has_ready()) {
      set_ready(from.ready());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PosBrife::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PosBrife::CopyFrom(const PosBrife& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PosBrife::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PosBrife::Swap(PosBrife* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(controlleruniqueid_, other->controlleruniqueid_);
    std::swap(online_, other->online_);
    std::swap(ready_, other->ready_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PosBrife::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PosBrife_descriptor_;
  metadata.reflection = PosBrife_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RoomInfo::kRoomIdFieldNumber;
const int RoomInfo::kRoomNameFieldNumber;
const int RoomInfo::kRoomerUniqueIdFieldNumber;
const int RoomInfo::kControllersFieldNumber;
const int RoomInfo::kExtendStrFieldNumber;
const int RoomInfo::kRoomStatusFieldNumber;
const int RoomInfo::kPosBrifesFieldNumber;
const int RoomInfo::kLeftMatchCountFieldNumber;
const int RoomInfo::kTotalCountFieldNumber;
const int RoomInfo::kDissolutionStatusFieldNumber;
const int RoomInfo::kMaxPlayerNumFieldNumber;
const int RoomInfo::kCurrentPlayerNumFieldNumber;
const int RoomInfo::kReadyTimerFieldNumber;
const int RoomInfo::kGameIdFieldNumber;
const int RoomInfo::kRoomTypeFieldNumber;
const int RoomInfo::kTimesTypeFieldNumber;
const int RoomInfo::kYazhuFieldNumber;
const int RoomInfo::kWattingFieldNumber;
const int RoomInfo::kFromFieldNumber;
const int RoomInfo::kToFieldNumber;
const int RoomInfo::kServerExtendFieldNumber;
const int RoomInfo::kFangkaJinbiFieldNumber;
const int RoomInfo::kChargeListFieldNumber;
const int RoomInfo::kExtFieldNumber;
const int RoomInfo::kClubIdFieldNumber;
const int RoomInfo::kTableNumFieldNumber;
const int RoomInfo::kClubGameTypeIdFieldNumber;
#endif  // !_MSC_VER

RoomInfo::RoomInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RoomInfo::InitAsDefaultInstance() {
  dissolutionstatus_ = const_cast< ::ProtoNet::DissolutionStatus*>(&::ProtoNet::DissolutionStatus::default_instance());
}

RoomInfo::RoomInfo(const RoomInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RoomInfo::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  roomname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  roomeruniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  extendstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  roomstatus_ = 0;
  leftmatchcount_ = 0;
  totalcount_ = 0;
  dissolutionstatus_ = NULL;
  maxplayernum_ = 0;
  currentplayernum_ = 0;
  readytimer_ = GOOGLE_LONGLONG(0);
  gameid_ = 0;
  roomtype_ = 0;
  timestype_ = 0;
  yazhu_ = 0;
  watting_ = 0;
  from_ = 0;
  to_ = 0;
  serverextend_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fangkajinbi_ = 0;
  chargelist_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clubid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  tablenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clubgametypeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomInfo::~RoomInfo() {
  SharedDtor();
}

void RoomInfo::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (roomname_ != &::google::protobuf::internal::kEmptyString) {
    delete roomname_;
  }
  if (roomeruniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomeruniqueid_;
  }
  if (extendstr_ != &::google::protobuf::internal::kEmptyString) {
    delete extendstr_;
  }
  if (serverextend_ != &::google::protobuf::internal::kEmptyString) {
    delete serverextend_;
  }
  if (chargelist_ != &::google::protobuf::internal::kEmptyString) {
    delete chargelist_;
  }
  if (ext_ != &::google::protobuf::internal::kEmptyString) {
    delete ext_;
  }
  if (clubid_ != &::google::protobuf::internal::kEmptyString) {
    delete clubid_;
  }
  if (tablenum_ != &::google::protobuf::internal::kEmptyString) {
    delete tablenum_;
  }
  if (clubgametypeid_ != &::google::protobuf::internal::kEmptyString) {
    delete clubgametypeid_;
  }
  if (this != default_instance_) {
    delete dissolutionstatus_;
  }
}

void RoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomInfo_descriptor_;
}

const RoomInfo& RoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

RoomInfo* RoomInfo::default_instance_ = NULL;

RoomInfo* RoomInfo::New() const {
  return new RoomInfo;
}

void RoomInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    if (has_roomname()) {
      if (roomname_ != &::google::protobuf::internal::kEmptyString) {
        roomname_->clear();
      }
    }
    if (has_roomeruniqueid()) {
      if (roomeruniqueid_ != &::google::protobuf::internal::kEmptyString) {
        roomeruniqueid_->clear();
      }
    }
    if (has_extendstr()) {
      if (extendstr_ != &::google::protobuf::internal::kEmptyString) {
        extendstr_->clear();
      }
    }
    roomstatus_ = 0;
    leftmatchcount_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    totalcount_ = 0;
    if (has_dissolutionstatus()) {
      if (dissolutionstatus_ != NULL) dissolutionstatus_->::ProtoNet::DissolutionStatus::Clear();
    }
    maxplayernum_ = 0;
    currentplayernum_ = 0;
    readytimer_ = GOOGLE_LONGLONG(0);
    gameid_ = 0;
    roomtype_ = 0;
    timestype_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    yazhu_ = 0;
    watting_ = 0;
    from_ = 0;
    to_ = 0;
    if (has_serverextend()) {
      if (serverextend_ != &::google::protobuf::internal::kEmptyString) {
        serverextend_->clear();
      }
    }
    fangkajinbi_ = 0;
    if (has_chargelist()) {
      if (chargelist_ != &::google::protobuf::internal::kEmptyString) {
        chargelist_->clear();
      }
    }
    if (has_ext()) {
      if (ext_ != &::google::protobuf::internal::kEmptyString) {
        ext_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_clubid()) {
      if (clubid_ != &::google::protobuf::internal::kEmptyString) {
        clubid_->clear();
      }
    }
    if (has_tablenum()) {
      if (tablenum_ != &::google::protobuf::internal::kEmptyString) {
        tablenum_->clear();
      }
    }
    if (has_clubgametypeid()) {
      if (clubgametypeid_ != &::google::protobuf::internal::kEmptyString) {
        clubgametypeid_->clear();
      }
    }
  }
  controllers_.Clear();
  posbrifes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_roomName;
        break;
      }

      // required string roomName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_roomerUniqueId;
        break;
      }

      // required string roomerUniqueId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomerUniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomeruniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomeruniqueid().data(), this->roomeruniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_controllers;
        break;
      }

      // repeated .ProtoNet.SdkController controllers = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controllers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_controllers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_controllers;
        if (input->ExpectTag(42)) goto parse_extendStr;
        break;
      }

      // optional string extendStr = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extendStr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extendstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->extendstr().data(), this->extendstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_roomStatus;
        break;
      }

      // required int32 roomStatus = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roomStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomstatus_)));
          set_has_roomstatus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_posBrifes;
        break;
      }

      // repeated .ProtoNet.PosBrife posBrifes = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_posBrifes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_posbrifes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_posBrifes;
        if (input->ExpectTag(64)) goto parse_leftMatchCount;
        break;
      }

      // required int32 leftMatchCount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leftMatchCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leftmatchcount_)));
          set_has_leftmatchcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_totalCount;
        break;
      }

      // required int32 totalCount = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_totalCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalcount_)));
          set_has_totalcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_dissolutionStatus;
        break;
      }

      // required .ProtoNet.DissolutionStatus dissolutionStatus = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dissolutionStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dissolutionstatus()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_maxPlayerNum;
        break;
      }

      // required int32 maxPlayerNum = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxPlayerNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxplayernum_)));
          set_has_maxplayernum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_currentPlayerNum;
        break;
      }

      // required int32 currentPlayerNum = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentPlayerNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currentplayernum_)));
          set_has_currentplayernum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_readyTimer;
        break;
      }

      // optional int64 readyTimer = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_readyTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &readytimer_)));
          set_has_readytimer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_gameId;
        break;
      }

      // optional int32 gameId = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gameId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gameid_)));
          set_has_gameid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_roomType;
        break;
      }

      // optional int32 roomType = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roomType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomtype_)));
          set_has_roomtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_timesType;
        break;
      }

      // optional int32 timesType = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timesType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestype_)));
          set_has_timestype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(137)) goto parse_yazhu;
        break;
      }

      // optional double yazhu = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_yazhu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yazhu_)));
          set_has_yazhu();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_watting;
        break;
      }

      // optional int32 watting = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_watting:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &watting_)));
          set_has_watting();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_from;
        break;
      }

      // optional int32 from = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_from:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_)));
          set_has_from();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_to;
        break;
      }

      // optional int32 to = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_to:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &to_)));
          set_has_to();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_serverExtend;
        break;
      }

      // optional string serverExtend = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serverExtend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverextend()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->serverextend().data(), this->serverextend().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_fangkaJinbi;
        break;
      }

      // optional int32 fangkaJinbi = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fangkaJinbi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fangkajinbi_)));
          set_has_fangkajinbi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_chargeList;
        break;
      }

      // optional string chargeList = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_chargeList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chargelist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->chargelist().data(), this->chargelist().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_ext;
        break;
      }

      // optional string ext = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ext:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ext().data(), this->ext().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_clubId;
        break;
      }

      // optional string clubId = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clubId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clubid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clubid().data(), this->clubid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_tableNum;
        break;
      }

      // optional string tableNum = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tableNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tablenum().data(), this->tablenum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_clubGameTypeId;
        break;
      }

      // optional string clubGameTypeId = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clubGameTypeId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clubgametypeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clubgametypeid().data(), this->clubgametypeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required string roomName = 2;
  if (has_roomname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->roomname(), output);
  }

  // required string roomerUniqueId = 3;
  if (has_roomeruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomeruniqueid().data(), this->roomeruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->roomeruniqueid(), output);
  }

  // repeated .ProtoNet.SdkController controllers = 4;
  for (int i = 0; i < this->controllers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->controllers(i), output);
  }

  // optional string extendStr = 5;
  if (has_extendstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extendstr().data(), this->extendstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->extendstr(), output);
  }

  // required int32 roomStatus = 6;
  if (has_roomstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->roomstatus(), output);
  }

  // repeated .ProtoNet.PosBrife posBrifes = 7;
  for (int i = 0; i < this->posbrifes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->posbrifes(i), output);
  }

  // required int32 leftMatchCount = 8;
  if (has_leftmatchcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->leftmatchcount(), output);
  }

  // required int32 totalCount = 9;
  if (has_totalcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->totalcount(), output);
  }

  // required .ProtoNet.DissolutionStatus dissolutionStatus = 10;
  if (has_dissolutionstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->dissolutionstatus(), output);
  }

  // required int32 maxPlayerNum = 11;
  if (has_maxplayernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->maxplayernum(), output);
  }

  // required int32 currentPlayerNum = 12;
  if (has_currentplayernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->currentplayernum(), output);
  }

  // optional int64 readyTimer = 13;
  if (has_readytimer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->readytimer(), output);
  }

  // optional int32 gameId = 14;
  if (has_gameid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->gameid(), output);
  }

  // optional int32 roomType = 15;
  if (has_roomtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->roomtype(), output);
  }

  // optional int32 timesType = 16;
  if (has_timestype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->timestype(), output);
  }

  // optional double yazhu = 17;
  if (has_yazhu()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->yazhu(), output);
  }

  // optional int32 watting = 18;
  if (has_watting()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->watting(), output);
  }

  // optional int32 from = 19;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->from(), output);
  }

  // optional int32 to = 20;
  if (has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->to(), output);
  }

  // optional string serverExtend = 21;
  if (has_serverextend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->serverextend().data(), this->serverextend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->serverextend(), output);
  }

  // optional int32 fangkaJinbi = 22;
  if (has_fangkajinbi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->fangkajinbi(), output);
  }

  // optional string chargeList = 23;
  if (has_chargelist()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->chargelist().data(), this->chargelist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->chargelist(), output);
  }

  // optional string ext = 24;
  if (has_ext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ext().data(), this->ext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->ext(), output);
  }

  // optional string clubId = 25;
  if (has_clubid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubid().data(), this->clubid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->clubid(), output);
  }

  // optional string tableNum = 26;
  if (has_tablenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tablenum().data(), this->tablenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->tablenum(), output);
  }

  // optional string clubGameTypeId = 27;
  if (has_clubgametypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubgametypeid().data(), this->clubgametypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->clubgametypeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RoomInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required string roomName = 2;
  if (has_roomname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomname(), target);
  }

  // required string roomerUniqueId = 3;
  if (has_roomeruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomeruniqueid().data(), this->roomeruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roomeruniqueid(), target);
  }

  // repeated .ProtoNet.SdkController controllers = 4;
  for (int i = 0; i < this->controllers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->controllers(i), target);
  }

  // optional string extendStr = 5;
  if (has_extendstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extendstr().data(), this->extendstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extendstr(), target);
  }

  // required int32 roomStatus = 6;
  if (has_roomstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->roomstatus(), target);
  }

  // repeated .ProtoNet.PosBrife posBrifes = 7;
  for (int i = 0; i < this->posbrifes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->posbrifes(i), target);
  }

  // required int32 leftMatchCount = 8;
  if (has_leftmatchcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->leftmatchcount(), target);
  }

  // required int32 totalCount = 9;
  if (has_totalcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->totalcount(), target);
  }

  // required .ProtoNet.DissolutionStatus dissolutionStatus = 10;
  if (has_dissolutionstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->dissolutionstatus(), target);
  }

  // required int32 maxPlayerNum = 11;
  if (has_maxplayernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->maxplayernum(), target);
  }

  // required int32 currentPlayerNum = 12;
  if (has_currentplayernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->currentplayernum(), target);
  }

  // optional int64 readyTimer = 13;
  if (has_readytimer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->readytimer(), target);
  }

  // optional int32 gameId = 14;
  if (has_gameid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->gameid(), target);
  }

  // optional int32 roomType = 15;
  if (has_roomtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->roomtype(), target);
  }

  // optional int32 timesType = 16;
  if (has_timestype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->timestype(), target);
  }

  // optional double yazhu = 17;
  if (has_yazhu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->yazhu(), target);
  }

  // optional int32 watting = 18;
  if (has_watting()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->watting(), target);
  }

  // optional int32 from = 19;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->from(), target);
  }

  // optional int32 to = 20;
  if (has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->to(), target);
  }

  // optional string serverExtend = 21;
  if (has_serverextend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->serverextend().data(), this->serverextend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->serverextend(), target);
  }

  // optional int32 fangkaJinbi = 22;
  if (has_fangkajinbi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->fangkajinbi(), target);
  }

  // optional string chargeList = 23;
  if (has_chargelist()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->chargelist().data(), this->chargelist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->chargelist(), target);
  }

  // optional string ext = 24;
  if (has_ext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ext().data(), this->ext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->ext(), target);
  }

  // optional string clubId = 25;
  if (has_clubid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubid().data(), this->clubid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->clubid(), target);
  }

  // optional string tableNum = 26;
  if (has_tablenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tablenum().data(), this->tablenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->tablenum(), target);
  }

  // optional string clubGameTypeId = 27;
  if (has_clubgametypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubgametypeid().data(), this->clubgametypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->clubgametypeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RoomInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required string roomName = 2;
    if (has_roomname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomname());
    }

    // required string roomerUniqueId = 3;
    if (has_roomeruniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomeruniqueid());
    }

    // optional string extendStr = 5;
    if (has_extendstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extendstr());
    }

    // required int32 roomStatus = 6;
    if (has_roomstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomstatus());
    }

    // required int32 leftMatchCount = 8;
    if (has_leftmatchcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leftmatchcount());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 totalCount = 9;
    if (has_totalcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalcount());
    }

    // required .ProtoNet.DissolutionStatus dissolutionStatus = 10;
    if (has_dissolutionstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dissolutionstatus());
    }

    // required int32 maxPlayerNum = 11;
    if (has_maxplayernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxplayernum());
    }

    // required int32 currentPlayerNum = 12;
    if (has_currentplayernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currentplayernum());
    }

    // optional int64 readyTimer = 13;
    if (has_readytimer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->readytimer());
    }

    // optional int32 gameId = 14;
    if (has_gameid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gameid());
    }

    // optional int32 roomType = 15;
    if (has_roomtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomtype());
    }

    // optional int32 timesType = 16;
    if (has_timestype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestype());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional double yazhu = 17;
    if (has_yazhu()) {
      total_size += 2 + 8;
    }

    // optional int32 watting = 18;
    if (has_watting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->watting());
    }

    // optional int32 from = 19;
    if (has_from()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->from());
    }

    // optional int32 to = 20;
    if (has_to()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->to());
    }

    // optional string serverExtend = 21;
    if (has_serverextend()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serverextend());
    }

    // optional int32 fangkaJinbi = 22;
    if (has_fangkajinbi()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fangkajinbi());
    }

    // optional string chargeList = 23;
    if (has_chargelist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chargelist());
    }

    // optional string ext = 24;
    if (has_ext()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ext());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string clubId = 25;
    if (has_clubid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clubid());
    }

    // optional string tableNum = 26;
    if (has_tablenum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tablenum());
    }

    // optional string clubGameTypeId = 27;
    if (has_clubgametypeid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clubgametypeid());
    }

  }
  // repeated .ProtoNet.SdkController controllers = 4;
  total_size += 1 * this->controllers_size();
  for (int i = 0; i < this->controllers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->controllers(i));
  }

  // repeated .ProtoNet.PosBrife posBrifes = 7;
  total_size += 1 * this->posbrifes_size();
  for (int i = 0; i < this->posbrifes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->posbrifes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RoomInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RoomInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RoomInfo::MergeFrom(const RoomInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  controllers_.MergeFrom(from.controllers_);
  posbrifes_.MergeFrom(from.posbrifes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_roomname()) {
      set_roomname(from.roomname());
    }
    if (from.has_roomeruniqueid()) {
      set_roomeruniqueid(from.roomeruniqueid());
    }
    if (from.has_extendstr()) {
      set_extendstr(from.extendstr());
    }
    if (from.has_roomstatus()) {
      set_roomstatus(from.roomstatus());
    }
    if (from.has_leftmatchcount()) {
      set_leftmatchcount(from.leftmatchcount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_totalcount()) {
      set_totalcount(from.totalcount());
    }
    if (from.has_dissolutionstatus()) {
      mutable_dissolutionstatus()->::ProtoNet::DissolutionStatus::MergeFrom(from.dissolutionstatus());
    }
    if (from.has_maxplayernum()) {
      set_maxplayernum(from.maxplayernum());
    }
    if (from.has_currentplayernum()) {
      set_currentplayernum(from.currentplayernum());
    }
    if (from.has_readytimer()) {
      set_readytimer(from.readytimer());
    }
    if (from.has_gameid()) {
      set_gameid(from.gameid());
    }
    if (from.has_roomtype()) {
      set_roomtype(from.roomtype());
    }
    if (from.has_timestype()) {
      set_timestype(from.timestype());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_yazhu()) {
      set_yazhu(from.yazhu());
    }
    if (from.has_watting()) {
      set_watting(from.watting());
    }
    if (from.has_from()) {
      set_from(from.from());
    }
    if (from.has_to()) {
      set_to(from.to());
    }
    if (from.has_serverextend()) {
      set_serverextend(from.serverextend());
    }
    if (from.has_fangkajinbi()) {
      set_fangkajinbi(from.fangkajinbi());
    }
    if (from.has_chargelist()) {
      set_chargelist(from.chargelist());
    }
    if (from.has_ext()) {
      set_ext(from.ext());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_clubid()) {
      set_clubid(from.clubid());
    }
    if (from.has_tablenum()) {
      set_tablenum(from.tablenum());
    }
    if (from.has_clubgametypeid()) {
      set_clubgametypeid(from.clubgametypeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfo::CopyFrom(const RoomInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fa7) != 0x00000fa7) return false;

  for (int i = 0; i < controllers_size(); i++) {
    if (!this->controllers(i).IsInitialized()) return false;
  }
  for (int i = 0; i < posbrifes_size(); i++) {
    if (!this->posbrifes(i).IsInitialized()) return false;
  }
  if (has_dissolutionstatus()) {
    if (!this->dissolutionstatus().IsInitialized()) return false;
  }
  return true;
}

void RoomInfo::Swap(RoomInfo* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(roomname_, other->roomname_);
    std::swap(roomeruniqueid_, other->roomeruniqueid_);
    controllers_.Swap(&other->controllers_);
    std::swap(extendstr_, other->extendstr_);
    std::swap(roomstatus_, other->roomstatus_);
    posbrifes_.Swap(&other->posbrifes_);
    std::swap(leftmatchcount_, other->leftmatchcount_);
    std::swap(totalcount_, other->totalcount_);
    std::swap(dissolutionstatus_, other->dissolutionstatus_);
    std::swap(maxplayernum_, other->maxplayernum_);
    std::swap(currentplayernum_, other->currentplayernum_);
    std::swap(readytimer_, other->readytimer_);
    std::swap(gameid_, other->gameid_);
    std::swap(roomtype_, other->roomtype_);
    std::swap(timestype_, other->timestype_);
    std::swap(yazhu_, other->yazhu_);
    std::swap(watting_, other->watting_);
    std::swap(from_, other->from_);
    std::swap(to_, other->to_);
    std::swap(serverextend_, other->serverextend_);
    std::swap(fangkajinbi_, other->fangkajinbi_);
    std::swap(chargelist_, other->chargelist_);
    std::swap(ext_, other->ext_);
    std::swap(clubid_, other->clubid_);
    std::swap(tablenum_, other->tablenum_);
    std::swap(clubgametypeid_, other->clubgametypeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomInfo_descriptor_;
  metadata.reflection = RoomInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DissolutionStatus::kDissolutionStatusFieldNumber;
const int DissolutionStatus::kReqUniqueIdFieldNumber;
const int DissolutionStatus::kDetailsFieldNumber;
const int DissolutionStatus::kLeftTimerFieldNumber;
#endif  // !_MSC_VER

DissolutionStatus::DissolutionStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DissolutionStatus::InitAsDefaultInstance() {
}

DissolutionStatus::DissolutionStatus(const DissolutionStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DissolutionStatus::SharedCtor() {
  _cached_size_ = 0;
  dissolutionstatus_ = 0;
  requniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lefttimer_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DissolutionStatus::~DissolutionStatus() {
  SharedDtor();
}

void DissolutionStatus::SharedDtor() {
  if (requniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete requniqueid_;
  }
  if (this != default_instance_) {
  }
}

void DissolutionStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DissolutionStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DissolutionStatus_descriptor_;
}

const DissolutionStatus& DissolutionStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

DissolutionStatus* DissolutionStatus::default_instance_ = NULL;

DissolutionStatus* DissolutionStatus::New() const {
  return new DissolutionStatus;
}

void DissolutionStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    dissolutionstatus_ = 0;
    if (has_requniqueid()) {
      if (requniqueid_ != &::google::protobuf::internal::kEmptyString) {
        requniqueid_->clear();
      }
    }
    lefttimer_ = GOOGLE_LONGLONG(0);
  }
  details_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DissolutionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dissolutionStatus = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dissolutionstatus_)));
          set_has_dissolutionstatus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reqUniqueId;
        break;
      }

      // optional string reqUniqueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reqUniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->requniqueid().data(), this->requniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_details;
        break;
      }

      // repeated .ProtoNet.DissolutionStatusDetail details = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_details:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_details()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_details;
        if (input->ExpectTag(32)) goto parse_leftTimer;
        break;
      }

      // optional int64 leftTimer = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leftTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lefttimer_)));
          set_has_lefttimer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DissolutionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 dissolutionStatus = 1;
  if (has_dissolutionstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dissolutionstatus(), output);
  }

  // optional string reqUniqueId = 2;
  if (has_requniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->requniqueid().data(), this->requniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->requniqueid(), output);
  }

  // repeated .ProtoNet.DissolutionStatusDetail details = 3;
  for (int i = 0; i < this->details_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->details(i), output);
  }

  // optional int64 leftTimer = 4;
  if (has_lefttimer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->lefttimer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DissolutionStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 dissolutionStatus = 1;
  if (has_dissolutionstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dissolutionstatus(), target);
  }

  // optional string reqUniqueId = 2;
  if (has_requniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->requniqueid().data(), this->requniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->requniqueid(), target);
  }

  // repeated .ProtoNet.DissolutionStatusDetail details = 3;
  for (int i = 0; i < this->details_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->details(i), target);
  }

  // optional int64 leftTimer = 4;
  if (has_lefttimer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->lefttimer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DissolutionStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 dissolutionStatus = 1;
    if (has_dissolutionstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dissolutionstatus());
    }

    // optional string reqUniqueId = 2;
    if (has_requniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requniqueid());
    }

    // optional int64 leftTimer = 4;
    if (has_lefttimer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lefttimer());
    }

  }
  // repeated .ProtoNet.DissolutionStatusDetail details = 3;
  total_size += 1 * this->details_size();
  for (int i = 0; i < this->details_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->details(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DissolutionStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DissolutionStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DissolutionStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DissolutionStatus::MergeFrom(const DissolutionStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  details_.MergeFrom(from.details_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dissolutionstatus()) {
      set_dissolutionstatus(from.dissolutionstatus());
    }
    if (from.has_requniqueid()) {
      set_requniqueid(from.requniqueid());
    }
    if (from.has_lefttimer()) {
      set_lefttimer(from.lefttimer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DissolutionStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DissolutionStatus::CopyFrom(const DissolutionStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DissolutionStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < details_size(); i++) {
    if (!this->details(i).IsInitialized()) return false;
  }
  return true;
}

void DissolutionStatus::Swap(DissolutionStatus* other) {
  if (other != this) {
    std::swap(dissolutionstatus_, other->dissolutionstatus_);
    std::swap(requniqueid_, other->requniqueid_);
    details_.Swap(&other->details_);
    std::swap(lefttimer_, other->lefttimer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DissolutionStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DissolutionStatus_descriptor_;
  metadata.reflection = DissolutionStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DissolutionStatusDetail::kRoomIdFieldNumber;
const int DissolutionStatusDetail::kControllerUniqueIdFieldNumber;
const int DissolutionStatusDetail::kAgreeFieldNumber;
const int DissolutionStatusDetail::kPosFieldNumber;
#endif  // !_MSC_VER

DissolutionStatusDetail::DissolutionStatusDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DissolutionStatusDetail::InitAsDefaultInstance() {
}

DissolutionStatusDetail::DissolutionStatusDetail(const DissolutionStatusDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DissolutionStatusDetail::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  controlleruniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  agree_ = 0;
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DissolutionStatusDetail::~DissolutionStatusDetail() {
  SharedDtor();
}

void DissolutionStatusDetail::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (controlleruniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete controlleruniqueid_;
  }
  if (this != default_instance_) {
  }
}

void DissolutionStatusDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DissolutionStatusDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DissolutionStatusDetail_descriptor_;
}

const DissolutionStatusDetail& DissolutionStatusDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

DissolutionStatusDetail* DissolutionStatusDetail::default_instance_ = NULL;

DissolutionStatusDetail* DissolutionStatusDetail::New() const {
  return new DissolutionStatusDetail;
}

void DissolutionStatusDetail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    if (has_controlleruniqueid()) {
      if (controlleruniqueid_ != &::google::protobuf::internal::kEmptyString) {
        controlleruniqueid_->clear();
      }
    }
    agree_ = 0;
    pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DissolutionStatusDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controllerUniqueId;
        break;
      }

      // required string controllerUniqueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controllerUniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_controlleruniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->controlleruniqueid().data(), this->controlleruniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_agree;
        break;
      }

      // required int32 agree = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_agree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agree_)));
          set_has_agree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pos;
        break;
      }

      // required int32 pos = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DissolutionStatusDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required string controllerUniqueId = 2;
  if (has_controlleruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->controlleruniqueid().data(), this->controlleruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->controlleruniqueid(), output);
  }

  // required int32 agree = 3;
  if (has_agree()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->agree(), output);
  }

  // required int32 pos = 4;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DissolutionStatusDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required string controllerUniqueId = 2;
  if (has_controlleruniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->controlleruniqueid().data(), this->controlleruniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->controlleruniqueid(), target);
  }

  // required int32 agree = 3;
  if (has_agree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->agree(), target);
  }

  // required int32 pos = 4;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DissolutionStatusDetail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required string controllerUniqueId = 2;
    if (has_controlleruniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->controlleruniqueid());
    }

    // required int32 agree = 3;
    if (has_agree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agree());
    }

    // required int32 pos = 4;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DissolutionStatusDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DissolutionStatusDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DissolutionStatusDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DissolutionStatusDetail::MergeFrom(const DissolutionStatusDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_controlleruniqueid()) {
      set_controlleruniqueid(from.controlleruniqueid());
    }
    if (from.has_agree()) {
      set_agree(from.agree());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DissolutionStatusDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DissolutionStatusDetail::CopyFrom(const DissolutionStatusDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DissolutionStatusDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void DissolutionStatusDetail::Swap(DissolutionStatusDetail* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(controlleruniqueid_, other->controlleruniqueid_);
    std::swap(agree_, other->agree_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DissolutionStatusDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DissolutionStatusDetail_descriptor_;
  metadata.reflection = DissolutionStatusDetail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqLogicLogin::kAccountFieldNumber;
const int ReqLogicLogin::kTicketFieldNumber;
#endif  // !_MSC_VER

ReqLogicLogin::ReqLogicLogin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqLogicLogin::InitAsDefaultInstance() {
}

ReqLogicLogin::ReqLogicLogin(const ReqLogicLogin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqLogicLogin::SharedCtor() {
  _cached_size_ = 0;
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ticket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqLogicLogin::~ReqLogicLogin() {
  SharedDtor();
}

void ReqLogicLogin::SharedDtor() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (ticket_ != &::google::protobuf::internal::kEmptyString) {
    delete ticket_;
  }
  if (this != default_instance_) {
  }
}

void ReqLogicLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqLogicLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqLogicLogin_descriptor_;
}

const ReqLogicLogin& ReqLogicLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqLogicLogin* ReqLogicLogin::default_instance_ = NULL;

ReqLogicLogin* ReqLogicLogin::New() const {
  return new ReqLogicLogin;
}

void ReqLogicLogin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::kEmptyString) {
        account_->clear();
      }
    }
    if (has_ticket()) {
      if (ticket_ != &::google::protobuf::internal::kEmptyString) {
        ticket_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqLogicLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string account = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ticket;
        break;
      }

      // required string ticket = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ticket:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ticket().data(), this->ticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqLogicLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->account(), output);
  }

  // required string ticket = 2;
  if (has_ticket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->ticket(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqLogicLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // required string ticket = 2;
  if (has_ticket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticket(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqLogicLogin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // required string ticket = 2;
    if (has_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ticket());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqLogicLogin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqLogicLogin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqLogicLogin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqLogicLogin::MergeFrom(const ReqLogicLogin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_ticket()) {
      set_ticket(from.ticket());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqLogicLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqLogicLogin::CopyFrom(const ReqLogicLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqLogicLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqLogicLogin::Swap(ReqLogicLogin* other) {
  if (other != this) {
    std::swap(account_, other->account_);
    std::swap(ticket_, other->ticket_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqLogicLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqLogicLogin_descriptor_;
  metadata.reflection = ReqLogicLogin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResLogicLogin::kResultFieldNumber;
#endif  // !_MSC_VER

ResLogicLogin::ResLogicLogin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResLogicLogin::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResLogicLogin::ResLogicLogin(const ResLogicLogin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResLogicLogin::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResLogicLogin::~ResLogicLogin() {
  SharedDtor();
}

void ResLogicLogin::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResLogicLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResLogicLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResLogicLogin_descriptor_;
}

const ResLogicLogin& ResLogicLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResLogicLogin* ResLogicLogin::default_instance_ = NULL;

ResLogicLogin* ResLogicLogin::New() const {
  return new ResLogicLogin;
}

void ResLogicLogin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResLogicLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResLogicLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResLogicLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResLogicLogin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResLogicLogin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResLogicLogin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResLogicLogin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResLogicLogin::MergeFrom(const ResLogicLogin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResLogicLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResLogicLogin::CopyFrom(const ResLogicLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResLogicLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResLogicLogin::Swap(ResLogicLogin* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResLogicLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResLogicLogin_descriptor_;
  metadata.reflection = ResLogicLogin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqCreateGameRoom::kRoomTypeFieldNumber;
const int ReqCreateGameRoom::kTimesFieldNumber;
const int ReqCreateGameRoom::kParamStringFieldNumber;
const int ReqCreateGameRoom::kTimesTypeFieldNumber;
const int ReqCreateGameRoom::kPayTypeFieldNumber;
const int ReqCreateGameRoom::kHalfWayJoinFieldNumber;
const int ReqCreateGameRoom::kMaxPlayerNumFieldNumber;
const int ReqCreateGameRoom::kYazhuFieldNumber;
const int ReqCreateGameRoom::kFangkaJinbiFieldNumber;
const int ReqCreateGameRoom::kMinNeedFieldNumber;
const int ReqCreateGameRoom::kPipeiParamFieldNumber;
const int ReqCreateGameRoom::kClubIdFieldNumber;
const int ReqCreateGameRoom::kClubTableNumFieldNumber;
const int ReqCreateGameRoom::kClubGameTypeIdFieldNumber;
#endif  // !_MSC_VER

ReqCreateGameRoom::ReqCreateGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqCreateGameRoom::InitAsDefaultInstance() {
}

ReqCreateGameRoom::ReqCreateGameRoom(const ReqCreateGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqCreateGameRoom::SharedCtor() {
  _cached_size_ = 0;
  roomtype_ = 0;
  times_ = 0;
  paramstring_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  timestype_ = 0;
  paytype_ = 0;
  halfwayjoin_ = 0;
  maxplayernum_ = 0;
  yazhu_ = 0;
  fangkajinbi_ = 0;
  minneed_ = 0;
  pipeiparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clubid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clubtablenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clubgametypeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqCreateGameRoom::~ReqCreateGameRoom() {
  SharedDtor();
}

void ReqCreateGameRoom::SharedDtor() {
  if (paramstring_ != &::google::protobuf::internal::kEmptyString) {
    delete paramstring_;
  }
  if (pipeiparam_ != &::google::protobuf::internal::kEmptyString) {
    delete pipeiparam_;
  }
  if (clubid_ != &::google::protobuf::internal::kEmptyString) {
    delete clubid_;
  }
  if (clubtablenum_ != &::google::protobuf::internal::kEmptyString) {
    delete clubtablenum_;
  }
  if (clubgametypeid_ != &::google::protobuf::internal::kEmptyString) {
    delete clubgametypeid_;
  }
  if (this != default_instance_) {
  }
}

void ReqCreateGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqCreateGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqCreateGameRoom_descriptor_;
}

const ReqCreateGameRoom& ReqCreateGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqCreateGameRoom* ReqCreateGameRoom::default_instance_ = NULL;

ReqCreateGameRoom* ReqCreateGameRoom::New() const {
  return new ReqCreateGameRoom;
}

void ReqCreateGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roomtype_ = 0;
    times_ = 0;
    if (has_paramstring()) {
      if (paramstring_ != &::google::protobuf::internal::kEmptyString) {
        paramstring_->clear();
      }
    }
    timestype_ = 0;
    paytype_ = 0;
    halfwayjoin_ = 0;
    maxplayernum_ = 0;
    yazhu_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    fangkajinbi_ = 0;
    minneed_ = 0;
    if (has_pipeiparam()) {
      if (pipeiparam_ != &::google::protobuf::internal::kEmptyString) {
        pipeiparam_->clear();
      }
    }
    if (has_clubid()) {
      if (clubid_ != &::google::protobuf::internal::kEmptyString) {
        clubid_->clear();
      }
    }
    if (has_clubtablenum()) {
      if (clubtablenum_ != &::google::protobuf::internal::kEmptyString) {
        clubtablenum_->clear();
      }
    }
    if (has_clubgametypeid()) {
      if (clubgametypeid_ != &::google::protobuf::internal::kEmptyString) {
        clubgametypeid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqCreateGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roomType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomtype_)));
          set_has_roomtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_times;
        break;
      }

      // required int32 times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_paramString;
        break;
      }

      // optional string paramString = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_paramString:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paramstring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->paramstring().data(), this->paramstring().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_timesType;
        break;
      }

      // required int32 timesType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timesType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestype_)));
          set_has_timestype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_payType;
        break;
      }

      // optional int32 payType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_payType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paytype_)));
          set_has_paytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_halfWayJoin;
        break;
      }

      // optional int32 halfWayJoin = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_halfWayJoin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &halfwayjoin_)));
          set_has_halfwayjoin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_maxPlayerNum;
        break;
      }

      // optional int32 maxPlayerNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxPlayerNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxplayernum_)));
          set_has_maxplayernum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(65)) goto parse_yazhu;
        break;
      }

      // optional double yazhu = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_yazhu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yazhu_)));
          set_has_yazhu();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_fangkaJinbi;
        break;
      }

      // optional int32 fangkaJinbi = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fangkaJinbi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fangkajinbi_)));
          set_has_fangkajinbi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(81)) goto parse_minNeed;
        break;
      }

      // optional double minNeed = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_minNeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minneed_)));
          set_has_minneed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_pipeiParam;
        break;
      }

      // optional string pipeiParam = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pipeiParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pipeiparam()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pipeiparam().data(), this->pipeiparam().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_clubId;
        break;
      }

      // optional string clubId = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clubId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clubid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clubid().data(), this->clubid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_clubTableNum;
        break;
      }

      // optional string clubTableNum = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clubTableNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clubtablenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clubtablenum().data(), this->clubtablenum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_clubGameTypeId;
        break;
      }

      // optional string clubGameTypeId = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clubGameTypeId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clubgametypeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clubgametypeid().data(), this->clubgametypeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqCreateGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 roomType = 1;
  if (has_roomtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomtype(), output);
  }

  // required int32 times = 2;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->times(), output);
  }

  // optional string paramString = 3;
  if (has_paramstring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->paramstring().data(), this->paramstring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->paramstring(), output);
  }

  // required int32 timesType = 4;
  if (has_timestype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timestype(), output);
  }

  // optional int32 payType = 5;
  if (has_paytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->paytype(), output);
  }

  // optional int32 halfWayJoin = 6;
  if (has_halfwayjoin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->halfwayjoin(), output);
  }

  // optional int32 maxPlayerNum = 7;
  if (has_maxplayernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->maxplayernum(), output);
  }

  // optional double yazhu = 8;
  if (has_yazhu()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->yazhu(), output);
  }

  // optional int32 fangkaJinbi = 9;
  if (has_fangkajinbi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->fangkajinbi(), output);
  }

  // optional double minNeed = 10;
  if (has_minneed()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->minneed(), output);
  }

  // optional string pipeiParam = 11;
  if (has_pipeiparam()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pipeiparam().data(), this->pipeiparam().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->pipeiparam(), output);
  }

  // optional string clubId = 12;
  if (has_clubid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubid().data(), this->clubid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->clubid(), output);
  }

  // optional string clubTableNum = 13;
  if (has_clubtablenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubtablenum().data(), this->clubtablenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->clubtablenum(), output);
  }

  // optional string clubGameTypeId = 14;
  if (has_clubgametypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubgametypeid().data(), this->clubgametypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->clubgametypeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqCreateGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 roomType = 1;
  if (has_roomtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomtype(), target);
  }

  // required int32 times = 2;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->times(), target);
  }

  // optional string paramString = 3;
  if (has_paramstring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->paramstring().data(), this->paramstring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->paramstring(), target);
  }

  // required int32 timesType = 4;
  if (has_timestype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timestype(), target);
  }

  // optional int32 payType = 5;
  if (has_paytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->paytype(), target);
  }

  // optional int32 halfWayJoin = 6;
  if (has_halfwayjoin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->halfwayjoin(), target);
  }

  // optional int32 maxPlayerNum = 7;
  if (has_maxplayernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->maxplayernum(), target);
  }

  // optional double yazhu = 8;
  if (has_yazhu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->yazhu(), target);
  }

  // optional int32 fangkaJinbi = 9;
  if (has_fangkajinbi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->fangkajinbi(), target);
  }

  // optional double minNeed = 10;
  if (has_minneed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->minneed(), target);
  }

  // optional string pipeiParam = 11;
  if (has_pipeiparam()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pipeiparam().data(), this->pipeiparam().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->pipeiparam(), target);
  }

  // optional string clubId = 12;
  if (has_clubid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubid().data(), this->clubid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->clubid(), target);
  }

  // optional string clubTableNum = 13;
  if (has_clubtablenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubtablenum().data(), this->clubtablenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->clubtablenum(), target);
  }

  // optional string clubGameTypeId = 14;
  if (has_clubgametypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clubgametypeid().data(), this->clubgametypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->clubgametypeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqCreateGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 roomType = 1;
    if (has_roomtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomtype());
    }

    // required int32 times = 2;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }

    // optional string paramString = 3;
    if (has_paramstring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->paramstring());
    }

    // required int32 timesType = 4;
    if (has_timestype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestype());
    }

    // optional int32 payType = 5;
    if (has_paytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->paytype());
    }

    // optional int32 halfWayJoin = 6;
    if (has_halfwayjoin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->halfwayjoin());
    }

    // optional int32 maxPlayerNum = 7;
    if (has_maxplayernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxplayernum());
    }

    // optional double yazhu = 8;
    if (has_yazhu()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 fangkaJinbi = 9;
    if (has_fangkajinbi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fangkajinbi());
    }

    // optional double minNeed = 10;
    if (has_minneed()) {
      total_size += 1 + 8;
    }

    // optional string pipeiParam = 11;
    if (has_pipeiparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pipeiparam());
    }

    // optional string clubId = 12;
    if (has_clubid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clubid());
    }

    // optional string clubTableNum = 13;
    if (has_clubtablenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clubtablenum());
    }

    // optional string clubGameTypeId = 14;
    if (has_clubgametypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clubgametypeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqCreateGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqCreateGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqCreateGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqCreateGameRoom::MergeFrom(const ReqCreateGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomtype()) {
      set_roomtype(from.roomtype());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_paramstring()) {
      set_paramstring(from.paramstring());
    }
    if (from.has_timestype()) {
      set_timestype(from.timestype());
    }
    if (from.has_paytype()) {
      set_paytype(from.paytype());
    }
    if (from.has_halfwayjoin()) {
      set_halfwayjoin(from.halfwayjoin());
    }
    if (from.has_maxplayernum()) {
      set_maxplayernum(from.maxplayernum());
    }
    if (from.has_yazhu()) {
      set_yazhu(from.yazhu());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_fangkajinbi()) {
      set_fangkajinbi(from.fangkajinbi());
    }
    if (from.has_minneed()) {
      set_minneed(from.minneed());
    }
    if (from.has_pipeiparam()) {
      set_pipeiparam(from.pipeiparam());
    }
    if (from.has_clubid()) {
      set_clubid(from.clubid());
    }
    if (from.has_clubtablenum()) {
      set_clubtablenum(from.clubtablenum());
    }
    if (from.has_clubgametypeid()) {
      set_clubgametypeid(from.clubgametypeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqCreateGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCreateGameRoom::CopyFrom(const ReqCreateGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCreateGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;

  return true;
}

void ReqCreateGameRoom::Swap(ReqCreateGameRoom* other) {
  if (other != this) {
    std::swap(roomtype_, other->roomtype_);
    std::swap(times_, other->times_);
    std::swap(paramstring_, other->paramstring_);
    std::swap(timestype_, other->timestype_);
    std::swap(paytype_, other->paytype_);
    std::swap(halfwayjoin_, other->halfwayjoin_);
    std::swap(maxplayernum_, other->maxplayernum_);
    std::swap(yazhu_, other->yazhu_);
    std::swap(fangkajinbi_, other->fangkajinbi_);
    std::swap(minneed_, other->minneed_);
    std::swap(pipeiparam_, other->pipeiparam_);
    std::swap(clubid_, other->clubid_);
    std::swap(clubtablenum_, other->clubtablenum_);
    std::swap(clubgametypeid_, other->clubgametypeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqCreateGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqCreateGameRoom_descriptor_;
  metadata.reflection = ReqCreateGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResCreateGameRoom::kResultFieldNumber;
const int ResCreateGameRoom::kReadyTimerFieldNumber;
#endif  // !_MSC_VER

ResCreateGameRoom::ResCreateGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResCreateGameRoom::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResCreateGameRoom::ResCreateGameRoom(const ResCreateGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResCreateGameRoom::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  readytimer_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResCreateGameRoom::~ResCreateGameRoom() {
  SharedDtor();
}

void ResCreateGameRoom::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResCreateGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResCreateGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResCreateGameRoom_descriptor_;
}

const ResCreateGameRoom& ResCreateGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResCreateGameRoom* ResCreateGameRoom::default_instance_ = NULL;

ResCreateGameRoom* ResCreateGameRoom::New() const {
  return new ResCreateGameRoom;
}

void ResCreateGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    readytimer_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResCreateGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_readyTimer;
        break;
      }

      // optional int64 readyTimer = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_readyTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &readytimer_)));
          set_has_readytimer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResCreateGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional int64 readyTimer = 2;
  if (has_readytimer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->readytimer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResCreateGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional int64 readyTimer = 2;
  if (has_readytimer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->readytimer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResCreateGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional int64 readyTimer = 2;
    if (has_readytimer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->readytimer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResCreateGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResCreateGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResCreateGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResCreateGameRoom::MergeFrom(const ResCreateGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_readytimer()) {
      set_readytimer(from.readytimer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResCreateGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResCreateGameRoom::CopyFrom(const ResCreateGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResCreateGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResCreateGameRoom::Swap(ResCreateGameRoom* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(readytimer_, other->readytimer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResCreateGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResCreateGameRoom_descriptor_;
  metadata.reflection = ResCreateGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyGameRoomCreate::kRoomIdFieldNumber;
#endif  // !_MSC_VER

ResNotifyGameRoomCreate::ResNotifyGameRoomCreate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyGameRoomCreate::InitAsDefaultInstance() {
}

ResNotifyGameRoomCreate::ResNotifyGameRoomCreate(const ResNotifyGameRoomCreate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyGameRoomCreate::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyGameRoomCreate::~ResNotifyGameRoomCreate() {
  SharedDtor();
}

void ResNotifyGameRoomCreate::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
  }
}

void ResNotifyGameRoomCreate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyGameRoomCreate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyGameRoomCreate_descriptor_;
}

const ResNotifyGameRoomCreate& ResNotifyGameRoomCreate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifyGameRoomCreate* ResNotifyGameRoomCreate::default_instance_ = NULL;

ResNotifyGameRoomCreate* ResNotifyGameRoomCreate::New() const {
  return new ResNotifyGameRoomCreate;
}

void ResNotifyGameRoomCreate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyGameRoomCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyGameRoomCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyGameRoomCreate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyGameRoomCreate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyGameRoomCreate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyGameRoomCreate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyGameRoomCreate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyGameRoomCreate::MergeFrom(const ResNotifyGameRoomCreate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyGameRoomCreate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyGameRoomCreate::CopyFrom(const ResNotifyGameRoomCreate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyGameRoomCreate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResNotifyGameRoomCreate::Swap(ResNotifyGameRoomCreate* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyGameRoomCreate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyGameRoomCreate_descriptor_;
  metadata.reflection = ResNotifyGameRoomCreate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqJoinGameRoom::kRoomIdFieldNumber;
#endif  // !_MSC_VER

ReqJoinGameRoom::ReqJoinGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqJoinGameRoom::InitAsDefaultInstance() {
}

ReqJoinGameRoom::ReqJoinGameRoom(const ReqJoinGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqJoinGameRoom::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqJoinGameRoom::~ReqJoinGameRoom() {
  SharedDtor();
}

void ReqJoinGameRoom::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
  }
}

void ReqJoinGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqJoinGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqJoinGameRoom_descriptor_;
}

const ReqJoinGameRoom& ReqJoinGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqJoinGameRoom* ReqJoinGameRoom::default_instance_ = NULL;

ReqJoinGameRoom* ReqJoinGameRoom::New() const {
  return new ReqJoinGameRoom;
}

void ReqJoinGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqJoinGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqJoinGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqJoinGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqJoinGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqJoinGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqJoinGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqJoinGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqJoinGameRoom::MergeFrom(const ReqJoinGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqJoinGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqJoinGameRoom::CopyFrom(const ReqJoinGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqJoinGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqJoinGameRoom::Swap(ReqJoinGameRoom* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqJoinGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqJoinGameRoom_descriptor_;
  metadata.reflection = ReqJoinGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResJoinGameRoom::kResultFieldNumber;
const int ResJoinGameRoom::kRoomInfoFieldNumber;
const int ResJoinGameRoom::kReadyTimerFieldNumber;
#endif  // !_MSC_VER

ResJoinGameRoom::ResJoinGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResJoinGameRoom::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
  roominfo_ = const_cast< ::ProtoNet::RoomInfo*>(&::ProtoNet::RoomInfo::default_instance());
}

ResJoinGameRoom::ResJoinGameRoom(const ResJoinGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResJoinGameRoom::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  roominfo_ = NULL;
  readytimer_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResJoinGameRoom::~ResJoinGameRoom() {
  SharedDtor();
}

void ResJoinGameRoom::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
    delete roominfo_;
  }
}

void ResJoinGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResJoinGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResJoinGameRoom_descriptor_;
}

const ResJoinGameRoom& ResJoinGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResJoinGameRoom* ResJoinGameRoom::default_instance_ = NULL;

ResJoinGameRoom* ResJoinGameRoom::New() const {
  return new ResJoinGameRoom;
}

void ResJoinGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    if (has_roominfo()) {
      if (roominfo_ != NULL) roominfo_->::ProtoNet::RoomInfo::Clear();
    }
    readytimer_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResJoinGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_roomInfo;
        break;
      }

      // optional .ProtoNet.RoomInfo roomInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roominfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_readyTimer;
        break;
      }

      // optional int64 readyTimer = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_readyTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &readytimer_)));
          set_has_readytimer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResJoinGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional .ProtoNet.RoomInfo roomInfo = 2;
  if (has_roominfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->roominfo(), output);
  }

  // optional int64 readyTimer = 3;
  if (has_readytimer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->readytimer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResJoinGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional .ProtoNet.RoomInfo roomInfo = 2;
  if (has_roominfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->roominfo(), target);
  }

  // optional int64 readyTimer = 3;
  if (has_readytimer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->readytimer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResJoinGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional .ProtoNet.RoomInfo roomInfo = 2;
    if (has_roominfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->roominfo());
    }

    // optional int64 readyTimer = 3;
    if (has_readytimer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->readytimer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResJoinGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResJoinGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResJoinGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResJoinGameRoom::MergeFrom(const ResJoinGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_roominfo()) {
      mutable_roominfo()->::ProtoNet::RoomInfo::MergeFrom(from.roominfo());
    }
    if (from.has_readytimer()) {
      set_readytimer(from.readytimer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResJoinGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResJoinGameRoom::CopyFrom(const ResJoinGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResJoinGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  if (has_roominfo()) {
    if (!this->roominfo().IsInitialized()) return false;
  }
  return true;
}

void ResJoinGameRoom::Swap(ResJoinGameRoom* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(roominfo_, other->roominfo_);
    std::swap(readytimer_, other->readytimer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResJoinGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResJoinGameRoom_descriptor_;
  metadata.reflection = ResJoinGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneJoinGameRoom::kRoomIdFieldNumber;
const int ResNotifySomeOneJoinGameRoom::kControllerFieldNumber;
const int ResNotifySomeOneJoinGameRoom::kPosBrifeFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneJoinGameRoom::ResNotifySomeOneJoinGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneJoinGameRoom::InitAsDefaultInstance() {
  controller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
  posbrife_ = const_cast< ::ProtoNet::PosBrife*>(&::ProtoNet::PosBrife::default_instance());
}

ResNotifySomeOneJoinGameRoom::ResNotifySomeOneJoinGameRoom(const ResNotifySomeOneJoinGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneJoinGameRoom::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  controller_ = NULL;
  posbrife_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneJoinGameRoom::~ResNotifySomeOneJoinGameRoom() {
  SharedDtor();
}

void ResNotifySomeOneJoinGameRoom::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete controller_;
    delete posbrife_;
  }
}

void ResNotifySomeOneJoinGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneJoinGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneJoinGameRoom_descriptor_;
}

const ResNotifySomeOneJoinGameRoom& ResNotifySomeOneJoinGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneJoinGameRoom* ResNotifySomeOneJoinGameRoom::default_instance_ = NULL;

ResNotifySomeOneJoinGameRoom* ResNotifySomeOneJoinGameRoom::New() const {
  return new ResNotifySomeOneJoinGameRoom;
}

void ResNotifySomeOneJoinGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    if (has_controller()) {
      if (controller_ != NULL) controller_->::ProtoNet::SdkController::Clear();
    }
    if (has_posbrife()) {
      if (posbrife_ != NULL) posbrife_->::ProtoNet::PosBrife::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneJoinGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controller;
        break;
      }

      // required .ProtoNet.SdkController controller = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_posBrife;
        break;
      }

      // required .ProtoNet.PosBrife posBrife = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_posBrife:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_posbrife()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneJoinGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->controller(), output);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->posbrife(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneJoinGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->controller(), target);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->posbrife(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneJoinGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required .ProtoNet.SdkController controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controller());
    }

    // required .ProtoNet.PosBrife posBrife = 3;
    if (has_posbrife()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->posbrife());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneJoinGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneJoinGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneJoinGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneJoinGameRoom::MergeFrom(const ResNotifySomeOneJoinGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_controller()) {
      mutable_controller()->::ProtoNet::SdkController::MergeFrom(from.controller());
    }
    if (from.has_posbrife()) {
      mutable_posbrife()->::ProtoNet::PosBrife::MergeFrom(from.posbrife());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneJoinGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneJoinGameRoom::CopyFrom(const ResNotifySomeOneJoinGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneJoinGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_controller()) {
    if (!this->controller().IsInitialized()) return false;
  }
  if (has_posbrife()) {
    if (!this->posbrife().IsInitialized()) return false;
  }
  return true;
}

void ResNotifySomeOneJoinGameRoom::Swap(ResNotifySomeOneJoinGameRoom* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(controller_, other->controller_);
    std::swap(posbrife_, other->posbrife_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneJoinGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneJoinGameRoom_descriptor_;
  metadata.reflection = ResNotifySomeOneJoinGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqExitGameRoom::ReqExitGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqExitGameRoom::InitAsDefaultInstance() {
}

ReqExitGameRoom::ReqExitGameRoom(const ReqExitGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqExitGameRoom::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqExitGameRoom::~ReqExitGameRoom() {
  SharedDtor();
}

void ReqExitGameRoom::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqExitGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqExitGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqExitGameRoom_descriptor_;
}

const ReqExitGameRoom& ReqExitGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqExitGameRoom* ReqExitGameRoom::default_instance_ = NULL;

ReqExitGameRoom* ReqExitGameRoom::New() const {
  return new ReqExitGameRoom;
}

void ReqExitGameRoom::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqExitGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqExitGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqExitGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqExitGameRoom::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqExitGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqExitGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqExitGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqExitGameRoom::MergeFrom(const ReqExitGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqExitGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqExitGameRoom::CopyFrom(const ReqExitGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqExitGameRoom::IsInitialized() const {

  return true;
}

void ReqExitGameRoom::Swap(ReqExitGameRoom* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqExitGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqExitGameRoom_descriptor_;
  metadata.reflection = ReqExitGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResExitGameRoom::kResultFieldNumber;
#endif  // !_MSC_VER

ResExitGameRoom::ResExitGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResExitGameRoom::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResExitGameRoom::ResExitGameRoom(const ResExitGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResExitGameRoom::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResExitGameRoom::~ResExitGameRoom() {
  SharedDtor();
}

void ResExitGameRoom::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResExitGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResExitGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResExitGameRoom_descriptor_;
}

const ResExitGameRoom& ResExitGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResExitGameRoom* ResExitGameRoom::default_instance_ = NULL;

ResExitGameRoom* ResExitGameRoom::New() const {
  return new ResExitGameRoom;
}

void ResExitGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResExitGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResExitGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResExitGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResExitGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResExitGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResExitGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResExitGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResExitGameRoom::MergeFrom(const ResExitGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResExitGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResExitGameRoom::CopyFrom(const ResExitGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResExitGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResExitGameRoom::Swap(ResExitGameRoom* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResExitGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResExitGameRoom_descriptor_;
  metadata.reflection = ResExitGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneExitGameRoom::kRoomIdFieldNumber;
const int ResNotifySomeOneExitGameRoom::kControllerFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneExitGameRoom::ResNotifySomeOneExitGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneExitGameRoom::InitAsDefaultInstance() {
  controller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
}

ResNotifySomeOneExitGameRoom::ResNotifySomeOneExitGameRoom(const ResNotifySomeOneExitGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneExitGameRoom::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  controller_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneExitGameRoom::~ResNotifySomeOneExitGameRoom() {
  SharedDtor();
}

void ResNotifySomeOneExitGameRoom::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete controller_;
  }
}

void ResNotifySomeOneExitGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneExitGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneExitGameRoom_descriptor_;
}

const ResNotifySomeOneExitGameRoom& ResNotifySomeOneExitGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneExitGameRoom* ResNotifySomeOneExitGameRoom::default_instance_ = NULL;

ResNotifySomeOneExitGameRoom* ResNotifySomeOneExitGameRoom::New() const {
  return new ResNotifySomeOneExitGameRoom;
}

void ResNotifySomeOneExitGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    if (has_controller()) {
      if (controller_ != NULL) controller_->::ProtoNet::SdkController::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneExitGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controller;
        break;
      }

      // required .ProtoNet.SdkController controller = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneExitGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->controller(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneExitGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->controller(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneExitGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required .ProtoNet.SdkController controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controller());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneExitGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneExitGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneExitGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneExitGameRoom::MergeFrom(const ResNotifySomeOneExitGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_controller()) {
      mutable_controller()->::ProtoNet::SdkController::MergeFrom(from.controller());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneExitGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneExitGameRoom::CopyFrom(const ResNotifySomeOneExitGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneExitGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_controller()) {
    if (!this->controller().IsInitialized()) return false;
  }
  return true;
}

void ResNotifySomeOneExitGameRoom::Swap(ResNotifySomeOneExitGameRoom* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(controller_, other->controller_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneExitGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneExitGameRoom_descriptor_;
  metadata.reflection = ResNotifySomeOneExitGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqGameReady::kReadyFieldNumber;
#endif  // !_MSC_VER

ReqGameReady::ReqGameReady()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqGameReady::InitAsDefaultInstance() {
}

ReqGameReady::ReqGameReady(const ReqGameReady& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqGameReady::SharedCtor() {
  _cached_size_ = 0;
  ready_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqGameReady::~ReqGameReady() {
  SharedDtor();
}

void ReqGameReady::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqGameReady::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqGameReady::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqGameReady_descriptor_;
}

const ReqGameReady& ReqGameReady::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqGameReady* ReqGameReady::default_instance_ = NULL;

ReqGameReady* ReqGameReady::New() const {
  return new ReqGameReady;
}

void ReqGameReady::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ready_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqGameReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool ready = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ready_)));
          set_has_ready();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqGameReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool ready = 1;
  if (has_ready()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ready(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqGameReady::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool ready = 1;
  if (has_ready()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ready(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqGameReady::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool ready = 1;
    if (has_ready()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqGameReady::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqGameReady* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqGameReady*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqGameReady::MergeFrom(const ReqGameReady& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ready()) {
      set_ready(from.ready());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqGameReady::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGameReady::CopyFrom(const ReqGameReady& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGameReady::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqGameReady::Swap(ReqGameReady* other) {
  if (other != this) {
    std::swap(ready_, other->ready_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqGameReady::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqGameReady_descriptor_;
  metadata.reflection = ReqGameReady_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResGameReady::kResultFieldNumber;
#endif  // !_MSC_VER

ResGameReady::ResGameReady()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResGameReady::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResGameReady::ResGameReady(const ResGameReady& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResGameReady::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResGameReady::~ResGameReady() {
  SharedDtor();
}

void ResGameReady::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResGameReady::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResGameReady::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResGameReady_descriptor_;
}

const ResGameReady& ResGameReady::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResGameReady* ResGameReady::default_instance_ = NULL;

ResGameReady* ResGameReady::New() const {
  return new ResGameReady;
}

void ResGameReady::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResGameReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResGameReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResGameReady::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResGameReady::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResGameReady::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResGameReady* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResGameReady*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResGameReady::MergeFrom(const ResGameReady& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResGameReady::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResGameReady::CopyFrom(const ResGameReady& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResGameReady::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResGameReady::Swap(ResGameReady* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResGameReady::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResGameReady_descriptor_;
  metadata.reflection = ResGameReady_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqDissolutionGameRoom::ReqDissolutionGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqDissolutionGameRoom::InitAsDefaultInstance() {
}

ReqDissolutionGameRoom::ReqDissolutionGameRoom(const ReqDissolutionGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqDissolutionGameRoom::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqDissolutionGameRoom::~ReqDissolutionGameRoom() {
  SharedDtor();
}

void ReqDissolutionGameRoom::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqDissolutionGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqDissolutionGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqDissolutionGameRoom_descriptor_;
}

const ReqDissolutionGameRoom& ReqDissolutionGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqDissolutionGameRoom* ReqDissolutionGameRoom::default_instance_ = NULL;

ReqDissolutionGameRoom* ReqDissolutionGameRoom::New() const {
  return new ReqDissolutionGameRoom;
}

void ReqDissolutionGameRoom::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqDissolutionGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqDissolutionGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqDissolutionGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqDissolutionGameRoom::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqDissolutionGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqDissolutionGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqDissolutionGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqDissolutionGameRoom::MergeFrom(const ReqDissolutionGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqDissolutionGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqDissolutionGameRoom::CopyFrom(const ReqDissolutionGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqDissolutionGameRoom::IsInitialized() const {

  return true;
}

void ReqDissolutionGameRoom::Swap(ReqDissolutionGameRoom* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqDissolutionGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqDissolutionGameRoom_descriptor_;
  metadata.reflection = ReqDissolutionGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResDissolutionGameRoom::kResultFieldNumber;
#endif  // !_MSC_VER

ResDissolutionGameRoom::ResDissolutionGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResDissolutionGameRoom::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResDissolutionGameRoom::ResDissolutionGameRoom(const ResDissolutionGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResDissolutionGameRoom::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResDissolutionGameRoom::~ResDissolutionGameRoom() {
  SharedDtor();
}

void ResDissolutionGameRoom::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResDissolutionGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResDissolutionGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResDissolutionGameRoom_descriptor_;
}

const ResDissolutionGameRoom& ResDissolutionGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResDissolutionGameRoom* ResDissolutionGameRoom::default_instance_ = NULL;

ResDissolutionGameRoom* ResDissolutionGameRoom::New() const {
  return new ResDissolutionGameRoom;
}

void ResDissolutionGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResDissolutionGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResDissolutionGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResDissolutionGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResDissolutionGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResDissolutionGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResDissolutionGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResDissolutionGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResDissolutionGameRoom::MergeFrom(const ResDissolutionGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResDissolutionGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResDissolutionGameRoom::CopyFrom(const ResDissolutionGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResDissolutionGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResDissolutionGameRoom::Swap(ResDissolutionGameRoom* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResDissolutionGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResDissolutionGameRoom_descriptor_;
  metadata.reflection = ResDissolutionGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneReqDissolutionGameRoom::kRoomIdFieldNumber;
const int ResNotifySomeOneReqDissolutionGameRoom::kControllerFieldNumber;
const int ResNotifySomeOneReqDissolutionGameRoom::kPosBrifeFieldNumber;
const int ResNotifySomeOneReqDissolutionGameRoom::kTimerFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneReqDissolutionGameRoom::ResNotifySomeOneReqDissolutionGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneReqDissolutionGameRoom::InitAsDefaultInstance() {
  controller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
  posbrife_ = const_cast< ::ProtoNet::PosBrife*>(&::ProtoNet::PosBrife::default_instance());
}

ResNotifySomeOneReqDissolutionGameRoom::ResNotifySomeOneReqDissolutionGameRoom(const ResNotifySomeOneReqDissolutionGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneReqDissolutionGameRoom::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  controller_ = NULL;
  posbrife_ = NULL;
  timer_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneReqDissolutionGameRoom::~ResNotifySomeOneReqDissolutionGameRoom() {
  SharedDtor();
}

void ResNotifySomeOneReqDissolutionGameRoom::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete controller_;
    delete posbrife_;
  }
}

void ResNotifySomeOneReqDissolutionGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneReqDissolutionGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneReqDissolutionGameRoom_descriptor_;
}

const ResNotifySomeOneReqDissolutionGameRoom& ResNotifySomeOneReqDissolutionGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneReqDissolutionGameRoom* ResNotifySomeOneReqDissolutionGameRoom::default_instance_ = NULL;

ResNotifySomeOneReqDissolutionGameRoom* ResNotifySomeOneReqDissolutionGameRoom::New() const {
  return new ResNotifySomeOneReqDissolutionGameRoom;
}

void ResNotifySomeOneReqDissolutionGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    if (has_controller()) {
      if (controller_ != NULL) controller_->::ProtoNet::SdkController::Clear();
    }
    if (has_posbrife()) {
      if (posbrife_ != NULL) posbrife_->::ProtoNet::PosBrife::Clear();
    }
    timer_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneReqDissolutionGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controller;
        break;
      }

      // required .ProtoNet.SdkController controller = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_posBrife;
        break;
      }

      // required .ProtoNet.PosBrife posBrife = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_posBrife:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_posbrife()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_timer;
        break;
      }

      // required int64 timer = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timer_)));
          set_has_timer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneReqDissolutionGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->controller(), output);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->posbrife(), output);
  }

  // required int64 timer = 4;
  if (has_timer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneReqDissolutionGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->controller(), target);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->posbrife(), target);
  }

  // required int64 timer = 4;
  if (has_timer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->timer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneReqDissolutionGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required .ProtoNet.SdkController controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controller());
    }

    // required .ProtoNet.PosBrife posBrife = 3;
    if (has_posbrife()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->posbrife());
    }

    // required int64 timer = 4;
    if (has_timer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneReqDissolutionGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneReqDissolutionGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneReqDissolutionGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneReqDissolutionGameRoom::MergeFrom(const ResNotifySomeOneReqDissolutionGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_controller()) {
      mutable_controller()->::ProtoNet::SdkController::MergeFrom(from.controller());
    }
    if (from.has_posbrife()) {
      mutable_posbrife()->::ProtoNet::PosBrife::MergeFrom(from.posbrife());
    }
    if (from.has_timer()) {
      set_timer(from.timer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneReqDissolutionGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneReqDissolutionGameRoom::CopyFrom(const ResNotifySomeOneReqDissolutionGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneReqDissolutionGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_controller()) {
    if (!this->controller().IsInitialized()) return false;
  }
  if (has_posbrife()) {
    if (!this->posbrife().IsInitialized()) return false;
  }
  return true;
}

void ResNotifySomeOneReqDissolutionGameRoom::Swap(ResNotifySomeOneReqDissolutionGameRoom* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(controller_, other->controller_);
    std::swap(posbrife_, other->posbrife_);
    std::swap(timer_, other->timer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneReqDissolutionGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneReqDissolutionGameRoom_descriptor_;
  metadata.reflection = ResNotifySomeOneReqDissolutionGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqAgreeDissolutionGameRoom::kAgreeFieldNumber;
#endif  // !_MSC_VER

ReqAgreeDissolutionGameRoom::ReqAgreeDissolutionGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqAgreeDissolutionGameRoom::InitAsDefaultInstance() {
}

ReqAgreeDissolutionGameRoom::ReqAgreeDissolutionGameRoom(const ReqAgreeDissolutionGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqAgreeDissolutionGameRoom::SharedCtor() {
  _cached_size_ = 0;
  agree_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqAgreeDissolutionGameRoom::~ReqAgreeDissolutionGameRoom() {
  SharedDtor();
}

void ReqAgreeDissolutionGameRoom::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqAgreeDissolutionGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqAgreeDissolutionGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqAgreeDissolutionGameRoom_descriptor_;
}

const ReqAgreeDissolutionGameRoom& ReqAgreeDissolutionGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqAgreeDissolutionGameRoom* ReqAgreeDissolutionGameRoom::default_instance_ = NULL;

ReqAgreeDissolutionGameRoom* ReqAgreeDissolutionGameRoom::New() const {
  return new ReqAgreeDissolutionGameRoom;
}

void ReqAgreeDissolutionGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    agree_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqAgreeDissolutionGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool agree = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &agree_)));
          set_has_agree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqAgreeDissolutionGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool agree = 1;
  if (has_agree()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->agree(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqAgreeDissolutionGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool agree = 1;
  if (has_agree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->agree(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqAgreeDissolutionGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool agree = 1;
    if (has_agree()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqAgreeDissolutionGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqAgreeDissolutionGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqAgreeDissolutionGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqAgreeDissolutionGameRoom::MergeFrom(const ReqAgreeDissolutionGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_agree()) {
      set_agree(from.agree());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqAgreeDissolutionGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqAgreeDissolutionGameRoom::CopyFrom(const ReqAgreeDissolutionGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqAgreeDissolutionGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqAgreeDissolutionGameRoom::Swap(ReqAgreeDissolutionGameRoom* other) {
  if (other != this) {
    std::swap(agree_, other->agree_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqAgreeDissolutionGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqAgreeDissolutionGameRoom_descriptor_;
  metadata.reflection = ReqAgreeDissolutionGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResAgreeDissolutionGameRoom::kResultFieldNumber;
#endif  // !_MSC_VER

ResAgreeDissolutionGameRoom::ResAgreeDissolutionGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResAgreeDissolutionGameRoom::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResAgreeDissolutionGameRoom::ResAgreeDissolutionGameRoom(const ResAgreeDissolutionGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResAgreeDissolutionGameRoom::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResAgreeDissolutionGameRoom::~ResAgreeDissolutionGameRoom() {
  SharedDtor();
}

void ResAgreeDissolutionGameRoom::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResAgreeDissolutionGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResAgreeDissolutionGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResAgreeDissolutionGameRoom_descriptor_;
}

const ResAgreeDissolutionGameRoom& ResAgreeDissolutionGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResAgreeDissolutionGameRoom* ResAgreeDissolutionGameRoom::default_instance_ = NULL;

ResAgreeDissolutionGameRoom* ResAgreeDissolutionGameRoom::New() const {
  return new ResAgreeDissolutionGameRoom;
}

void ResAgreeDissolutionGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResAgreeDissolutionGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResAgreeDissolutionGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResAgreeDissolutionGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResAgreeDissolutionGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResAgreeDissolutionGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResAgreeDissolutionGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResAgreeDissolutionGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResAgreeDissolutionGameRoom::MergeFrom(const ResAgreeDissolutionGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResAgreeDissolutionGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResAgreeDissolutionGameRoom::CopyFrom(const ResAgreeDissolutionGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResAgreeDissolutionGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResAgreeDissolutionGameRoom::Swap(ResAgreeDissolutionGameRoom* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResAgreeDissolutionGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResAgreeDissolutionGameRoom_descriptor_;
  metadata.reflection = ResAgreeDissolutionGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneAggreeDissolutionGameRoom::kRoomIdFieldNumber;
const int ResNotifySomeOneAggreeDissolutionGameRoom::kControllerFieldNumber;
const int ResNotifySomeOneAggreeDissolutionGameRoom::kPosBrifeFieldNumber;
const int ResNotifySomeOneAggreeDissolutionGameRoom::kAgreeFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneAggreeDissolutionGameRoom::ResNotifySomeOneAggreeDissolutionGameRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneAggreeDissolutionGameRoom::InitAsDefaultInstance() {
  controller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
  posbrife_ = const_cast< ::ProtoNet::PosBrife*>(&::ProtoNet::PosBrife::default_instance());
}

ResNotifySomeOneAggreeDissolutionGameRoom::ResNotifySomeOneAggreeDissolutionGameRoom(const ResNotifySomeOneAggreeDissolutionGameRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneAggreeDissolutionGameRoom::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  controller_ = NULL;
  posbrife_ = NULL;
  agree_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneAggreeDissolutionGameRoom::~ResNotifySomeOneAggreeDissolutionGameRoom() {
  SharedDtor();
}

void ResNotifySomeOneAggreeDissolutionGameRoom::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete controller_;
    delete posbrife_;
  }
}

void ResNotifySomeOneAggreeDissolutionGameRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneAggreeDissolutionGameRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneAggreeDissolutionGameRoom_descriptor_;
}

const ResNotifySomeOneAggreeDissolutionGameRoom& ResNotifySomeOneAggreeDissolutionGameRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneAggreeDissolutionGameRoom* ResNotifySomeOneAggreeDissolutionGameRoom::default_instance_ = NULL;

ResNotifySomeOneAggreeDissolutionGameRoom* ResNotifySomeOneAggreeDissolutionGameRoom::New() const {
  return new ResNotifySomeOneAggreeDissolutionGameRoom;
}

void ResNotifySomeOneAggreeDissolutionGameRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    if (has_controller()) {
      if (controller_ != NULL) controller_->::ProtoNet::SdkController::Clear();
    }
    if (has_posbrife()) {
      if (posbrife_ != NULL) posbrife_->::ProtoNet::PosBrife::Clear();
    }
    agree_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneAggreeDissolutionGameRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controller;
        break;
      }

      // required .ProtoNet.SdkController controller = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_posBrife;
        break;
      }

      // required .ProtoNet.PosBrife posBrife = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_posBrife:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_posbrife()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_agree;
        break;
      }

      // required bool agree = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_agree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &agree_)));
          set_has_agree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneAggreeDissolutionGameRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->controller(), output);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->posbrife(), output);
  }

  // required bool agree = 4;
  if (has_agree()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->agree(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneAggreeDissolutionGameRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->controller(), target);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->posbrife(), target);
  }

  // required bool agree = 4;
  if (has_agree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->agree(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneAggreeDissolutionGameRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required .ProtoNet.SdkController controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controller());
    }

    // required .ProtoNet.PosBrife posBrife = 3;
    if (has_posbrife()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->posbrife());
    }

    // required bool agree = 4;
    if (has_agree()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneAggreeDissolutionGameRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneAggreeDissolutionGameRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneAggreeDissolutionGameRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneAggreeDissolutionGameRoom::MergeFrom(const ResNotifySomeOneAggreeDissolutionGameRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_controller()) {
      mutable_controller()->::ProtoNet::SdkController::MergeFrom(from.controller());
    }
    if (from.has_posbrife()) {
      mutable_posbrife()->::ProtoNet::PosBrife::MergeFrom(from.posbrife());
    }
    if (from.has_agree()) {
      set_agree(from.agree());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneAggreeDissolutionGameRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneAggreeDissolutionGameRoom::CopyFrom(const ResNotifySomeOneAggreeDissolutionGameRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneAggreeDissolutionGameRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_controller()) {
    if (!this->controller().IsInitialized()) return false;
  }
  if (has_posbrife()) {
    if (!this->posbrife().IsInitialized()) return false;
  }
  return true;
}

void ResNotifySomeOneAggreeDissolutionGameRoom::Swap(ResNotifySomeOneAggreeDissolutionGameRoom* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(controller_, other->controller_);
    std::swap(posbrife_, other->posbrife_);
    std::swap(agree_, other->agree_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneAggreeDissolutionGameRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneAggreeDissolutionGameRoom_descriptor_;
  metadata.reflection = ResNotifySomeOneAggreeDissolutionGameRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ResNotifyGameRoomDissolution::ResNotifyGameRoomDissolution()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyGameRoomDissolution::InitAsDefaultInstance() {
}

ResNotifyGameRoomDissolution::ResNotifyGameRoomDissolution(const ResNotifyGameRoomDissolution& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyGameRoomDissolution::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyGameRoomDissolution::~ResNotifyGameRoomDissolution() {
  SharedDtor();
}

void ResNotifyGameRoomDissolution::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResNotifyGameRoomDissolution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyGameRoomDissolution::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyGameRoomDissolution_descriptor_;
}

const ResNotifyGameRoomDissolution& ResNotifyGameRoomDissolution::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifyGameRoomDissolution* ResNotifyGameRoomDissolution::default_instance_ = NULL;

ResNotifyGameRoomDissolution* ResNotifyGameRoomDissolution::New() const {
  return new ResNotifyGameRoomDissolution;
}

void ResNotifyGameRoomDissolution::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyGameRoomDissolution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ResNotifyGameRoomDissolution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyGameRoomDissolution::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyGameRoomDissolution::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyGameRoomDissolution::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyGameRoomDissolution* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyGameRoomDissolution*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyGameRoomDissolution::MergeFrom(const ResNotifyGameRoomDissolution& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyGameRoomDissolution::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyGameRoomDissolution::CopyFrom(const ResNotifyGameRoomDissolution& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyGameRoomDissolution::IsInitialized() const {

  return true;
}

void ResNotifyGameRoomDissolution::Swap(ResNotifyGameRoomDissolution* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyGameRoomDissolution::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyGameRoomDissolution_descriptor_;
  metadata.reflection = ResNotifyGameRoomDissolution_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ResNotifyGameOver::ResNotifyGameOver()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyGameOver::InitAsDefaultInstance() {
}

ResNotifyGameOver::ResNotifyGameOver(const ResNotifyGameOver& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyGameOver::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyGameOver::~ResNotifyGameOver() {
  SharedDtor();
}

void ResNotifyGameOver::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResNotifyGameOver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyGameOver::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyGameOver_descriptor_;
}

const ResNotifyGameOver& ResNotifyGameOver::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifyGameOver* ResNotifyGameOver::default_instance_ = NULL;

ResNotifyGameOver* ResNotifyGameOver::New() const {
  return new ResNotifyGameOver;
}

void ResNotifyGameOver::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyGameOver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ResNotifyGameOver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyGameOver::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyGameOver::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyGameOver::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyGameOver* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyGameOver*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyGameOver::MergeFrom(const ResNotifyGameOver& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyGameOver::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyGameOver::CopyFrom(const ResNotifyGameOver& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyGameOver::IsInitialized() const {

  return true;
}

void ResNotifyGameOver::Swap(ResNotifyGameOver* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyGameOver::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyGameOver_descriptor_;
  metadata.reflection = ResNotifyGameOver_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqGetRoomInfo::ReqGetRoomInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqGetRoomInfo::InitAsDefaultInstance() {
}

ReqGetRoomInfo::ReqGetRoomInfo(const ReqGetRoomInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqGetRoomInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqGetRoomInfo::~ReqGetRoomInfo() {
  SharedDtor();
}

void ReqGetRoomInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqGetRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqGetRoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqGetRoomInfo_descriptor_;
}

const ReqGetRoomInfo& ReqGetRoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqGetRoomInfo* ReqGetRoomInfo::default_instance_ = NULL;

ReqGetRoomInfo* ReqGetRoomInfo::New() const {
  return new ReqGetRoomInfo;
}

void ReqGetRoomInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqGetRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqGetRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqGetRoomInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqGetRoomInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqGetRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqGetRoomInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqGetRoomInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqGetRoomInfo::MergeFrom(const ReqGetRoomInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqGetRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGetRoomInfo::CopyFrom(const ReqGetRoomInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGetRoomInfo::IsInitialized() const {

  return true;
}

void ReqGetRoomInfo::Swap(ReqGetRoomInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqGetRoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqGetRoomInfo_descriptor_;
  metadata.reflection = ReqGetRoomInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResGetRoomInfo::kResultFieldNumber;
const int ResGetRoomInfo::kRoomInfoFieldNumber;
#endif  // !_MSC_VER

ResGetRoomInfo::ResGetRoomInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResGetRoomInfo::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
  roominfo_ = const_cast< ::ProtoNet::RoomInfo*>(&::ProtoNet::RoomInfo::default_instance());
}

ResGetRoomInfo::ResGetRoomInfo(const ResGetRoomInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResGetRoomInfo::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  roominfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResGetRoomInfo::~ResGetRoomInfo() {
  SharedDtor();
}

void ResGetRoomInfo::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
    delete roominfo_;
  }
}

void ResGetRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResGetRoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResGetRoomInfo_descriptor_;
}

const ResGetRoomInfo& ResGetRoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResGetRoomInfo* ResGetRoomInfo::default_instance_ = NULL;

ResGetRoomInfo* ResGetRoomInfo::New() const {
  return new ResGetRoomInfo;
}

void ResGetRoomInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    if (has_roominfo()) {
      if (roominfo_ != NULL) roominfo_->::ProtoNet::RoomInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResGetRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_roomInfo;
        break;
      }

      // optional .ProtoNet.RoomInfo roomInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roominfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResGetRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional .ProtoNet.RoomInfo roomInfo = 2;
  if (has_roominfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->roominfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResGetRoomInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional .ProtoNet.RoomInfo roomInfo = 2;
  if (has_roominfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->roominfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResGetRoomInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional .ProtoNet.RoomInfo roomInfo = 2;
    if (has_roominfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->roominfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResGetRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResGetRoomInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResGetRoomInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResGetRoomInfo::MergeFrom(const ResGetRoomInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_roominfo()) {
      mutable_roominfo()->::ProtoNet::RoomInfo::MergeFrom(from.roominfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResGetRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResGetRoomInfo::CopyFrom(const ResGetRoomInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResGetRoomInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  if (has_roominfo()) {
    if (!this->roominfo().IsInitialized()) return false;
  }
  return true;
}

void ResGetRoomInfo::Swap(ResGetRoomInfo* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(roominfo_, other->roominfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResGetRoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResGetRoomInfo_descriptor_;
  metadata.reflection = ResGetRoomInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneGameReady::kRoomIdFieldNumber;
const int ResNotifySomeOneGameReady::kControllerFieldNumber;
const int ResNotifySomeOneGameReady::kPosBrifeFieldNumber;
const int ResNotifySomeOneGameReady::kReadyFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneGameReady::ResNotifySomeOneGameReady()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneGameReady::InitAsDefaultInstance() {
  controller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
  posbrife_ = const_cast< ::ProtoNet::PosBrife*>(&::ProtoNet::PosBrife::default_instance());
}

ResNotifySomeOneGameReady::ResNotifySomeOneGameReady(const ResNotifySomeOneGameReady& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneGameReady::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  controller_ = NULL;
  posbrife_ = NULL;
  ready_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneGameReady::~ResNotifySomeOneGameReady() {
  SharedDtor();
}

void ResNotifySomeOneGameReady::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete controller_;
    delete posbrife_;
  }
}

void ResNotifySomeOneGameReady::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneGameReady::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneGameReady_descriptor_;
}

const ResNotifySomeOneGameReady& ResNotifySomeOneGameReady::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneGameReady* ResNotifySomeOneGameReady::default_instance_ = NULL;

ResNotifySomeOneGameReady* ResNotifySomeOneGameReady::New() const {
  return new ResNotifySomeOneGameReady;
}

void ResNotifySomeOneGameReady::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    if (has_controller()) {
      if (controller_ != NULL) controller_->::ProtoNet::SdkController::Clear();
    }
    if (has_posbrife()) {
      if (posbrife_ != NULL) posbrife_->::ProtoNet::PosBrife::Clear();
    }
    ready_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneGameReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controller;
        break;
      }

      // required .ProtoNet.SdkController controller = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_posBrife;
        break;
      }

      // required .ProtoNet.PosBrife posBrife = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_posBrife:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_posbrife()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ready;
        break;
      }

      // required bool ready = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ready:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ready_)));
          set_has_ready();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneGameReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->controller(), output);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->posbrife(), output);
  }

  // required bool ready = 4;
  if (has_ready()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->ready(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneGameReady::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->controller(), target);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->posbrife(), target);
  }

  // required bool ready = 4;
  if (has_ready()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->ready(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneGameReady::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required .ProtoNet.SdkController controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controller());
    }

    // required .ProtoNet.PosBrife posBrife = 3;
    if (has_posbrife()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->posbrife());
    }

    // required bool ready = 4;
    if (has_ready()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneGameReady::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneGameReady* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneGameReady*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneGameReady::MergeFrom(const ResNotifySomeOneGameReady& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_controller()) {
      mutable_controller()->::ProtoNet::SdkController::MergeFrom(from.controller());
    }
    if (from.has_posbrife()) {
      mutable_posbrife()->::ProtoNet::PosBrife::MergeFrom(from.posbrife());
    }
    if (from.has_ready()) {
      set_ready(from.ready());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneGameReady::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneGameReady::CopyFrom(const ResNotifySomeOneGameReady& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneGameReady::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_controller()) {
    if (!this->controller().IsInitialized()) return false;
  }
  if (has_posbrife()) {
    if (!this->posbrife().IsInitialized()) return false;
  }
  return true;
}

void ResNotifySomeOneGameReady::Swap(ResNotifySomeOneGameReady* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(controller_, other->controller_);
    std::swap(posbrife_, other->posbrife_);
    std::swap(ready_, other->ready_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneGameReady::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneGameReady_descriptor_;
  metadata.reflection = ResNotifySomeOneGameReady_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqChangeOnlineStatus::kOnlineFieldNumber;
#endif  // !_MSC_VER

ReqChangeOnlineStatus::ReqChangeOnlineStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqChangeOnlineStatus::InitAsDefaultInstance() {
}

ReqChangeOnlineStatus::ReqChangeOnlineStatus(const ReqChangeOnlineStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqChangeOnlineStatus::SharedCtor() {
  _cached_size_ = 0;
  online_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqChangeOnlineStatus::~ReqChangeOnlineStatus() {
  SharedDtor();
}

void ReqChangeOnlineStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqChangeOnlineStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqChangeOnlineStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqChangeOnlineStatus_descriptor_;
}

const ReqChangeOnlineStatus& ReqChangeOnlineStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqChangeOnlineStatus* ReqChangeOnlineStatus::default_instance_ = NULL;

ReqChangeOnlineStatus* ReqChangeOnlineStatus::New() const {
  return new ReqChangeOnlineStatus;
}

void ReqChangeOnlineStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    online_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqChangeOnlineStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool online = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));
          set_has_online();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqChangeOnlineStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool online = 1;
  if (has_online()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->online(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqChangeOnlineStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool online = 1;
  if (has_online()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->online(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqChangeOnlineStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool online = 1;
    if (has_online()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqChangeOnlineStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqChangeOnlineStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqChangeOnlineStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqChangeOnlineStatus::MergeFrom(const ReqChangeOnlineStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_online()) {
      set_online(from.online());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqChangeOnlineStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqChangeOnlineStatus::CopyFrom(const ReqChangeOnlineStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqChangeOnlineStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqChangeOnlineStatus::Swap(ReqChangeOnlineStatus* other) {
  if (other != this) {
    std::swap(online_, other->online_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqChangeOnlineStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqChangeOnlineStatus_descriptor_;
  metadata.reflection = ReqChangeOnlineStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResChangeOnlineStatus::kResultFieldNumber;
#endif  // !_MSC_VER

ResChangeOnlineStatus::ResChangeOnlineStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResChangeOnlineStatus::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResChangeOnlineStatus::ResChangeOnlineStatus(const ResChangeOnlineStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResChangeOnlineStatus::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResChangeOnlineStatus::~ResChangeOnlineStatus() {
  SharedDtor();
}

void ResChangeOnlineStatus::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResChangeOnlineStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResChangeOnlineStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResChangeOnlineStatus_descriptor_;
}

const ResChangeOnlineStatus& ResChangeOnlineStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResChangeOnlineStatus* ResChangeOnlineStatus::default_instance_ = NULL;

ResChangeOnlineStatus* ResChangeOnlineStatus::New() const {
  return new ResChangeOnlineStatus;
}

void ResChangeOnlineStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResChangeOnlineStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResChangeOnlineStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResChangeOnlineStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResChangeOnlineStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResChangeOnlineStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResChangeOnlineStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResChangeOnlineStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResChangeOnlineStatus::MergeFrom(const ResChangeOnlineStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResChangeOnlineStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResChangeOnlineStatus::CopyFrom(const ResChangeOnlineStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResChangeOnlineStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResChangeOnlineStatus::Swap(ResChangeOnlineStatus* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResChangeOnlineStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResChangeOnlineStatus_descriptor_;
  metadata.reflection = ResChangeOnlineStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneChangeOnlineStatus::kRoomIdFieldNumber;
const int ResNotifySomeOneChangeOnlineStatus::kControllerFieldNumber;
const int ResNotifySomeOneChangeOnlineStatus::kPosBrifeFieldNumber;
const int ResNotifySomeOneChangeOnlineStatus::kOnlineFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneChangeOnlineStatus::ResNotifySomeOneChangeOnlineStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneChangeOnlineStatus::InitAsDefaultInstance() {
  controller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
  posbrife_ = const_cast< ::ProtoNet::PosBrife*>(&::ProtoNet::PosBrife::default_instance());
}

ResNotifySomeOneChangeOnlineStatus::ResNotifySomeOneChangeOnlineStatus(const ResNotifySomeOneChangeOnlineStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneChangeOnlineStatus::SharedCtor() {
  _cached_size_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  controller_ = NULL;
  posbrife_ = NULL;
  online_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneChangeOnlineStatus::~ResNotifySomeOneChangeOnlineStatus() {
  SharedDtor();
}

void ResNotifySomeOneChangeOnlineStatus::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete controller_;
    delete posbrife_;
  }
}

void ResNotifySomeOneChangeOnlineStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneChangeOnlineStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneChangeOnlineStatus_descriptor_;
}

const ResNotifySomeOneChangeOnlineStatus& ResNotifySomeOneChangeOnlineStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneChangeOnlineStatus* ResNotifySomeOneChangeOnlineStatus::default_instance_ = NULL;

ResNotifySomeOneChangeOnlineStatus* ResNotifySomeOneChangeOnlineStatus::New() const {
  return new ResNotifySomeOneChangeOnlineStatus;
}

void ResNotifySomeOneChangeOnlineStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    if (has_controller()) {
      if (controller_ != NULL) controller_->::ProtoNet::SdkController::Clear();
    }
    if (has_posbrife()) {
      if (posbrife_ != NULL) posbrife_->::ProtoNet::PosBrife::Clear();
    }
    online_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneChangeOnlineStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controller;
        break;
      }

      // required .ProtoNet.SdkController controller = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_posBrife;
        break;
      }

      // required .ProtoNet.PosBrife posBrife = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_posBrife:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_posbrife()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_online;
        break;
      }

      // required bool online = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));
          set_has_online();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneChangeOnlineStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->roomid(), output);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->controller(), output);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->posbrife(), output);
  }

  // required bool online = 4;
  if (has_online()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->online(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneChangeOnlineStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string roomId = 1;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->controller(), target);
  }

  // required .ProtoNet.PosBrife posBrife = 3;
  if (has_posbrife()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->posbrife(), target);
  }

  // required bool online = 4;
  if (has_online()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->online(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneChangeOnlineStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string roomId = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // required .ProtoNet.SdkController controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controller());
    }

    // required .ProtoNet.PosBrife posBrife = 3;
    if (has_posbrife()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->posbrife());
    }

    // required bool online = 4;
    if (has_online()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneChangeOnlineStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneChangeOnlineStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneChangeOnlineStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneChangeOnlineStatus::MergeFrom(const ResNotifySomeOneChangeOnlineStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_controller()) {
      mutable_controller()->::ProtoNet::SdkController::MergeFrom(from.controller());
    }
    if (from.has_posbrife()) {
      mutable_posbrife()->::ProtoNet::PosBrife::MergeFrom(from.posbrife());
    }
    if (from.has_online()) {
      set_online(from.online());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneChangeOnlineStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneChangeOnlineStatus::CopyFrom(const ResNotifySomeOneChangeOnlineStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneChangeOnlineStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_controller()) {
    if (!this->controller().IsInitialized()) return false;
  }
  if (has_posbrife()) {
    if (!this->posbrife().IsInitialized()) return false;
  }
  return true;
}

void ResNotifySomeOneChangeOnlineStatus::Swap(ResNotifySomeOneChangeOnlineStatus* other) {
  if (other != this) {
    std::swap(roomid_, other->roomid_);
    std::swap(controller_, other->controller_);
    std::swap(posbrife_, other->posbrife_);
    std::swap(online_, other->online_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneChangeOnlineStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneChangeOnlineStatus_descriptor_;
  metadata.reflection = ResNotifySomeOneChangeOnlineStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ResNotifyBigCalculatePanel::ResNotifyBigCalculatePanel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyBigCalculatePanel::InitAsDefaultInstance() {
}

ResNotifyBigCalculatePanel::ResNotifyBigCalculatePanel(const ResNotifyBigCalculatePanel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyBigCalculatePanel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyBigCalculatePanel::~ResNotifyBigCalculatePanel() {
  SharedDtor();
}

void ResNotifyBigCalculatePanel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResNotifyBigCalculatePanel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyBigCalculatePanel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyBigCalculatePanel_descriptor_;
}

const ResNotifyBigCalculatePanel& ResNotifyBigCalculatePanel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifyBigCalculatePanel* ResNotifyBigCalculatePanel::default_instance_ = NULL;

ResNotifyBigCalculatePanel* ResNotifyBigCalculatePanel::New() const {
  return new ResNotifyBigCalculatePanel;
}

void ResNotifyBigCalculatePanel::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyBigCalculatePanel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ResNotifyBigCalculatePanel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyBigCalculatePanel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyBigCalculatePanel::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyBigCalculatePanel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyBigCalculatePanel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyBigCalculatePanel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyBigCalculatePanel::MergeFrom(const ResNotifyBigCalculatePanel& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyBigCalculatePanel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyBigCalculatePanel::CopyFrom(const ResNotifyBigCalculatePanel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyBigCalculatePanel::IsInitialized() const {

  return true;
}

void ResNotifyBigCalculatePanel::Swap(ResNotifyBigCalculatePanel* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyBigCalculatePanel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyBigCalculatePanel_descriptor_;
  metadata.reflection = ResNotifyBigCalculatePanel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqCorrectTimer::ReqCorrectTimer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqCorrectTimer::InitAsDefaultInstance() {
}

ReqCorrectTimer::ReqCorrectTimer(const ReqCorrectTimer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqCorrectTimer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqCorrectTimer::~ReqCorrectTimer() {
  SharedDtor();
}

void ReqCorrectTimer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqCorrectTimer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqCorrectTimer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqCorrectTimer_descriptor_;
}

const ReqCorrectTimer& ReqCorrectTimer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqCorrectTimer* ReqCorrectTimer::default_instance_ = NULL;

ReqCorrectTimer* ReqCorrectTimer::New() const {
  return new ReqCorrectTimer;
}

void ReqCorrectTimer::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqCorrectTimer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqCorrectTimer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqCorrectTimer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqCorrectTimer::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqCorrectTimer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqCorrectTimer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqCorrectTimer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqCorrectTimer::MergeFrom(const ReqCorrectTimer& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqCorrectTimer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCorrectTimer::CopyFrom(const ReqCorrectTimer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCorrectTimer::IsInitialized() const {

  return true;
}

void ReqCorrectTimer::Swap(ReqCorrectTimer* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqCorrectTimer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqCorrectTimer_descriptor_;
  metadata.reflection = ReqCorrectTimer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResCorrectTimer::kResultFieldNumber;
const int ResCorrectTimer::kLeftDissolutionTimerFieldNumber;
#endif  // !_MSC_VER

ResCorrectTimer::ResCorrectTimer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResCorrectTimer::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResCorrectTimer::ResCorrectTimer(const ResCorrectTimer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResCorrectTimer::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  leftdissolutiontimer_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResCorrectTimer::~ResCorrectTimer() {
  SharedDtor();
}

void ResCorrectTimer::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResCorrectTimer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResCorrectTimer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResCorrectTimer_descriptor_;
}

const ResCorrectTimer& ResCorrectTimer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResCorrectTimer* ResCorrectTimer::default_instance_ = NULL;

ResCorrectTimer* ResCorrectTimer::New() const {
  return new ResCorrectTimer;
}

void ResCorrectTimer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    leftdissolutiontimer_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResCorrectTimer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leftDissolutionTimer;
        break;
      }

      // optional int64 leftDissolutionTimer = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leftDissolutionTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leftdissolutiontimer_)));
          set_has_leftdissolutiontimer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResCorrectTimer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional int64 leftDissolutionTimer = 2;
  if (has_leftdissolutiontimer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->leftdissolutiontimer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResCorrectTimer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional int64 leftDissolutionTimer = 2;
  if (has_leftdissolutiontimer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->leftdissolutiontimer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResCorrectTimer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional int64 leftDissolutionTimer = 2;
    if (has_leftdissolutiontimer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leftdissolutiontimer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResCorrectTimer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResCorrectTimer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResCorrectTimer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResCorrectTimer::MergeFrom(const ResCorrectTimer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_leftdissolutiontimer()) {
      set_leftdissolutiontimer(from.leftdissolutiontimer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResCorrectTimer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResCorrectTimer::CopyFrom(const ResCorrectTimer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResCorrectTimer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResCorrectTimer::Swap(ResCorrectTimer* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(leftdissolutiontimer_, other->leftdissolutiontimer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResCorrectTimer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResCorrectTimer_descriptor_;
  metadata.reflection = ResCorrectTimer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqQuickChangeRoom::kPipeiParamFieldNumber;
#endif  // !_MSC_VER

ReqQuickChangeRoom::ReqQuickChangeRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqQuickChangeRoom::InitAsDefaultInstance() {
}

ReqQuickChangeRoom::ReqQuickChangeRoom(const ReqQuickChangeRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqQuickChangeRoom::SharedCtor() {
  _cached_size_ = 0;
  pipeiparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqQuickChangeRoom::~ReqQuickChangeRoom() {
  SharedDtor();
}

void ReqQuickChangeRoom::SharedDtor() {
  if (pipeiparam_ != &::google::protobuf::internal::kEmptyString) {
    delete pipeiparam_;
  }
  if (this != default_instance_) {
  }
}

void ReqQuickChangeRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqQuickChangeRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqQuickChangeRoom_descriptor_;
}

const ReqQuickChangeRoom& ReqQuickChangeRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqQuickChangeRoom* ReqQuickChangeRoom::default_instance_ = NULL;

ReqQuickChangeRoom* ReqQuickChangeRoom::New() const {
  return new ReqQuickChangeRoom;
}

void ReqQuickChangeRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_pipeiparam()) {
      if (pipeiparam_ != &::google::protobuf::internal::kEmptyString) {
        pipeiparam_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqQuickChangeRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pipeiParam = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pipeiparam()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pipeiparam().data(), this->pipeiparam().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqQuickChangeRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string pipeiParam = 1;
  if (has_pipeiparam()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pipeiparam().data(), this->pipeiparam().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->pipeiparam(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqQuickChangeRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string pipeiParam = 1;
  if (has_pipeiparam()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pipeiparam().data(), this->pipeiparam().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pipeiparam(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqQuickChangeRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string pipeiParam = 1;
    if (has_pipeiparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pipeiparam());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqQuickChangeRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqQuickChangeRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqQuickChangeRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqQuickChangeRoom::MergeFrom(const ReqQuickChangeRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pipeiparam()) {
      set_pipeiparam(from.pipeiparam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqQuickChangeRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqQuickChangeRoom::CopyFrom(const ReqQuickChangeRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqQuickChangeRoom::IsInitialized() const {

  return true;
}

void ReqQuickChangeRoom::Swap(ReqQuickChangeRoom* other) {
  if (other != this) {
    std::swap(pipeiparam_, other->pipeiparam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqQuickChangeRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqQuickChangeRoom_descriptor_;
  metadata.reflection = ReqQuickChangeRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResQuickChangeRoom::kResultFieldNumber;
const int ResQuickChangeRoom::kOperateFieldNumber;
const int ResQuickChangeRoom::kRoomTypeFieldNumber;
const int ResQuickChangeRoom::kBestServerInfoFieldNumber;
const int ResQuickChangeRoom::kRoomIdFieldNumber;
const int ResQuickChangeRoom::kLogicDetailsFieldNumber;
const int ResQuickChangeRoom::kGameIdFieldNumber;
const int ResQuickChangeRoom::kTimesTypeFieldNumber;
const int ResQuickChangeRoom::kChangeServerFieldNumber;
#endif  // !_MSC_VER

ResQuickChangeRoom::ResQuickChangeRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResQuickChangeRoom::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
  bestserverinfo_ = const_cast< ::ProtoNet::ServerInfoIpsSafeDetail*>(&::ProtoNet::ServerInfoIpsSafeDetail::default_instance());
}

ResQuickChangeRoom::ResQuickChangeRoom(const ResQuickChangeRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResQuickChangeRoom::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  operate_ = 0;
  roomtype_ = 0;
  bestserverinfo_ = NULL;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gameid_ = 0;
  timestype_ = 0;
  changeserver_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResQuickChangeRoom::~ResQuickChangeRoom() {
  SharedDtor();
}

void ResQuickChangeRoom::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete result_;
    delete bestserverinfo_;
  }
}

void ResQuickChangeRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResQuickChangeRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResQuickChangeRoom_descriptor_;
}

const ResQuickChangeRoom& ResQuickChangeRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResQuickChangeRoom* ResQuickChangeRoom::default_instance_ = NULL;

ResQuickChangeRoom* ResQuickChangeRoom::New() const {
  return new ResQuickChangeRoom;
}

void ResQuickChangeRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    operate_ = 0;
    roomtype_ = 0;
    if (has_bestserverinfo()) {
      if (bestserverinfo_ != NULL) bestserverinfo_->::ProtoNet::ServerInfoIpsSafeDetail::Clear();
    }
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    gameid_ = 0;
    timestype_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    changeserver_ = 0;
  }
  logicdetails_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResQuickChangeRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_operate;
        break;
      }

      // optional int32 operate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_operate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_)));
          set_has_operate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_roomType;
        break;
      }

      // optional int32 roomType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roomType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomtype_)));
          set_has_roomtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bestServerInfo;
        break;
      }

      // optional .ProtoNet.ServerInfoIpsSafeDetail bestServerInfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bestServerInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bestserverinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_roomId;
        break;
      }

      // optional string roomId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_logicDetails;
        break;
      }

      // repeated .ProtoNet.ServerInfoIpsSafeDetail logicDetails = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_logicDetails:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_logicdetails()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_logicDetails;
        if (input->ExpectTag(56)) goto parse_gameId;
        break;
      }

      // optional int32 gameId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gameId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gameid_)));
          set_has_gameid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_timesType;
        break;
      }

      // optional int32 timesType = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timesType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestype_)));
          set_has_timestype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_changeServer;
        break;
      }

      // required int32 changeServer = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_changeServer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &changeserver_)));
          set_has_changeserver();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResQuickChangeRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional int32 operate = 2;
  if (has_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->operate(), output);
  }

  // optional int32 roomType = 3;
  if (has_roomtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->roomtype(), output);
  }

  // optional .ProtoNet.ServerInfoIpsSafeDetail bestServerInfo = 4;
  if (has_bestserverinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bestserverinfo(), output);
  }

  // optional string roomId = 5;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->roomid(), output);
  }

  // repeated .ProtoNet.ServerInfoIpsSafeDetail logicDetails = 6;
  for (int i = 0; i < this->logicdetails_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->logicdetails(i), output);
  }

  // optional int32 gameId = 7;
  if (has_gameid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gameid(), output);
  }

  // optional int32 timesType = 8;
  if (has_timestype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->timestype(), output);
  }

  // required int32 changeServer = 9;
  if (has_changeserver()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->changeserver(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResQuickChangeRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional int32 operate = 2;
  if (has_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->operate(), target);
  }

  // optional int32 roomType = 3;
  if (has_roomtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->roomtype(), target);
  }

  // optional .ProtoNet.ServerInfoIpsSafeDetail bestServerInfo = 4;
  if (has_bestserverinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->bestserverinfo(), target);
  }

  // optional string roomId = 5;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->roomid(), target);
  }

  // repeated .ProtoNet.ServerInfoIpsSafeDetail logicDetails = 6;
  for (int i = 0; i < this->logicdetails_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->logicdetails(i), target);
  }

  // optional int32 gameId = 7;
  if (has_gameid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gameid(), target);
  }

  // optional int32 timesType = 8;
  if (has_timestype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->timestype(), target);
  }

  // required int32 changeServer = 9;
  if (has_changeserver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->changeserver(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResQuickChangeRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional int32 operate = 2;
    if (has_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate());
    }

    // optional int32 roomType = 3;
    if (has_roomtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomtype());
    }

    // optional .ProtoNet.ServerInfoIpsSafeDetail bestServerInfo = 4;
    if (has_bestserverinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bestserverinfo());
    }

    // optional string roomId = 5;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // optional int32 gameId = 7;
    if (has_gameid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gameid());
    }

    // optional int32 timesType = 8;
    if (has_timestype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 changeServer = 9;
    if (has_changeserver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->changeserver());
    }

  }
  // repeated .ProtoNet.ServerInfoIpsSafeDetail logicDetails = 6;
  total_size += 1 * this->logicdetails_size();
  for (int i = 0; i < this->logicdetails_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->logicdetails(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResQuickChangeRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResQuickChangeRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResQuickChangeRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResQuickChangeRoom::MergeFrom(const ResQuickChangeRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  logicdetails_.MergeFrom(from.logicdetails_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_operate()) {
      set_operate(from.operate());
    }
    if (from.has_roomtype()) {
      set_roomtype(from.roomtype());
    }
    if (from.has_bestserverinfo()) {
      mutable_bestserverinfo()->::ProtoNet::ServerInfoIpsSafeDetail::MergeFrom(from.bestserverinfo());
    }
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_gameid()) {
      set_gameid(from.gameid());
    }
    if (from.has_timestype()) {
      set_timestype(from.timestype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_changeserver()) {
      set_changeserver(from.changeserver());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResQuickChangeRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResQuickChangeRoom::CopyFrom(const ResQuickChangeRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResQuickChangeRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000101) != 0x00000101) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResQuickChangeRoom::Swap(ResQuickChangeRoom* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(operate_, other->operate_);
    std::swap(roomtype_, other->roomtype_);
    std::swap(bestserverinfo_, other->bestserverinfo_);
    std::swap(roomid_, other->roomid_);
    logicdetails_.Swap(&other->logicdetails_);
    std::swap(gameid_, other->gameid_);
    std::swap(timestype_, other->timestype_);
    std::swap(changeserver_, other->changeserver_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResQuickChangeRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResQuickChangeRoom_descriptor_;
  metadata.reflection = ResQuickChangeRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneChangeRobot::kIsRobotFieldNumber;
const int ResNotifySomeOneChangeRobot::kUniqueIdFieldNumber;
const int ResNotifySomeOneChangeRobot::kPosFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneChangeRobot::ResNotifySomeOneChangeRobot()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneChangeRobot::InitAsDefaultInstance() {
}

ResNotifySomeOneChangeRobot::ResNotifySomeOneChangeRobot(const ResNotifySomeOneChangeRobot& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneChangeRobot::SharedCtor() {
  _cached_size_ = 0;
  isrobot_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneChangeRobot::~ResNotifySomeOneChangeRobot() {
  SharedDtor();
}

void ResNotifySomeOneChangeRobot::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void ResNotifySomeOneChangeRobot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneChangeRobot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneChangeRobot_descriptor_;
}

const ResNotifySomeOneChangeRobot& ResNotifySomeOneChangeRobot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneChangeRobot* ResNotifySomeOneChangeRobot::default_instance_ = NULL;

ResNotifySomeOneChangeRobot* ResNotifySomeOneChangeRobot::New() const {
  return new ResNotifySomeOneChangeRobot;
}

void ResNotifySomeOneChangeRobot::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    isrobot_ = 0;
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneChangeRobot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 isRobot = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isrobot_)));
          set_has_isrobot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_uniqueId;
        break;
      }

      // required string uniqueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uniqueId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        break;
      }

      // required int32 pos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneChangeRobot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 isRobot = 1;
  if (has_isrobot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->isrobot(), output);
  }

  // required string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->uniqueid(), output);
  }

  // required int32 pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneChangeRobot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 isRobot = 1;
  if (has_isrobot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->isrobot(), target);
  }

  // required string uniqueId = 2;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uniqueid(), target);
  }

  // required int32 pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneChangeRobot::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 isRobot = 1;
    if (has_isrobot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isrobot());
    }

    // required string uniqueId = 2;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required int32 pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneChangeRobot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneChangeRobot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneChangeRobot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneChangeRobot::MergeFrom(const ResNotifySomeOneChangeRobot& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isrobot()) {
      set_isrobot(from.isrobot());
    }
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneChangeRobot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneChangeRobot::CopyFrom(const ResNotifySomeOneChangeRobot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneChangeRobot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ResNotifySomeOneChangeRobot::Swap(ResNotifySomeOneChangeRobot* other) {
  if (other != this) {
    std::swap(isrobot_, other->isrobot_);
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneChangeRobot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneChangeRobot_descriptor_;
  metadata.reflection = ResNotifySomeOneChangeRobot_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyChangeToOldRoom::kBestServerInfoFieldNumber;
const int ResNotifyChangeToOldRoom::kRoomIdFieldNumber;
const int ResNotifyChangeToOldRoom::kGameIdFieldNumber;
const int ResNotifyChangeToOldRoom::kTimesTypeFieldNumber;
const int ResNotifyChangeToOldRoom::kRoomTypeFieldNumber;
#endif  // !_MSC_VER

ResNotifyChangeToOldRoom::ResNotifyChangeToOldRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyChangeToOldRoom::InitAsDefaultInstance() {
  bestserverinfo_ = const_cast< ::ProtoNet::ServerInfoIpsSafeDetail*>(&::ProtoNet::ServerInfoIpsSafeDetail::default_instance());
}

ResNotifyChangeToOldRoom::ResNotifyChangeToOldRoom(const ResNotifyChangeToOldRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyChangeToOldRoom::SharedCtor() {
  _cached_size_ = 0;
  bestserverinfo_ = NULL;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gameid_ = 0;
  timestype_ = 0;
  roomtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyChangeToOldRoom::~ResNotifyChangeToOldRoom() {
  SharedDtor();
}

void ResNotifyChangeToOldRoom::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete bestserverinfo_;
  }
}

void ResNotifyChangeToOldRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyChangeToOldRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyChangeToOldRoom_descriptor_;
}

const ResNotifyChangeToOldRoom& ResNotifyChangeToOldRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifyChangeToOldRoom* ResNotifyChangeToOldRoom::default_instance_ = NULL;

ResNotifyChangeToOldRoom* ResNotifyChangeToOldRoom::New() const {
  return new ResNotifyChangeToOldRoom;
}

void ResNotifyChangeToOldRoom::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bestserverinfo()) {
      if (bestserverinfo_ != NULL) bestserverinfo_->::ProtoNet::ServerInfoIpsSafeDetail::Clear();
    }
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
    gameid_ = 0;
    timestype_ = 0;
    roomtype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyChangeToOldRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoNet.ServerInfoIpsSafeDetail bestServerInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bestserverinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_roomId;
        break;
      }

      // optional string roomId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gameId;
        break;
      }

      // optional int32 gameId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gameId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gameid_)));
          set_has_gameid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_timesType;
        break;
      }

      // optional int32 timesType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timesType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestype_)));
          set_has_timestype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_roomType;
        break;
      }

      // optional int32 roomType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roomType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomtype_)));
          set_has_roomtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyChangeToOldRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoNet.ServerInfoIpsSafeDetail bestServerInfo = 1;
  if (has_bestserverinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bestserverinfo(), output);
  }

  // optional string roomId = 2;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->roomid(), output);
  }

  // optional int32 gameId = 3;
  if (has_gameid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gameid(), output);
  }

  // optional int32 timesType = 4;
  if (has_timestype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timestype(), output);
  }

  // optional int32 roomType = 5;
  if (has_roomtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->roomtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyChangeToOldRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoNet.ServerInfoIpsSafeDetail bestServerInfo = 1;
  if (has_bestserverinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bestserverinfo(), target);
  }

  // optional string roomId = 2;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomid(), target);
  }

  // optional int32 gameId = 3;
  if (has_gameid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gameid(), target);
  }

  // optional int32 timesType = 4;
  if (has_timestype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timestype(), target);
  }

  // optional int32 roomType = 5;
  if (has_roomtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->roomtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyChangeToOldRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoNet.ServerInfoIpsSafeDetail bestServerInfo = 1;
    if (has_bestserverinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bestserverinfo());
    }

    // optional string roomId = 2;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

    // optional int32 gameId = 3;
    if (has_gameid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gameid());
    }

    // optional int32 timesType = 4;
    if (has_timestype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestype());
    }

    // optional int32 roomType = 5;
    if (has_roomtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyChangeToOldRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyChangeToOldRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyChangeToOldRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyChangeToOldRoom::MergeFrom(const ResNotifyChangeToOldRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bestserverinfo()) {
      mutable_bestserverinfo()->::ProtoNet::ServerInfoIpsSafeDetail::MergeFrom(from.bestserverinfo());
    }
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
    if (from.has_gameid()) {
      set_gameid(from.gameid());
    }
    if (from.has_timestype()) {
      set_timestype(from.timestype());
    }
    if (from.has_roomtype()) {
      set_roomtype(from.roomtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyChangeToOldRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyChangeToOldRoom::CopyFrom(const ResNotifyChangeToOldRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyChangeToOldRoom::IsInitialized() const {

  return true;
}

void ResNotifyChangeToOldRoom::Swap(ResNotifyChangeToOldRoom* other) {
  if (other != this) {
    std::swap(bestserverinfo_, other->bestserverinfo_);
    std::swap(roomid_, other->roomid_);
    std::swap(gameid_, other->gameid_);
    std::swap(timestype_, other->timestype_);
    std::swap(roomtype_, other->roomtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyChangeToOldRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyChangeToOldRoom_descriptor_;
  metadata.reflection = ResNotifyChangeToOldRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqSitDown::kPosFieldNumber;
#endif  // !_MSC_VER

ReqSitDown::ReqSitDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqSitDown::InitAsDefaultInstance() {
}

ReqSitDown::ReqSitDown(const ReqSitDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqSitDown::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqSitDown::~ReqSitDown() {
  SharedDtor();
}

void ReqSitDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqSitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSitDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqSitDown_descriptor_;
}

const ReqSitDown& ReqSitDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqSitDown* ReqSitDown::default_instance_ = NULL;

ReqSitDown* ReqSitDown::New() const {
  return new ReqSitDown;
}

void ReqSitDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqSitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqSitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqSitDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqSitDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSitDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqSitDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqSitDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqSitDown::MergeFrom(const ReqSitDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqSitDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSitDown::CopyFrom(const ReqSitDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSitDown::IsInitialized() const {

  return true;
}

void ReqSitDown::Swap(ReqSitDown* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqSitDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqSitDown_descriptor_;
  metadata.reflection = ReqSitDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResSitDown::kResultFieldNumber;
#endif  // !_MSC_VER

ResSitDown::ResSitDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResSitDown::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResSitDown::ResSitDown(const ResSitDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResSitDown::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResSitDown::~ResSitDown() {
  SharedDtor();
}

void ResSitDown::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResSitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResSitDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResSitDown_descriptor_;
}

const ResSitDown& ResSitDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResSitDown* ResSitDown::default_instance_ = NULL;

ResSitDown* ResSitDown::New() const {
  return new ResSitDown;
}

void ResSitDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResSitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResSitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResSitDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResSitDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResSitDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResSitDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResSitDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResSitDown::MergeFrom(const ResSitDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResSitDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResSitDown::CopyFrom(const ResSitDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResSitDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResSitDown::Swap(ResSitDown* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResSitDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResSitDown_descriptor_;
  metadata.reflection = ResSitDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneSitDown::kPosFieldNumber;
const int ResNotifySomeOneSitDown::kControllerFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneSitDown::ResNotifySomeOneSitDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneSitDown::InitAsDefaultInstance() {
  controller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
}

ResNotifySomeOneSitDown::ResNotifySomeOneSitDown(const ResNotifySomeOneSitDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneSitDown::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  controller_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneSitDown::~ResNotifySomeOneSitDown() {
  SharedDtor();
}

void ResNotifySomeOneSitDown::SharedDtor() {
  if (this != default_instance_) {
    delete controller_;
  }
}

void ResNotifySomeOneSitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneSitDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneSitDown_descriptor_;
}

const ResNotifySomeOneSitDown& ResNotifySomeOneSitDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneSitDown* ResNotifySomeOneSitDown::default_instance_ = NULL;

ResNotifySomeOneSitDown* ResNotifySomeOneSitDown::New() const {
  return new ResNotifySomeOneSitDown;
}

void ResNotifySomeOneSitDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
    if (has_controller()) {
      if (controller_ != NULL) controller_->::ProtoNet::SdkController::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneSitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controller;
        break;
      }

      // required .ProtoNet.SdkController controller = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneSitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->controller(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneSitDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->controller(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneSitDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required .ProtoNet.SdkController controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controller());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneSitDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneSitDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneSitDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneSitDown::MergeFrom(const ResNotifySomeOneSitDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_controller()) {
      mutable_controller()->::ProtoNet::SdkController::MergeFrom(from.controller());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneSitDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneSitDown::CopyFrom(const ResNotifySomeOneSitDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneSitDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_controller()) {
    if (!this->controller().IsInitialized()) return false;
  }
  return true;
}

void ResNotifySomeOneSitDown::Swap(ResNotifySomeOneSitDown* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(controller_, other->controller_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneSitDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneSitDown_descriptor_;
  metadata.reflection = ResNotifySomeOneSitDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqStandUp::ReqStandUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqStandUp::InitAsDefaultInstance() {
}

ReqStandUp::ReqStandUp(const ReqStandUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqStandUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqStandUp::~ReqStandUp() {
  SharedDtor();
}

void ReqStandUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqStandUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqStandUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqStandUp_descriptor_;
}

const ReqStandUp& ReqStandUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqStandUp* ReqStandUp::default_instance_ = NULL;

ReqStandUp* ReqStandUp::New() const {
  return new ReqStandUp;
}

void ReqStandUp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqStandUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqStandUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqStandUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqStandUp::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqStandUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqStandUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqStandUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqStandUp::MergeFrom(const ReqStandUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqStandUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqStandUp::CopyFrom(const ReqStandUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqStandUp::IsInitialized() const {

  return true;
}

void ReqStandUp::Swap(ReqStandUp* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqStandUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqStandUp_descriptor_;
  metadata.reflection = ReqStandUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResStandUp::kResultFieldNumber;
#endif  // !_MSC_VER

ResStandUp::ResStandUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResStandUp::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResStandUp::ResStandUp(const ResStandUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResStandUp::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResStandUp::~ResStandUp() {
  SharedDtor();
}

void ResStandUp::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResStandUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResStandUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResStandUp_descriptor_;
}

const ResStandUp& ResStandUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResStandUp* ResStandUp::default_instance_ = NULL;

ResStandUp* ResStandUp::New() const {
  return new ResStandUp;
}

void ResStandUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResStandUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResStandUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResStandUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResStandUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResStandUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResStandUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResStandUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResStandUp::MergeFrom(const ResStandUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResStandUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResStandUp::CopyFrom(const ResStandUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResStandUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResStandUp::Swap(ResStandUp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResStandUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResStandUp_descriptor_;
  metadata.reflection = ResStandUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneStandUp::kPosFieldNumber;
const int ResNotifySomeOneStandUp::kControllerFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneStandUp::ResNotifySomeOneStandUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneStandUp::InitAsDefaultInstance() {
  controller_ = const_cast< ::ProtoNet::SdkController*>(&::ProtoNet::SdkController::default_instance());
}

ResNotifySomeOneStandUp::ResNotifySomeOneStandUp(const ResNotifySomeOneStandUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneStandUp::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  controller_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneStandUp::~ResNotifySomeOneStandUp() {
  SharedDtor();
}

void ResNotifySomeOneStandUp::SharedDtor() {
  if (this != default_instance_) {
    delete controller_;
  }
}

void ResNotifySomeOneStandUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneStandUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneStandUp_descriptor_;
}

const ResNotifySomeOneStandUp& ResNotifySomeOneStandUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneStandUp* ResNotifySomeOneStandUp::default_instance_ = NULL;

ResNotifySomeOneStandUp* ResNotifySomeOneStandUp::New() const {
  return new ResNotifySomeOneStandUp;
}

void ResNotifySomeOneStandUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
    if (has_controller()) {
      if (controller_ != NULL) controller_->::ProtoNet::SdkController::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneStandUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_controller;
        break;
      }

      // required .ProtoNet.SdkController controller = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controller()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneStandUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->controller(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneStandUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // required .ProtoNet.SdkController controller = 2;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->controller(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneStandUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required .ProtoNet.SdkController controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controller());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneStandUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneStandUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneStandUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneStandUp::MergeFrom(const ResNotifySomeOneStandUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_controller()) {
      mutable_controller()->::ProtoNet::SdkController::MergeFrom(from.controller());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneStandUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneStandUp::CopyFrom(const ResNotifySomeOneStandUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneStandUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_controller()) {
    if (!this->controller().IsInitialized()) return false;
  }
  return true;
}

void ResNotifySomeOneStandUp::Swap(ResNotifySomeOneStandUp* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(controller_, other->controller_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneStandUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneStandUp_descriptor_;
  metadata.reflection = ResNotifySomeOneStandUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifySomeOneEnterCharge::kUniqueIdsFieldNumber;
const int ResNotifySomeOneEnterCharge::kRechargeTimeFieldNumber;
#endif  // !_MSC_VER

ResNotifySomeOneEnterCharge::ResNotifySomeOneEnterCharge()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifySomeOneEnterCharge::InitAsDefaultInstance() {
}

ResNotifySomeOneEnterCharge::ResNotifySomeOneEnterCharge(const ResNotifySomeOneEnterCharge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifySomeOneEnterCharge::SharedCtor() {
  _cached_size_ = 0;
  uniqueids_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rechargetime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifySomeOneEnterCharge::~ResNotifySomeOneEnterCharge() {
  SharedDtor();
}

void ResNotifySomeOneEnterCharge::SharedDtor() {
  if (uniqueids_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueids_;
  }
  if (this != default_instance_) {
  }
}

void ResNotifySomeOneEnterCharge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifySomeOneEnterCharge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifySomeOneEnterCharge_descriptor_;
}

const ResNotifySomeOneEnterCharge& ResNotifySomeOneEnterCharge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifySomeOneEnterCharge* ResNotifySomeOneEnterCharge::default_instance_ = NULL;

ResNotifySomeOneEnterCharge* ResNotifySomeOneEnterCharge::New() const {
  return new ResNotifySomeOneEnterCharge;
}

void ResNotifySomeOneEnterCharge::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uniqueids()) {
      if (uniqueids_ != &::google::protobuf::internal::kEmptyString) {
        uniqueids_->clear();
      }
    }
    rechargetime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifySomeOneEnterCharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueIds = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueids().data(), this->uniqueids().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rechargeTime;
        break;
      }

      // required int32 rechargeTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rechargeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rechargetime_)));
          set_has_rechargetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifySomeOneEnterCharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string uniqueIds = 1;
  if (has_uniqueids()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueids().data(), this->uniqueids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uniqueids(), output);
  }

  // required int32 rechargeTime = 2;
  if (has_rechargetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rechargetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifySomeOneEnterCharge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string uniqueIds = 1;
  if (has_uniqueids()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueids().data(), this->uniqueids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueids(), target);
  }

  // required int32 rechargeTime = 2;
  if (has_rechargetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rechargetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifySomeOneEnterCharge::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueIds = 1;
    if (has_uniqueids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueids());
    }

    // required int32 rechargeTime = 2;
    if (has_rechargetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rechargetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifySomeOneEnterCharge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifySomeOneEnterCharge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifySomeOneEnterCharge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifySomeOneEnterCharge::MergeFrom(const ResNotifySomeOneEnterCharge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueids()) {
      set_uniqueids(from.uniqueids());
    }
    if (from.has_rechargetime()) {
      set_rechargetime(from.rechargetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifySomeOneEnterCharge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifySomeOneEnterCharge::CopyFrom(const ResNotifySomeOneEnterCharge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifySomeOneEnterCharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ResNotifySomeOneEnterCharge::Swap(ResNotifySomeOneEnterCharge* other) {
  if (other != this) {
    std::swap(uniqueids_, other->uniqueids_);
    std::swap(rechargetime_, other->rechargetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifySomeOneEnterCharge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifySomeOneEnterCharge_descriptor_;
  metadata.reflection = ResNotifySomeOneEnterCharge_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyAccountsChange::kUniqueIdFieldNumber;
const int ResNotifyAccountsChange::kCountsFieldNumber;
const int ResNotifyAccountsChange::kExtendStrFieldNumber;
const int ResNotifyAccountsChange::kChargeFieldNumber;
#endif  // !_MSC_VER

ResNotifyAccountsChange::ResNotifyAccountsChange()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyAccountsChange::InitAsDefaultInstance() {
}

ResNotifyAccountsChange::ResNotifyAccountsChange(const ResNotifyAccountsChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyAccountsChange::SharedCtor() {
  _cached_size_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  extendstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  charge_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyAccountsChange::~ResNotifyAccountsChange() {
  SharedDtor();
}

void ResNotifyAccountsChange::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (extendstr_ != &::google::protobuf::internal::kEmptyString) {
    delete extendstr_;
  }
  if (this != default_instance_) {
  }
}

void ResNotifyAccountsChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyAccountsChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyAccountsChange_descriptor_;
}

const ResNotifyAccountsChange& ResNotifyAccountsChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifyAccountsChange* ResNotifyAccountsChange::default_instance_ = NULL;

ResNotifyAccountsChange* ResNotifyAccountsChange::New() const {
  return new ResNotifyAccountsChange;
}

void ResNotifyAccountsChange::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
    if (has_extendstr()) {
      if (extendstr_ != &::google::protobuf::internal::kEmptyString) {
        extendstr_->clear();
      }
    }
    charge_ = 0;
  }
  counts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyAccountsChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_counts;
        break;
      }

      // repeated .ProtoNet.PlayerAccount counts = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_counts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_counts()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_counts;
        if (input->ExpectTag(26)) goto parse_extendStr;
        break;
      }

      // optional string extendStr = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extendStr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extendstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->extendstr().data(), this->extendstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_charge;
        break;
      }

      // optional int32 charge = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charge_)));
          set_has_charge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyAccountsChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uniqueid(), output);
  }

  // repeated .ProtoNet.PlayerAccount counts = 2;
  for (int i = 0; i < this->counts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->counts(i), output);
  }

  // optional string extendStr = 3;
  if (has_extendstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extendstr().data(), this->extendstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->extendstr(), output);
  }

  // optional int32 charge = 4;
  if (has_charge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->charge(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyAccountsChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueid(), target);
  }

  // repeated .ProtoNet.PlayerAccount counts = 2;
  for (int i = 0; i < this->counts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->counts(i), target);
  }

  // optional string extendStr = 3;
  if (has_extendstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extendstr().data(), this->extendstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->extendstr(), target);
  }

  // optional int32 charge = 4;
  if (has_charge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->charge(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyAccountsChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueId = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // optional string extendStr = 3;
    if (has_extendstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extendstr());
    }

    // optional int32 charge = 4;
    if (has_charge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->charge());
    }

  }
  // repeated .ProtoNet.PlayerAccount counts = 2;
  total_size += 1 * this->counts_size();
  for (int i = 0; i < this->counts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->counts(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyAccountsChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyAccountsChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyAccountsChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyAccountsChange::MergeFrom(const ResNotifyAccountsChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  counts_.MergeFrom(from.counts_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_extendstr()) {
      set_extendstr(from.extendstr());
    }
    if (from.has_charge()) {
      set_charge(from.charge());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyAccountsChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyAccountsChange::CopyFrom(const ResNotifyAccountsChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyAccountsChange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResNotifyAccountsChange::Swap(ResNotifyAccountsChange* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    counts_.Swap(&other->counts_);
    std::swap(extendstr_, other->extendstr_);
    std::swap(charge_, other->charge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyAccountsChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyAccountsChange_descriptor_;
  metadata.reflection = ResNotifyAccountsChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyChargeOver::kUniqueIdFieldNumber;
#endif  // !_MSC_VER

ResNotifyChargeOver::ResNotifyChargeOver()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyChargeOver::InitAsDefaultInstance() {
}

ResNotifyChargeOver::ResNotifyChargeOver(const ResNotifyChargeOver& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyChargeOver::SharedCtor() {
  _cached_size_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyChargeOver::~ResNotifyChargeOver() {
  SharedDtor();
}

void ResNotifyChargeOver::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
    delete uniqueid_;
  }
  if (this != default_instance_) {
  }
}

void ResNotifyChargeOver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyChargeOver::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyChargeOver_descriptor_;
}

const ResNotifyChargeOver& ResNotifyChargeOver::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifyChargeOver* ResNotifyChargeOver::default_instance_ = NULL;

ResNotifyChargeOver* ResNotifyChargeOver::New() const {
  return new ResNotifyChargeOver;
}

void ResNotifyChargeOver::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::kEmptyString) {
        uniqueid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyChargeOver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyChargeOver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uniqueid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyChargeOver::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string uniqueId = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyChargeOver::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueId = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyChargeOver::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyChargeOver* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyChargeOver*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyChargeOver::MergeFrom(const ResNotifyChargeOver& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyChargeOver::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyChargeOver::CopyFrom(const ResNotifyChargeOver& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyChargeOver::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResNotifyChargeOver::Swap(ResNotifyChargeOver* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyChargeOver::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyChargeOver_descriptor_;
  metadata.reflection = ResNotifyChargeOver_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqWatherList::kLengthFieldNumber;
const int ReqWatherList::kPaixuFieldNumber;
#endif  // !_MSC_VER

ReqWatherList::ReqWatherList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqWatherList::InitAsDefaultInstance() {
}

ReqWatherList::ReqWatherList(const ReqWatherList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqWatherList::SharedCtor() {
  _cached_size_ = 0;
  length_ = 0;
  paixu_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqWatherList::~ReqWatherList() {
  SharedDtor();
}

void ReqWatherList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqWatherList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqWatherList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqWatherList_descriptor_;
}

const ReqWatherList& ReqWatherList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqWatherList* ReqWatherList::default_instance_ = NULL;

ReqWatherList* ReqWatherList::New() const {
  return new ReqWatherList;
}

void ReqWatherList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    length_ = 0;
    paixu_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqWatherList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 length = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_paixu;
        break;
      }

      // required int32 paixu = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_paixu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paixu_)));
          set_has_paixu();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqWatherList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 length = 1;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // required int32 paixu = 2;
  if (has_paixu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->paixu(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqWatherList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 length = 1;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // required int32 paixu = 2;
  if (has_paixu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->paixu(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqWatherList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 length = 1;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->length());
    }

    // required int32 paixu = 2;
    if (has_paixu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->paixu());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqWatherList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqWatherList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqWatherList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqWatherList::MergeFrom(const ReqWatherList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_length()) {
      set_length(from.length());
    }
    if (from.has_paixu()) {
      set_paixu(from.paixu());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqWatherList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqWatherList::CopyFrom(const ReqWatherList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqWatherList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqWatherList::Swap(ReqWatherList* other) {
  if (other != this) {
    std::swap(length_, other->length_);
    std::swap(paixu_, other->paixu_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqWatherList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqWatherList_descriptor_;
  metadata.reflection = ReqWatherList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResWatherList::kResultFieldNumber;
const int ResWatherList::kSdkControllersFieldNumber;
#endif  // !_MSC_VER

ResWatherList::ResWatherList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResWatherList::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResWatherList::ResWatherList(const ResWatherList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResWatherList::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResWatherList::~ResWatherList() {
  SharedDtor();
}

void ResWatherList::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void ResWatherList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResWatherList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResWatherList_descriptor_;
}

const ResWatherList& ResWatherList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResWatherList* ResWatherList::default_instance_ = NULL;

ResWatherList* ResWatherList::New() const {
  return new ResWatherList;
}

void ResWatherList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
  }
  sdkcontrollers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResWatherList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sdkControllers;
        break;
      }

      // repeated .ProtoNet.SdkController sdkControllers = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sdkControllers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sdkcontrollers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sdkControllers;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResWatherList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // repeated .ProtoNet.SdkController sdkControllers = 2;
  for (int i = 0; i < this->sdkcontrollers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sdkcontrollers(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResWatherList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // repeated .ProtoNet.SdkController sdkControllers = 2;
  for (int i = 0; i < this->sdkcontrollers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->sdkcontrollers(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResWatherList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

  }
  // repeated .ProtoNet.SdkController sdkControllers = 2;
  total_size += 1 * this->sdkcontrollers_size();
  for (int i = 0; i < this->sdkcontrollers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sdkcontrollers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResWatherList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResWatherList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResWatherList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResWatherList::MergeFrom(const ResWatherList& from) {
  GOOGLE_CHECK_NE(&from, this);
  sdkcontrollers_.MergeFrom(from.sdkcontrollers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResWatherList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResWatherList::CopyFrom(const ResWatherList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResWatherList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  for (int i = 0; i < sdkcontrollers_size(); i++) {
    if (!this->sdkcontrollers(i).IsInitialized()) return false;
  }
  return true;
}

void ResWatherList::Swap(ResWatherList* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    sdkcontrollers_.Swap(&other->sdkcontrollers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResWatherList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResWatherList_descriptor_;
  metadata.reflection = ResWatherList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqOnceMore::ReqOnceMore()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqOnceMore::InitAsDefaultInstance() {
}

ReqOnceMore::ReqOnceMore(const ReqOnceMore& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqOnceMore::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqOnceMore::~ReqOnceMore() {
  SharedDtor();
}

void ReqOnceMore::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqOnceMore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqOnceMore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqOnceMore_descriptor_;
}

const ReqOnceMore& ReqOnceMore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ReqOnceMore* ReqOnceMore::default_instance_ = NULL;

ReqOnceMore* ReqOnceMore::New() const {
  return new ReqOnceMore;
}

void ReqOnceMore::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqOnceMore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqOnceMore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqOnceMore::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqOnceMore::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqOnceMore::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqOnceMore* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqOnceMore*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqOnceMore::MergeFrom(const ReqOnceMore& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqOnceMore::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqOnceMore::CopyFrom(const ReqOnceMore& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqOnceMore::IsInitialized() const {

  return true;
}

void ReqOnceMore::Swap(ReqOnceMore* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqOnceMore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqOnceMore_descriptor_;
  metadata.reflection = ReqOnceMore_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResOnceMore::kResultFieldNumber;
const int ResOnceMore::kTypeFieldNumber;
const int ResOnceMore::kRoomIdFieldNumber;
#endif  // !_MSC_VER

ResOnceMore::ResOnceMore()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResOnceMore::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResOnceMore::ResOnceMore(const ResOnceMore& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResOnceMore::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  type_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResOnceMore::~ResOnceMore() {
  SharedDtor();
}

void ResOnceMore::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete result_;
  }
}

void ResOnceMore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResOnceMore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResOnceMore_descriptor_;
}

const ResOnceMore& ResOnceMore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResOnceMore* ResOnceMore::default_instance_ = NULL;

ResOnceMore* ResOnceMore::New() const {
  return new ResOnceMore;
}

void ResOnceMore::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    type_ = 0;
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResOnceMore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_roomId;
        break;
      }

      // required string roomId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResOnceMore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // required int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required string roomId = 3;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->roomid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResOnceMore::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // required int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required string roomId = 3;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roomid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResOnceMore::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // required int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string roomId = 3;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResOnceMore::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResOnceMore* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResOnceMore*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResOnceMore::MergeFrom(const ResOnceMore& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResOnceMore::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResOnceMore::CopyFrom(const ResOnceMore& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResOnceMore::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResOnceMore::Swap(ResOnceMore* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(type_, other->type_);
    std::swap(roomid_, other->roomid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResOnceMore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResOnceMore_descriptor_;
  metadata.reflection = ResOnceMore_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResNotifyOnceMore::kResultFieldNumber;
const int ResNotifyOnceMore::kTypeFieldNumber;
const int ResNotifyOnceMore::kRoomIdFieldNumber;
#endif  // !_MSC_VER

ResNotifyOnceMore::ResNotifyOnceMore()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResNotifyOnceMore::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

ResNotifyOnceMore::ResNotifyOnceMore(const ResNotifyOnceMore& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResNotifyOnceMore::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  type_ = 0;
  roomid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResNotifyOnceMore::~ResNotifyOnceMore() {
  SharedDtor();
}

void ResNotifyOnceMore::SharedDtor() {
  if (roomid_ != &::google::protobuf::internal::kEmptyString) {
    delete roomid_;
  }
  if (this != default_instance_) {
    delete result_;
  }
}

void ResNotifyOnceMore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResNotifyOnceMore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResNotifyOnceMore_descriptor_;
}

const ResNotifyOnceMore& ResNotifyOnceMore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

ResNotifyOnceMore* ResNotifyOnceMore::default_instance_ = NULL;

ResNotifyOnceMore* ResNotifyOnceMore::New() const {
  return new ResNotifyOnceMore;
}

void ResNotifyOnceMore::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    type_ = 0;
    if (has_roomid()) {
      if (roomid_ != &::google::protobuf::internal::kEmptyString) {
        roomid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResNotifyOnceMore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_roomId;
        break;
      }

      // required string roomId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roomId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResNotifyOnceMore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // required int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required string roomId = 3;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->roomid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResNotifyOnceMore::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // required int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required string roomId = 3;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roomid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResNotifyOnceMore::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // required int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string roomId = 3;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResNotifyOnceMore::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResNotifyOnceMore* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResNotifyOnceMore*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResNotifyOnceMore::MergeFrom(const ResNotifyOnceMore& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResNotifyOnceMore::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResNotifyOnceMore::CopyFrom(const ResNotifyOnceMore& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNotifyOnceMore::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void ResNotifyOnceMore::Swap(ResNotifyOnceMore* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(type_, other->type_);
    std::swap(roomid_, other->roomid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResNotifyOnceMore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResNotifyOnceMore_descriptor_;
  metadata.reflection = ResNotifyOnceMore_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

reqLogicServerTime::reqLogicServerTime()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void reqLogicServerTime::InitAsDefaultInstance() {
}

reqLogicServerTime::reqLogicServerTime(const reqLogicServerTime& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void reqLogicServerTime::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

reqLogicServerTime::~reqLogicServerTime() {
  SharedDtor();
}

void reqLogicServerTime::SharedDtor() {
  if (this != default_instance_) {
  }
}

void reqLogicServerTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* reqLogicServerTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return reqLogicServerTime_descriptor_;
}

const reqLogicServerTime& reqLogicServerTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

reqLogicServerTime* reqLogicServerTime::default_instance_ = NULL;

reqLogicServerTime* reqLogicServerTime::New() const {
  return new reqLogicServerTime;
}

void reqLogicServerTime::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool reqLogicServerTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void reqLogicServerTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* reqLogicServerTime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int reqLogicServerTime::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void reqLogicServerTime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const reqLogicServerTime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const reqLogicServerTime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void reqLogicServerTime::MergeFrom(const reqLogicServerTime& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void reqLogicServerTime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void reqLogicServerTime::CopyFrom(const reqLogicServerTime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqLogicServerTime::IsInitialized() const {

  return true;
}

void reqLogicServerTime::Swap(reqLogicServerTime* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata reqLogicServerTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = reqLogicServerTime_descriptor_;
  metadata.reflection = reqLogicServerTime_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int resLogicServerTime::kResultFieldNumber;
const int resLogicServerTime::kServerTimeFieldNumber;
#endif  // !_MSC_VER

resLogicServerTime::resLogicServerTime()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void resLogicServerTime::InitAsDefaultInstance() {
  result_ = const_cast< ::ProtoNet::ResponseResult*>(&::ProtoNet::ResponseResult::default_instance());
}

resLogicServerTime::resLogicServerTime(const resLogicServerTime& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void resLogicServerTime::SharedCtor() {
  _cached_size_ = 0;
  result_ = NULL;
  servertime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

resLogicServerTime::~resLogicServerTime() {
  SharedDtor();
}

void resLogicServerTime::SharedDtor() {
  if (this != default_instance_) {
    delete result_;
  }
}

void resLogicServerTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* resLogicServerTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return resLogicServerTime_descriptor_;
}

const resLogicServerTime& resLogicServerTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgLogic_2eproto();
  return *default_instance_;
}

resLogicServerTime* resLogicServerTime::default_instance_ = NULL;

resLogicServerTime* resLogicServerTime::New() const {
  return new resLogicServerTime;
}

void resLogicServerTime::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_result()) {
      if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
    }
    servertime_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool resLogicServerTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ProtoNet.ResponseResult result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_serverTime;
        break;
      }

      // optional int64 serverTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_serverTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &servertime_)));
          set_has_servertime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void resLogicServerTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(), output);
  }

  // optional int64 serverTime = 2;
  if (has_servertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->servertime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* resLogicServerTime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ProtoNet.ResponseResult result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result(), target);
  }

  // optional int64 serverTime = 2;
  if (has_servertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->servertime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int resLogicServerTime::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ProtoNet.ResponseResult result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result());
    }

    // optional int64 serverTime = 2;
    if (has_servertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->servertime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void resLogicServerTime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const resLogicServerTime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const resLogicServerTime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void resLogicServerTime::MergeFrom(const resLogicServerTime& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      mutable_result()->::ProtoNet::ResponseResult::MergeFrom(from.result());
    }
    if (from.has_servertime()) {
      set_servertime(from.servertime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void resLogicServerTime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void resLogicServerTime::CopyFrom(const resLogicServerTime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resLogicServerTime::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_result()) {
    if (!this->result().IsInitialized()) return false;
  }
  return true;
}

void resLogicServerTime::Swap(resLogicServerTime* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(servertime_, other->servertime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata resLogicServerTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = resLogicServerTime_descriptor_;
  metadata.reflection = resLogicServerTime_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoNet

// @@protoc_insertion_point(global_scope)
