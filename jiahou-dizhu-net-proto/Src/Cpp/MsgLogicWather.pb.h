// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgLogicWather.proto

#ifndef PROTOBUF_MsgLogicWather_2eproto__INCLUDED
#define PROTOBUF_MsgLogicWather_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgCode.pb.h"
#include "MsgGate.pb.h"
#include "MsgLogic.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoNet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgLogicWather_2eproto();
void protobuf_AssignDesc_MsgLogicWather_2eproto();
void protobuf_ShutdownFile_MsgLogicWather_2eproto();

class ReqSeatDown;
class ResSeatDown;
class ReqBeWather;
class ResBeWather;
class ResNotifyAddWather;
class ResNotifyRemoveWather;

// ===================================================================

class ReqSeatDown : public ::google::protobuf::Message {
 public:
  ReqSeatDown();
  virtual ~ReqSeatDown();

  ReqSeatDown(const ReqSeatDown& from);

  inline ReqSeatDown& operator=(const ReqSeatDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSeatDown& default_instance();

  void Swap(ReqSeatDown* other);

  // implements Message ----------------------------------------------

  ReqSeatDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSeatDown& from);
  void MergeFrom(const ReqSeatDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoNet.ReqSeatDown)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MsgLogicWather_2eproto();
  friend void protobuf_AssignDesc_MsgLogicWather_2eproto();
  friend void protobuf_ShutdownFile_MsgLogicWather_2eproto();

  void InitAsDefaultInstance();
  static ReqSeatDown* default_instance_;
};
// -------------------------------------------------------------------

class ResSeatDown : public ::google::protobuf::Message {
 public:
  ResSeatDown();
  virtual ~ResSeatDown();

  ResSeatDown(const ResSeatDown& from);

  inline ResSeatDown& operator=(const ResSeatDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResSeatDown& default_instance();

  void Swap(ResSeatDown* other);

  // implements Message ----------------------------------------------

  ResSeatDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResSeatDown& from);
  void MergeFrom(const ResSeatDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoNet.ResponseResult result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::ProtoNet::ResponseResult& result() const;
  inline ::ProtoNet::ResponseResult* mutable_result();
  inline ::ProtoNet::ResponseResult* release_result();
  inline void set_allocated_result(::ProtoNet::ResponseResult* result);

  // @@protoc_insertion_point(class_scope:ProtoNet.ResSeatDown)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoNet::ResponseResult* result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MsgLogicWather_2eproto();
  friend void protobuf_AssignDesc_MsgLogicWather_2eproto();
  friend void protobuf_ShutdownFile_MsgLogicWather_2eproto();

  void InitAsDefaultInstance();
  static ResSeatDown* default_instance_;
};
// -------------------------------------------------------------------

class ReqBeWather : public ::google::protobuf::Message {
 public:
  ReqBeWather();
  virtual ~ReqBeWather();

  ReqBeWather(const ReqBeWather& from);

  inline ReqBeWather& operator=(const ReqBeWather& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBeWather& default_instance();

  void Swap(ReqBeWather* other);

  // implements Message ----------------------------------------------

  ReqBeWather* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBeWather& from);
  void MergeFrom(const ReqBeWather& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoNet.ReqBeWather)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MsgLogicWather_2eproto();
  friend void protobuf_AssignDesc_MsgLogicWather_2eproto();
  friend void protobuf_ShutdownFile_MsgLogicWather_2eproto();

  void InitAsDefaultInstance();
  static ReqBeWather* default_instance_;
};
// -------------------------------------------------------------------

class ResBeWather : public ::google::protobuf::Message {
 public:
  ResBeWather();
  virtual ~ResBeWather();

  ResBeWather(const ResBeWather& from);

  inline ResBeWather& operator=(const ResBeWather& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResBeWather& default_instance();

  void Swap(ResBeWather* other);

  // implements Message ----------------------------------------------

  ResBeWather* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResBeWather& from);
  void MergeFrom(const ResBeWather& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoNet.ResponseResult result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::ProtoNet::ResponseResult& result() const;
  inline ::ProtoNet::ResponseResult* mutable_result();
  inline ::ProtoNet::ResponseResult* release_result();
  inline void set_allocated_result(::ProtoNet::ResponseResult* result);

  // @@protoc_insertion_point(class_scope:ProtoNet.ResBeWather)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoNet::ResponseResult* result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MsgLogicWather_2eproto();
  friend void protobuf_AssignDesc_MsgLogicWather_2eproto();
  friend void protobuf_ShutdownFile_MsgLogicWather_2eproto();

  void InitAsDefaultInstance();
  static ResBeWather* default_instance_;
};
// -------------------------------------------------------------------

class ResNotifyAddWather : public ::google::protobuf::Message {
 public:
  ResNotifyAddWather();
  virtual ~ResNotifyAddWather();

  ResNotifyAddWather(const ResNotifyAddWather& from);

  inline ResNotifyAddWather& operator=(const ResNotifyAddWather& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResNotifyAddWather& default_instance();

  void Swap(ResNotifyAddWather* other);

  // implements Message ----------------------------------------------

  ResNotifyAddWather* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResNotifyAddWather& from);
  void MergeFrom(const ResNotifyAddWather& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoNet.SdkController sdkController = 1;
  inline bool has_sdkcontroller() const;
  inline void clear_sdkcontroller();
  static const int kSdkControllerFieldNumber = 1;
  inline const ::ProtoNet::SdkController& sdkcontroller() const;
  inline ::ProtoNet::SdkController* mutable_sdkcontroller();
  inline ::ProtoNet::SdkController* release_sdkcontroller();
  inline void set_allocated_sdkcontroller(::ProtoNet::SdkController* sdkcontroller);

  // @@protoc_insertion_point(class_scope:ProtoNet.ResNotifyAddWather)
 private:
  inline void set_has_sdkcontroller();
  inline void clear_has_sdkcontroller();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoNet::SdkController* sdkcontroller_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MsgLogicWather_2eproto();
  friend void protobuf_AssignDesc_MsgLogicWather_2eproto();
  friend void protobuf_ShutdownFile_MsgLogicWather_2eproto();

  void InitAsDefaultInstance();
  static ResNotifyAddWather* default_instance_;
};
// -------------------------------------------------------------------

class ResNotifyRemoveWather : public ::google::protobuf::Message {
 public:
  ResNotifyRemoveWather();
  virtual ~ResNotifyRemoveWather();

  ResNotifyRemoveWather(const ResNotifyRemoveWather& from);

  inline ResNotifyRemoveWather& operator=(const ResNotifyRemoveWather& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResNotifyRemoveWather& default_instance();

  void Swap(ResNotifyRemoveWather* other);

  // implements Message ----------------------------------------------

  ResNotifyRemoveWather* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResNotifyRemoveWather& from);
  void MergeFrom(const ResNotifyRemoveWather& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoNet.SdkController sdkController = 1;
  inline bool has_sdkcontroller() const;
  inline void clear_sdkcontroller();
  static const int kSdkControllerFieldNumber = 1;
  inline const ::ProtoNet::SdkController& sdkcontroller() const;
  inline ::ProtoNet::SdkController* mutable_sdkcontroller();
  inline ::ProtoNet::SdkController* release_sdkcontroller();
  inline void set_allocated_sdkcontroller(::ProtoNet::SdkController* sdkcontroller);

  // @@protoc_insertion_point(class_scope:ProtoNet.ResNotifyRemoveWather)
 private:
  inline void set_has_sdkcontroller();
  inline void clear_has_sdkcontroller();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoNet::SdkController* sdkcontroller_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MsgLogicWather_2eproto();
  friend void protobuf_AssignDesc_MsgLogicWather_2eproto();
  friend void protobuf_ShutdownFile_MsgLogicWather_2eproto();

  void InitAsDefaultInstance();
  static ResNotifyRemoveWather* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqSeatDown

// -------------------------------------------------------------------

// ResSeatDown

// required .ProtoNet.ResponseResult result = 1;
inline bool ResSeatDown::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResSeatDown::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResSeatDown::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResSeatDown::clear_result() {
  if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
  clear_has_result();
}
inline const ::ProtoNet::ResponseResult& ResSeatDown::result() const {
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::ProtoNet::ResponseResult* ResSeatDown::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::ProtoNet::ResponseResult;
  return result_;
}
inline ::ProtoNet::ResponseResult* ResSeatDown::release_result() {
  clear_has_result();
  ::ProtoNet::ResponseResult* temp = result_;
  result_ = NULL;
  return temp;
}
inline void ResSeatDown::set_allocated_result(::ProtoNet::ResponseResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
}

// -------------------------------------------------------------------

// ReqBeWather

// -------------------------------------------------------------------

// ResBeWather

// required .ProtoNet.ResponseResult result = 1;
inline bool ResBeWather::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResBeWather::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResBeWather::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResBeWather::clear_result() {
  if (result_ != NULL) result_->::ProtoNet::ResponseResult::Clear();
  clear_has_result();
}
inline const ::ProtoNet::ResponseResult& ResBeWather::result() const {
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::ProtoNet::ResponseResult* ResBeWather::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::ProtoNet::ResponseResult;
  return result_;
}
inline ::ProtoNet::ResponseResult* ResBeWather::release_result() {
  clear_has_result();
  ::ProtoNet::ResponseResult* temp = result_;
  result_ = NULL;
  return temp;
}
inline void ResBeWather::set_allocated_result(::ProtoNet::ResponseResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
}

// -------------------------------------------------------------------

// ResNotifyAddWather

// required .ProtoNet.SdkController sdkController = 1;
inline bool ResNotifyAddWather::has_sdkcontroller() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResNotifyAddWather::set_has_sdkcontroller() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResNotifyAddWather::clear_has_sdkcontroller() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResNotifyAddWather::clear_sdkcontroller() {
  if (sdkcontroller_ != NULL) sdkcontroller_->::ProtoNet::SdkController::Clear();
  clear_has_sdkcontroller();
}
inline const ::ProtoNet::SdkController& ResNotifyAddWather::sdkcontroller() const {
  return sdkcontroller_ != NULL ? *sdkcontroller_ : *default_instance_->sdkcontroller_;
}
inline ::ProtoNet::SdkController* ResNotifyAddWather::mutable_sdkcontroller() {
  set_has_sdkcontroller();
  if (sdkcontroller_ == NULL) sdkcontroller_ = new ::ProtoNet::SdkController;
  return sdkcontroller_;
}
inline ::ProtoNet::SdkController* ResNotifyAddWather::release_sdkcontroller() {
  clear_has_sdkcontroller();
  ::ProtoNet::SdkController* temp = sdkcontroller_;
  sdkcontroller_ = NULL;
  return temp;
}
inline void ResNotifyAddWather::set_allocated_sdkcontroller(::ProtoNet::SdkController* sdkcontroller) {
  delete sdkcontroller_;
  sdkcontroller_ = sdkcontroller;
  if (sdkcontroller) {
    set_has_sdkcontroller();
  } else {
    clear_has_sdkcontroller();
  }
}

// -------------------------------------------------------------------

// ResNotifyRemoveWather

// required .ProtoNet.SdkController sdkController = 1;
inline bool ResNotifyRemoveWather::has_sdkcontroller() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResNotifyRemoveWather::set_has_sdkcontroller() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResNotifyRemoveWather::clear_has_sdkcontroller() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResNotifyRemoveWather::clear_sdkcontroller() {
  if (sdkcontroller_ != NULL) sdkcontroller_->::ProtoNet::SdkController::Clear();
  clear_has_sdkcontroller();
}
inline const ::ProtoNet::SdkController& ResNotifyRemoveWather::sdkcontroller() const {
  return sdkcontroller_ != NULL ? *sdkcontroller_ : *default_instance_->sdkcontroller_;
}
inline ::ProtoNet::SdkController* ResNotifyRemoveWather::mutable_sdkcontroller() {
  set_has_sdkcontroller();
  if (sdkcontroller_ == NULL) sdkcontroller_ = new ::ProtoNet::SdkController;
  return sdkcontroller_;
}
inline ::ProtoNet::SdkController* ResNotifyRemoveWather::release_sdkcontroller() {
  clear_has_sdkcontroller();
  ::ProtoNet::SdkController* temp = sdkcontroller_;
  sdkcontroller_ = NULL;
  return temp;
}
inline void ResNotifyRemoveWather::set_allocated_sdkcontroller(::ProtoNet::SdkController* sdkcontroller) {
  delete sdkcontroller_;
  sdkcontroller_ = sdkcontroller;
  if (sdkcontroller) {
    set_has_sdkcontroller();
  } else {
    clear_has_sdkcontroller();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoNet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgLogicWather_2eproto__INCLUDED
